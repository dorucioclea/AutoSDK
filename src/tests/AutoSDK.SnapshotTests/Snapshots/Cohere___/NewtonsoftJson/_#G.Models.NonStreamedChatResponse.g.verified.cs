//HintName: G.Models.NonStreamedChatResponse.g.cs

#nullable enable

namespace G
{
    /// <summary>
    /// 
    /// </summary>
    public sealed partial class NonStreamedChatResponse
    {
        /// <summary>
        /// Contents of the reply generated by the model.
        /// </summary>
        [global::Newtonsoft.Json.JsonProperty("text", Required = global::Newtonsoft.Json.Required.Always)]
        public string Text { get; set; } = default!;

        /// <summary>
        /// Unique identifier for the generated reply. Useful for submitting feedback.
        /// </summary>
        [global::Newtonsoft.Json.JsonProperty("generation_id")]
        public global::System.Guid? GenerationId { get; set; }

        /// <summary>
        /// Inline citations for the generated reply.
        /// </summary>
        [global::Newtonsoft.Json.JsonProperty("citations")]
        public global::System.Collections.Generic.IList<global::G.ChatCitation>? Citations { get; set; }

        /// <summary>
        /// Documents seen by the model when generating the reply.
        /// </summary>
        [global::Newtonsoft.Json.JsonProperty("documents")]
        public global::System.Collections.Generic.IList<global::G.ChatDocument>? Documents { get; set; }

        /// <summary>
        /// Denotes that a search for documents is required during the RAG flow.
        /// </summary>
        [global::Newtonsoft.Json.JsonProperty("is_search_required")]
        public bool? IsSearchRequired { get; set; }

        /// <summary>
        /// Generated search queries, meant to be used as part of the RAG flow.
        /// </summary>
        [global::Newtonsoft.Json.JsonProperty("search_queries")]
        public global::System.Collections.Generic.IList<global::G.ChatSearchQuery>? SearchQueries { get; set; }

        /// <summary>
        /// Documents retrieved from each of the conducted searches.
        /// </summary>
        [global::Newtonsoft.Json.JsonProperty("search_results")]
        public global::System.Collections.Generic.IList<global::G.ChatSearchResult>? SearchResults { get; set; }

        /// <summary>
        /// 
        /// </summary>
        [global::Newtonsoft.Json.JsonProperty("finish_reason")]
        public global::G.FinishReason? FinishReason { get; set; }

        /// <summary>
        /// 
        /// </summary>
        [global::Newtonsoft.Json.JsonProperty("tool_calls")]
        public global::System.Collections.Generic.IList<global::G.ToolCall>? ToolCalls { get; set; }

        /// <summary>
        /// A list of previous messages between the user and the model, meant to give the model conversational context for responding to the user's `message`.
        /// </summary>
        [global::Newtonsoft.Json.JsonProperty("chat_history")]
        public global::System.Collections.Generic.IList<global::G.Message>? ChatHistory { get; set; }

        /// <summary>
        /// 
        /// </summary>
        [global::Newtonsoft.Json.JsonProperty("meta")]
        public global::G.ApiMeta? Meta { get; set; }

        /// <summary>
        /// Additional properties that are not explicitly defined in the schema
        /// </summary>
        [global::Newtonsoft.Json.JsonExtensionData]
        public global::System.Collections.Generic.IDictionary<string, object> AdditionalProperties { get; set; } = new global::System.Collections.Generic.Dictionary<string, object>();

        /// <summary>
        /// Initializes a new instance of the <see cref="NonStreamedChatResponse" /> class.
        /// </summary>
        /// <param name="text">
        /// Contents of the reply generated by the model.
        /// </param>
        /// <param name="generationId">
        /// Unique identifier for the generated reply. Useful for submitting feedback.
        /// </param>
        /// <param name="citations">
        /// Inline citations for the generated reply.
        /// </param>
        /// <param name="documents">
        /// Documents seen by the model when generating the reply.
        /// </param>
        /// <param name="isSearchRequired">
        /// Denotes that a search for documents is required during the RAG flow.
        /// </param>
        /// <param name="searchQueries">
        /// Generated search queries, meant to be used as part of the RAG flow.
        /// </param>
        /// <param name="searchResults">
        /// Documents retrieved from each of the conducted searches.
        /// </param>
        /// <param name="finishReason"></param>
        /// <param name="toolCalls"></param>
        /// <param name="chatHistory">
        /// A list of previous messages between the user and the model, meant to give the model conversational context for responding to the user's `message`.
        /// </param>
        /// <param name="meta"></param>
        public NonStreamedChatResponse(
            string text,
            global::System.Guid? generationId,
            global::System.Collections.Generic.IList<global::G.ChatCitation>? citations,
            global::System.Collections.Generic.IList<global::G.ChatDocument>? documents,
            bool? isSearchRequired,
            global::System.Collections.Generic.IList<global::G.ChatSearchQuery>? searchQueries,
            global::System.Collections.Generic.IList<global::G.ChatSearchResult>? searchResults,
            global::G.FinishReason? finishReason,
            global::System.Collections.Generic.IList<global::G.ToolCall>? toolCalls,
            global::System.Collections.Generic.IList<global::G.Message>? chatHistory,
            global::G.ApiMeta? meta)
        {
            this.Text = text ?? throw new global::System.ArgumentNullException(nameof(text));
            this.GenerationId = generationId;
            this.Citations = citations;
            this.Documents = documents;
            this.IsSearchRequired = isSearchRequired;
            this.SearchQueries = searchQueries;
            this.SearchResults = searchResults;
            this.FinishReason = finishReason;
            this.ToolCalls = toolCalls;
            this.ChatHistory = chatHistory;
            this.Meta = meta;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="NonStreamedChatResponse" /> class.
        /// </summary>
        public NonStreamedChatResponse()
        {
        }
    }
}