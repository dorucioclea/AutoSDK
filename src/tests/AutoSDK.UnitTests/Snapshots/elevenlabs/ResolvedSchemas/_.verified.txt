[
  AddChapterResponseModel(class)[projects],
    ChapterResponseModel(ref)[projects],
  ChapterResponseModel(class)[projects],
    ChapterId(string)[projects],
    Name(string)[projects],
    LastConversionDateUnix(int)[projects],
    LastBlockConversionUnixMs(int)[projects],
    ConversionProgress(double)[projects],
    CanBeDownloaded(bool)[projects],
    ChapterResponseModelState(enum)[projects],
    ChapterStatisticsResponseModel(ref)[projects],
  ChapterStatisticsResponseModel(class)[projects],
    CharactersUnconverted(int)[projects],
    CharactersConverted(int)[projects],
    ParagraphsConverted(int)[projects],
    ParagraphsUnconverted(int)[projects],
  AddProjectResponseModel(class)[projects],
    ProjectResponseModel(ref)[projects],
  ProjectResponseModel(class)[projects],
    ProjectId(string)[projects],
    Name(string)[projects],
    CreateDateUnix(int)[projects],
    DefaultTitleVoiceId(string)[projects],
    DefaultParagraphVoiceId(string)[projects],
    DefaultModelId(string)[projects],
    LastConversionDateUnix(int)[projects],
    CanBeDownloaded(bool)[projects],
    Title(string)[projects],
    Author(string)[projects],
    Description(string)[projects],
    Genres(array)[projects],
      GenresItem(string)[projects],
    CoverImageUrl(string)[projects],
    ProjectResponseModelTargetAudience(enum)[projects],
    Language(string)[projects],
    ContentType(string)[projects],
    OriginalPublicationDate(string)[projects],
    MatureContent(bool)[projects],
    IsbnNumber(string)[projects],
    VolumeNormalization(bool)[projects],
    ProjectResponseModelState(enum)[projects],
  AddPronunciationDictionaryResponseModel(class)[Pronunciation Dictionary],
    Id(string)[Pronunciation Dictionary],
    Name(string)[Pronunciation Dictionary],
    CreatedBy(string)[Pronunciation Dictionary],
    CreationTimeUnix(int)[Pronunciation Dictionary],
    VersionId(string)[Pronunciation Dictionary],
    Description(string)[Pronunciation Dictionary],
  AddPronunciationDictionaryRulesResponseModel(class)[Pronunciation Dictionary],
    Id(string)[Pronunciation Dictionary],
    VersionId(string)[Pronunciation Dictionary],
  AddVoiceResponseModel(class)[voices],
    VoiceId(string)[voices],
  AudioNativeCreateProjectResponseModel(class)[audio-native],
    ProjectId(string)[audio-native],
    Converting(bool)[audio-native],
    HtmlSnippet(string)[audio-native],
  BodyAddAPronunciationDictionaryV1PronunciationDictionariesAddFromFilePost(class)[Pronunciation Dictionary],
    Name(string)[Pronunciation Dictionary],
    File(byte[])[Pronunciation Dictionary],
    Description(string)[Pronunciation Dictionary],
    BodyAddAPronunciationDictionaryV1PronunciationDictionariesAddFromFilePostWorkspaceAccess(enum)[Pronunciation Dictionary],
  BodyAddChapterToAProjectV1ProjectsProjectIdChaptersAddPost(class)[projects],
    Name(string)[projects],
    FromUrl(string)[projects],
  BodyAddProjectV1ProjectsAddPost(class)[projects],
    Name(string)[projects],
    DefaultTitleVoiceId(string)[projects],
    DefaultParagraphVoiceId(string)[projects],
    DefaultModelId(string)[projects],
    FromUrl(string)[projects],
    FromDocument(byte[])[projects],
    QualityPreset(string)[projects],
    Title(string)[projects],
    Author(string)[projects],
    Description(string)[projects],
    Genres(array)[projects],
      GenresItem(string)[projects],
    BodyAddProjectV1ProjectsAddPostTargetAudience(enum)[projects],
    Language(string)[projects],
    ContentType(string)[projects],
    OriginalPublicationDate(string)[projects],
    MatureContent(bool)[projects],
    IsbnNumber(string)[projects],
    AcxVolumeNormalization(bool)[projects],
    VolumeNormalization(bool)[projects],
    PronunciationDictionaryLocators(array)[projects],
      PronunciationDictionaryLocatorsItem(string)[projects],
    CallbackUrl(string)[projects],
  BodyAddRulesToThePronunciationDictionaryV1PronunciationDictionariesPronunciationDictionaryIdAddRulesPost(class)[Pronunciation Dictionary],
    Rules(array)[Pronunciation Dictionary],
      RulesItem(anyOf)[Pronunciation Dictionary],
        PronunciationDictionaryAliasRuleRequestModel(ref)[Pronunciation Dictionary],
        PronunciationDictionaryPhonemeRuleRequestModel(ref)[Pronunciation Dictionary],
  PronunciationDictionaryAliasRuleRequestModel(class)[Pronunciation Dictionary],
    PronunciationDictionaryAliasRuleRequestModelType(enum)[Pronunciation Dictionary],
    StringToReplace(string)[Pronunciation Dictionary],
    Alias(string)[Pronunciation Dictionary],
  PronunciationDictionaryPhonemeRuleRequestModel(class)[Pronunciation Dictionary],
    PronunciationDictionaryPhonemeRuleRequestModelType(enum)[Pronunciation Dictionary],
    StringToReplace(string)[Pronunciation Dictionary],
    Phoneme(string)[Pronunciation Dictionary],
    Alphabet(string)[Pronunciation Dictionary],
  BodyAddSharingVoiceV1VoicesAddPublicUserIdVoiceIdPost(class)[voices],
    NewName(string)[voices],
  BodyAddVoiceV1VoicesAddPost(class)[voices],
    Name(string)[voices],
    Files(array)[voices],
      FilesItem(byte[])[voices],
    RemoveBackgroundNoise(bool)[voices],
    Description(string)[voices],
    Labels(string)[voices],
  BodyAudioIsolationStreamV1AudioIsolationStreamPost(class)[audio-isolation],
    Audio(byte[])[audio-isolation],
  BodyAudioIsolationV1AudioIsolationPost(class)[audio-isolation],
    Audio(byte[])[audio-isolation],
  BodyCreateAPreviouslyGeneratedVoiceV1VoiceGenerationCreateVoicePost(class)[voice-generation],
    VoiceName(string)[voice-generation],
    VoiceDescription(string)[voice-generation],
    GeneratedVoiceId(string)[voice-generation],
    PlayedNotSelectedVoiceIds(array)[voice-generation],
      PlayedNotSelectedVoiceIdsItem(string)[voice-generation],
    BodyCreateAPreviouslyGeneratedVoiceV1VoiceGenerationCreateVoicePostLabels(class)[voice-generation],
  BodyCreatesAudioNativeEnabledProjectV1AudioNativePost(class)[audio-native],
    Name(string)[audio-native],
    Image(string)[audio-native],
    Author(string)[audio-native],
    Title(string)[audio-native],
    Small(bool)[audio-native],
    TextColor(string)[audio-native],
    BackgroundColor(string)[audio-native],
    Sessionization(int)[audio-native],
    VoiceId(string)[audio-native],
    ModelId(string)[audio-native],
    File(byte[])[audio-native],
    AutoConvert(bool)[audio-native],
  BodyDeleteExistingInvitationV1WorkspaceInvitesDelete(class)[workspace],
    Email(string)[workspace],
  BodyDownloadHistoryItemsV1HistoryDownloadPost(class)[speech-history],
    HistoryItemIds(array)[speech-history],
      HistoryItemIdsItem(string)[speech-history],
    OutputFormat(string)[speech-history],
  BodyDubAVideoOrAnAudioFileV1DubbingPost(class)[dubbing],
    File(byte[])[dubbing],
    Name(string)[dubbing],
    SourceUrl(string)[dubbing],
    SourceLang(string)[dubbing],
    TargetLang(string)[dubbing],
    NumSpeakers(int)[dubbing],
    Watermark(bool)[dubbing],
    StartTime(int)[dubbing],
    EndTime(int)[dubbing],
    HighestResolution(bool)[dubbing],
    DropBackgroundAudio(bool)[dubbing],
    UseProfanityFilter(bool)[dubbing],
  BodyEditBasicProjectInfoV1ProjectsProjectIdPost(class)[projects],
    Name(string)[projects],
    DefaultTitleVoiceId(string)[projects],
    DefaultParagraphVoiceId(string)[projects],
    Title(string)[projects],
    Author(string)[projects],
    IsbnNumber(string)[projects],
    VolumeNormalization(bool)[projects],
  BodyEditVoiceV1VoicesVoiceIdEditPost(class)[voices],
    Name(string)[voices],
    Files(array)[voices],
      FilesItem(byte[])[voices],
    Description(string)[voices],
    Labels(string)[voices],
  BodyGenerateARandomVoiceV1VoiceGenerationGenerateVoicePost(class)[voice-generation],
    BodyGenerateARandomVoiceV1VoiceGenerationGenerateVoicePostGender(enum)[voice-generation],
    Accent(string)[voice-generation],
    BodyGenerateARandomVoiceV1VoiceGenerationGenerateVoicePostAge(enum)[voice-generation],
    AccentStrength(double)[voice-generation],
    Text(string)[voice-generation],
  BodyGetSimilarLibraryVoicesV1SimilarVoicesPost(class)[voices],
    AudioFile(byte[])[voices],
    SimilarityThreshold(double)[voices],
    TopK(int)[voices],
  BodyInviteUserV1WorkspaceInvitesAddPost(class)[workspace],
    Email(string)[workspace],
  BodyRemoveRulesFromThePronunciationDictionaryV1PronunciationDictionariesPronunciationDictionaryIdRemoveRulesPost(class)[Pronunciation Dictionary],
    RuleStrings(array)[Pronunciation Dictionary],
      RuleStringsItem(string)[Pronunciation Dictionary],
  BodySoundGenerationV1SoundGenerationPost(class)[sound-generation],
    Text(string)[sound-generation],
    DurationSeconds(double)[sound-generation],
    PromptInfluence(double)[sound-generation],
  BodySpeechToSpeechStreamingV1SpeechToSpeechVoiceIdStreamPost(class)[speech-to-speech],
    Audio(byte[])[speech-to-speech],
    ModelId(string)[speech-to-speech],
    VoiceSettings(string)[speech-to-speech],
    Seed(int)[speech-to-speech],
  BodySpeechToSpeechV1SpeechToSpeechVoiceIdPost(class)[speech-to-speech],
    Audio(byte[])[speech-to-speech],
    ModelId(string)[speech-to-speech],
    VoiceSettings(string)[speech-to-speech],
    Seed(int)[speech-to-speech],
  BodyStreamChapterAudioV1ProjectsProjectIdChaptersChapterIdSnapshotsChapterSnapshotIdStreamPost(class)[projects],
    ConvertToMpeg(bool)[projects],
  BodyStreamProjectAudioV1ProjectsProjectIdSnapshotsProjectSnapshotIdStreamPost(class)[projects],
    ConvertToMpeg(bool)[projects],
  BodyTextToSpeechStreamingV1TextToSpeechVoiceIdStreamPost(class)[text-to-speech],
    Text(string)[text-to-speech],
    ModelId(string)[text-to-speech],
    LanguageCode(string)[text-to-speech],
    VoiceSettings_AllOf1Wrapped(allOf)[text-to-speech],
      VoiceSettingsResponseModel(ref)[text-to-speech],
    PronunciationDictionaryLocators(array)[text-to-speech],
      PronunciationDictionaryVersionLocatorDBModel(ref)[text-to-speech],
    Seed(int)[text-to-speech],
    PreviousText(string)[text-to-speech],
    NextText(string)[text-to-speech],
    PreviousRequestIds(array)[text-to-speech],
      PreviousRequestIdsItem(string)[text-to-speech],
    NextRequestIds(array)[text-to-speech],
      NextRequestIdsItem(string)[text-to-speech],
    UsePvcAsIvc(bool)[text-to-speech],
  VoiceSettingsResponseModel(class)[voices, voice-generation, text-to-speech],
    Stability(double)[voices, voice-generation, text-to-speech],
    SimilarityBoost(double)[voices, voice-generation, text-to-speech],
    Style(double)[voices, voice-generation, text-to-speech],
    UseSpeakerBoost(bool)[voices, voice-generation, text-to-speech],
  PronunciationDictionaryVersionLocatorDBModel(class)[text-to-speech, projects],
    PronunciationDictionaryId(string)[text-to-speech, projects],
    VersionId(string)[text-to-speech, projects],
  BodyTextToSpeechStreamingWithTimestampsV1TextToSpeechVoiceIdStreamWithTimestampsPost(class)[text-to-speech],
    Text(string)[text-to-speech],
    ModelId(string)[text-to-speech],
    LanguageCode(string)[text-to-speech],
    VoiceSettings_AllOf1Wrapped2(allOf)[text-to-speech],
      VoiceSettingsResponseModel(ref)[text-to-speech],
    PronunciationDictionaryLocators(array)[text-to-speech],
      PronunciationDictionaryVersionLocatorDBModel(ref)[text-to-speech],
    Seed(int)[text-to-speech],
    PreviousText(string)[text-to-speech],
    NextText(string)[text-to-speech],
    PreviousRequestIds(array)[text-to-speech],
      PreviousRequestIdsItem(string)[text-to-speech],
    NextRequestIds(array)[text-to-speech],
      NextRequestIdsItem(string)[text-to-speech],
    UsePvcAsIvc(bool)[text-to-speech],
  BodyTextToSpeechV1TextToSpeechVoiceIdPost(class)[text-to-speech],
    Text(string)[text-to-speech],
    ModelId(string)[text-to-speech],
    LanguageCode(string)[text-to-speech],
    VoiceSettings_AllOf1Wrapped3(allOf)[text-to-speech],
      VoiceSettingsResponseModel(ref)[text-to-speech],
    PronunciationDictionaryLocators(array)[text-to-speech],
      PronunciationDictionaryVersionLocatorDBModel(ref)[text-to-speech],
    Seed(int)[text-to-speech],
    PreviousText(string)[text-to-speech],
    NextText(string)[text-to-speech],
    PreviousRequestIds(array)[text-to-speech],
      PreviousRequestIdsItem(string)[text-to-speech],
    NextRequestIds(array)[text-to-speech],
      NextRequestIdsItem(string)[text-to-speech],
    UsePvcAsIvc(bool)[text-to-speech],
  BodyTextToSpeechWithTimestampsV1TextToSpeechVoiceIdWithTimestampsPost(class)[text-to-speech],
    Text(string)[text-to-speech],
    ModelId(string)[text-to-speech],
    LanguageCode(string)[text-to-speech],
    VoiceSettings_AllOf1Wrapped4(allOf)[text-to-speech],
      VoiceSettingsResponseModel(ref)[text-to-speech],
    PronunciationDictionaryLocators(array)[text-to-speech],
      PronunciationDictionaryVersionLocatorDBModel(ref)[text-to-speech],
    Seed(int)[text-to-speech],
    PreviousText(string)[text-to-speech],
    NextText(string)[text-to-speech],
    PreviousRequestIds(array)[text-to-speech],
      PreviousRequestIdsItem(string)[text-to-speech],
    NextRequestIds(array)[text-to-speech],
      NextRequestIdsItem(string)[text-to-speech],
    UsePvcAsIvc(bool)[text-to-speech],
  BodyUpdatePronunciationDictionariesV1ProjectsProjectIdUpdatePronunciationDictionariesPost(class)[projects],
    PronunciationDictionaryLocators(array)[projects],
      PronunciationDictionaryVersionLocatorDBModel(ref)[projects],
  BodyUpdateMemberV1WorkspaceMembersPost(class)[workspace],
    Email(string)[workspace],
    IsLocked(bool)[workspace],
    BodyUpdateMemberV1WorkspaceMembersPostWorkspaceRole(enum)[workspace],
  ChapterSnapshotResponseModel(class)[projects],
    ChapterSnapshotId(string)[projects],
    ProjectId(string)[projects],
    ChapterId(string)[projects],
    CreatedAtUnix(int)[projects],
    Name(string)[projects],
  ChapterSnapshotsResponseModel(class)[projects],
    Snapshots(array)[projects],
      ChapterSnapshotResponseModel(ref)[projects],
  DoDubbingResponseModel(class)[dubbing],
    DubbingId(string)[dubbing],
    ExpectedDurationSec(double)[dubbing],
  DubbingMetadataResponse(class)[dubbing],
    DubbingId(string)[dubbing],
    Name(string)[dubbing],
    Status(string)[dubbing],
    TargetLanguages(array)[dubbing],
      TargetLanguagesItem(string)[dubbing],
    Error(string)[dubbing],
  EditProjectResponseModel(class)[projects],
    ProjectResponseModel(ref)[projects],
  ExtendedSubscriptionResponseModel(class)[user],
    Tier(string)[user],
    CharacterCount(int)[user],
    CharacterLimit(int)[user],
    CanExtendCharacterLimit(bool)[user],
    AllowedToExtendCharacterLimit(bool)[user],
    NextCharacterCountResetUnix(int)[user],
    VoiceLimit(int)[user],
    MaxVoiceAddEdits(int)[user],
    VoiceAddEditCounter(int)[user],
    ProfessionalVoiceLimit(int)[user],
    CanExtendVoiceLimit(bool)[user],
    CanUseInstantVoiceCloning(bool)[user],
    CanUseProfessionalVoiceCloning(bool)[user],
    ExtendedSubscriptionResponseModelCurrency(enum)[user],
    ExtendedSubscriptionResponseModelStatus(enum)[user],
    ExtendedSubscriptionResponseModelBillingPeriod(enum)[user],
    ExtendedSubscriptionResponseModelCharacterRefreshPeriod(enum)[user],
    InvoiceResponseModel(ref)[user],
    HasOpenInvoices(bool)[user],
  InvoiceResponseModel(class)[user],
    AmountDueCents(int)[user],
    NextPaymentAttemptUnix(int)[user],
  FeedbackResponseModel(class)[speech-history],
    ThumbsUp(bool)[speech-history],
    Feedback(string)[speech-history],
    Emotions(bool)[speech-history],
    InaccurateClone(bool)[speech-history],
    Glitches(bool)[speech-history],
    AudioQuality(bool)[speech-history],
    Other(bool)[speech-history],
    ReviewStatus(string)[speech-history],
  FineTuningResponseModel(class)[voice-generation, voices],
    IsAllowedToFineTune(bool)[voice-generation, voices],
    FineTuningResponseModelState(class)[voice-generation, voices],
    VerificationFailures(array)[voice-generation, voices],
      VerificationFailuresItem(string)[voice-generation, voices],
    VerificationAttemptsCount(int)[voice-generation, voices],
    ManualVerificationRequested(bool)[voice-generation, voices],
    Language(string)[voice-generation, voices],
    FineTuningResponseModelProgress(class)[voice-generation, voices],
    FineTuningResponseModelMessage(class)[voice-generation, voices],
    DatasetDurationSeconds(double)[voice-generation, voices],
    VerificationAttempts(array)[voice-generation, voices],
      VerificationAttemptResponseModel(ref)[voice-generation, voices],
    SliceIds(array)[voice-generation, voices],
      SliceIdsItem(string)[voice-generation, voices],
    ManualVerificationResponseModel(ref)[voice-generation, voices],
  VerificationAttemptResponseModel(class)[voice-generation, voices],
    Text(string)[voice-generation, voices],
    DateUnix(int)[voice-generation, voices],
    Accepted(bool)[voice-generation, voices],
    Similarity(double)[voice-generation, voices],
    LevenshteinDistance(double)[voice-generation, voices],
    RecordingResponseModel(ref)[voice-generation, voices],
  RecordingResponseModel(class)[voice-generation, voices],
    RecordingId(string)[voice-generation, voices],
    MimeType(string)[voice-generation, voices],
    SizeBytes(int)[voice-generation, voices],
    UploadDateUnix(int)[voice-generation, voices],
    Transcription(string)[voice-generation, voices],
  ManualVerificationResponseModel(class)[voice-generation, voices],
    ExtraText(string)[voice-generation, voices],
    RequestTimeUnix(int)[voice-generation, voices],
    Files(array)[voice-generation, voices],
      ManualVerificationFileResponseModel(ref)[voice-generation, voices],
  ManualVerificationFileResponseModel(class)[voice-generation, voices],
    FileId(string)[voice-generation, voices],
    FileName(string)[voice-generation, voices],
    MimeType(string)[voice-generation, voices],
    SizeBytes(int)[voice-generation, voices],
    UploadDateUnix(int)[voice-generation, voices],
  GetChaptersResponseModel(class)[projects],
    Chapters(array)[projects],
      ChapterResponseModel(ref)[projects],
  GetLibraryVoicesResponseModel(class)[voices],
    Voices(array)[voices],
      LibraryVoiceResponseModel(ref)[voices],
    HasMore(bool)[voices],
    LastSortId(string)[voices],
  LibraryVoiceResponseModel(class)[voices],
    PublicOwnerId(string)[voices],
    VoiceId(string)[voices],
    DateUnix(int)[voices],
    Name(string)[voices],
    Accent(string)[voices],
    Gender(string)[voices],
    Age(string)[voices],
    Descriptive(string)[voices],
    UseCase(string)[voices],
    LibraryVoiceResponseModelCategory(enum)[voices],
    Language(string)[voices],
    Description(string)[voices],
    PreviewUrl(string)[voices],
    UsageCharacterCount1y(int)[voices],
    UsageCharacterCount7d(int)[voices],
    PlayApiUsageCharacterCount1y(int)[voices],
    ClonedByCount(int)[voices],
    Rate(double)[voices],
    FreeUsersAllowed(bool)[voices],
    LiveModerationEnabled(bool)[voices],
    Featured(bool)[voices],
    NoticePeriod(int)[voices],
    InstagramUsername(string)[voices],
    TwitterUsername(string)[voices],
    YoutubeUsername(string)[voices],
    TiktokUsername(string)[voices],
    ImageUrl(string)[voices],
  GetProjectsResponseModel(class)[projects],
    Projects(array)[projects],
      ProjectResponseModel(ref)[projects],
  GetPronunciationDictionariesMetadataResponseModel(class)[Pronunciation Dictionary],
    PronunciationDictionaries(array)[Pronunciation Dictionary],
      GetPronunciationDictionaryMetadataResponseModel(ref)[Pronunciation Dictionary],
    NextCursor(string)[Pronunciation Dictionary],
    HasMore(bool)[Pronunciation Dictionary],
  GetPronunciationDictionaryMetadataResponseModel(class)[Pronunciation Dictionary],
    Id(string)[Pronunciation Dictionary],
    LatestVersionId(string)[Pronunciation Dictionary],
    Name(string)[Pronunciation Dictionary],
    CreatedBy(string)[Pronunciation Dictionary],
    CreationTimeUnix(int)[Pronunciation Dictionary],
    Description(string)[Pronunciation Dictionary],
  GetSpeechHistoryResponseModel(class)[speech-history],
    History(array)[speech-history],
      SpeechHistoryItemResponseModel(ref)[speech-history],
    LastHistoryItemId(string)[speech-history],
    HasMore(bool)[speech-history],
  SpeechHistoryItemResponseModel(class)[speech-history],
    HistoryItemId(string)[speech-history],
    RequestId(string)[speech-history],
    VoiceId(string)[speech-history],
    ModelId(string)[speech-history],
    VoiceName(string)[speech-history],
    SpeechHistoryItemResponseModelVoiceCategory(enum)[speech-history],
    Text(string)[speech-history],
    DateUnix(int)[speech-history],
    CharacterCountChangeFrom(int)[speech-history],
    CharacterCountChangeTo(int)[speech-history],
    ContentType(string)[speech-history],
    SpeechHistoryItemResponseModelState(enum)[speech-history],
    SpeechHistoryItemResponseModelSettings(class)[speech-history],
    FeedbackResponseModel(ref)[speech-history],
    ShareLinkId(string)[speech-history],
    SpeechHistoryItemResponseModelSource(enum)[speech-history],
    HistoryAlignmentsResponseModel(ref)[speech-history],
  HistoryAlignmentsResponseModel(class)[speech-history],
    HistoryAlignmentResponseModel(ref)[speech-history],
    HistoryAlignmentResponseModel(ref)[speech-history],
  HistoryAlignmentResponseModel(class)[speech-history],
    Characters(array)[speech-history],
      CharactersItem(string)[speech-history],
    CharacterStartTimesSeconds(array)[speech-history],
      CharacterStartTimesSecondsItem(double)[speech-history],
    CharacterEndTimesSeconds(array)[speech-history],
      CharacterEndTimesSecondsItem(double)[speech-history],
  GetVoicesResponseModel(class)[voices],
    Voices(array)[voices],
      VoiceResponseModel(ref)[voices],
  VoiceResponseModel(class)[voice-generation, voices],
    VoiceId(string)[voice-generation, voices],
    Name(string)[voice-generation, voices],
    Samples(array)[voice-generation, voices],
      SampleResponseModel(ref)[voice-generation, voices],
    VoiceResponseModelCategory(enum)[voice-generation, voices],
    FineTuningResponseModel(ref)[voice-generation, voices],
    VoiceResponseModelLabels(class)[voice-generation, voices],
    Description(string)[voice-generation, voices],
    PreviewUrl(string)[voice-generation, voices],
    AvailableForTiers(array)[voice-generation, voices],
      AvailableForTiersItem(string)[voice-generation, voices],
    VoiceSettingsResponseModel(ref)[voice-generation, voices],
    VoiceSharingResponseModel(ref)[voice-generation, voices],
    HighQualityBaseModelIds(array)[voice-generation, voices],
      HighQualityBaseModelIdsItem(string)[voice-generation, voices],
    VoiceResponseModelSafetyControl(enum)[voice-generation, voices],
    VoiceVerificationResponseModel(ref)[voice-generation, voices],
    PermissionOnResource(string)[voice-generation, voices],
    IsLegacy(bool)[voice-generation, voices],
    IsMixed(bool)[voice-generation, voices],
  SampleResponseModel(class)[voice-generation, voices],
    SampleId(string)[voice-generation, voices],
    FileName(string)[voice-generation, voices],
    MimeType(string)[voice-generation, voices],
    SizeBytes(int)[voice-generation, voices],
    Hash(string)[voice-generation, voices],
  VoiceSharingResponseModel(class)[voice-generation, voices],
    VoiceSharingResponseModelStatus(enum)[voice-generation, voices],
    HistoryItemSampleId(string)[voice-generation, voices],
    DateUnix(int)[voice-generation, voices],
    WhitelistedEmails(array)[voice-generation, voices],
      WhitelistedEmailsItem(string)[voice-generation, voices],
    PublicOwnerId(string)[voice-generation, voices],
    OriginalVoiceId(string)[voice-generation, voices],
    FinancialRewardsEnabled(bool)[voice-generation, voices],
    FreeUsersAllowed(bool)[voice-generation, voices],
    LiveModerationEnabled(bool)[voice-generation, voices],
    Rate(double)[voice-generation, voices],
    NoticePeriod(int)[voice-generation, voices],
    DisableAtUnix(int)[voice-generation, voices],
    VoiceMixingAllowed(bool)[voice-generation, voices],
    Featured(bool)[voice-generation, voices],
    VoiceSharingResponseModelCategory(enum)[voice-generation, voices],
    ReaderAppEnabled(bool)[voice-generation, voices],
    ImageUrl(string)[voice-generation, voices],
    BanReason(string)[voice-generation, voices],
    LikedByCount(int)[voice-generation, voices],
    ClonedByCount(int)[voice-generation, voices],
    Name(string)[voice-generation, voices],
    Description(string)[voice-generation, voices],
    VoiceSharingResponseModelLabels(class)[voice-generation, voices],
    VoiceSharingResponseModelReviewStatus(enum)[voice-generation, voices],
    ReviewMessage(string)[voice-generation, voices],
    EnabledInLibrary(bool)[voice-generation, voices],
    InstagramUsername(string)[voice-generation, voices],
    TwitterUsername(string)[voice-generation, voices],
    YoutubeUsername(string)[voice-generation, voices],
    TiktokUsername(string)[voice-generation, voices],
  VoiceVerificationResponseModel(class)[voice-generation, voices],
    RequiresVerification(bool)[voice-generation, voices],
    IsVerified(bool)[voice-generation, voices],
    VerificationFailures(array)[voice-generation, voices],
      VerificationFailuresItem(string)[voice-generation, voices],
    VerificationAttemptsCount(int)[voice-generation, voices],
    Language(string)[voice-generation, voices],
    VerificationAttempts(array)[voice-generation, voices],
      VerificationAttemptResponseModel(ref)[voice-generation, voices],
  HTTPValidationError(class)[speech-history, sound-generation, audio-isolation, samples, text-to-speech, speech-to-speech, voice-generation, user, voices, projects, dubbing, workspace, models, audio-native, usage, Pronunciation Dictionary],
    Detail(array)[speech-history, sound-generation, audio-isolation, samples, text-to-speech, speech-to-speech, voice-generation, user, voices, projects, dubbing, workspace, models, audio-native, usage, Pronunciation Dictionary],
      ValidationError(ref)[speech-history, sound-generation, audio-isolation, samples, text-to-speech, speech-to-speech, voice-generation, user, voices, projects, dubbing, workspace, models, audio-native, usage, Pronunciation Dictionary],
  ValidationError(class)[speech-history, sound-generation, audio-isolation, samples, text-to-speech, speech-to-speech, voice-generation, user, voices, projects, dubbing, workspace, models, audio-native, usage, Pronunciation Dictionary],
    Loc(array)[speech-history, sound-generation, audio-isolation, samples, text-to-speech, speech-to-speech, voice-generation, user, voices, projects, dubbing, workspace, models, audio-native, usage, Pronunciation Dictionary],
      LocItem(anyOf)[speech-history, sound-generation, audio-isolation, samples, text-to-speech, speech-to-speech, voice-generation, user, voices, projects, dubbing, workspace, models, audio-native, usage, Pronunciation Dictionary],
        LocItemVariant1(string)[speech-history, sound-generation, audio-isolation, samples, text-to-speech, speech-to-speech, voice-generation, user, voices, projects, dubbing, workspace, models, audio-native, usage, Pronunciation Dictionary],
        LocItemVariant2(int)[speech-history, sound-generation, audio-isolation, samples, text-to-speech, speech-to-speech, voice-generation, user, voices, projects, dubbing, workspace, models, audio-native, usage, Pronunciation Dictionary],
    Msg(string)[speech-history, sound-generation, audio-isolation, samples, text-to-speech, speech-to-speech, voice-generation, user, voices, projects, dubbing, workspace, models, audio-native, usage, Pronunciation Dictionary],
    Type(string)[speech-history, sound-generation, audio-isolation, samples, text-to-speech, speech-to-speech, voice-generation, user, voices, projects, dubbing, workspace, models, audio-native, usage, Pronunciation Dictionary],
  LanguageResponseModel(class)[models],
    LanguageId(string)[models],
    Name(string)[models],
  ModelRatesResponseModel(class)[models],
    CharacterCostMultiplier(double)[models],
  ModelResponseModel(class)[models],
    ModelId(string)[models],
    Name(string)[models],
    CanBeFinetuned(bool)[models],
    CanDoTextToSpeech(bool)[models],
    CanDoVoiceConversion(bool)[models],
    CanUseStyle(bool)[models],
    CanUseSpeakerBoost(bool)[models],
    ServesProVoices(bool)[models],
    TokenCostFactor(double)[models],
    Description(string)[models],
    RequiresAlphaAccess(bool)[models],
    MaxCharactersRequestFreeUser(int)[models],
    MaxCharactersRequestSubscribedUser(int)[models],
    MaximumTextLengthPerRequest(int)[models],
    Languages(array)[models],
      LanguageResponseModel(ref)[models],
    ModelRatesResponseModel(ref)[models],
    ModelResponseModelConcurrencyGroup(enum)[models],
  ProfilePageResponseModel(class)[voices],
    Handle(string)[voices],
    PublicUserId(string)[voices],
    Name(string)[voices],
    Bio(string)[voices],
    ProfilePicture(string)[voices],
  ProjectExtendedResponseModel(class)[projects],
    ProjectId(string)[projects],
    Name(string)[projects],
    CreateDateUnix(int)[projects],
    DefaultTitleVoiceId(string)[projects],
    DefaultParagraphVoiceId(string)[projects],
    DefaultModelId(string)[projects],
    ProjectExtendedResponseModelQualityPreset(enum)[projects],
    LastConversionDateUnix(int)[projects],
    CanBeDownloaded(bool)[projects],
    ProjectExtendedResponseModelState(enum)[projects],
    Chapters(array)[projects],
      ChapterResponseModel(ref)[projects],
    PronunciationDictionaryVersions(array)[projects],
      PronunciationDictionaryVersionResponseModel(ref)[projects],
    VolumeNormalization(bool)[projects],
    Title(string)[projects],
    Author(string)[projects],
    Description(string)[projects],
    Genres(array)[projects],
      GenresItem(string)[projects],
    CoverImageUrl(string)[projects],
    ProjectExtendedResponseModelTargetAudience(enum)[projects],
    Language(string)[projects],
    ContentType(string)[projects],
    OriginalPublicationDate(string)[projects],
    MatureContent(bool)[projects],
    IsbnNumber(string)[projects],
  PronunciationDictionaryVersionResponseModel(class)[projects],
    VersionId(string)[projects],
    PronunciationDictionaryId(string)[projects],
    DictionaryName(string)[projects],
    VersionName(string)[projects],
    CreatedBy(string)[projects],
    CreationTimeUnix(int)[projects],
  ProjectSnapshotResponseModel(class)[projects],
    ProjectSnapshotId(string)[projects],
    ProjectId(string)[projects],
    CreatedAtUnix(int)[projects],
    Name(string)[projects],
    ProjectSnapshotUploadResponseModel(ref)[projects],
    ProjectSnapshotUploadResponseModel(ref)[projects],
  ProjectSnapshotUploadResponseModel(class)[projects],
    ProjectSnapshotUploadResponseModelStatus(enum)[],
    AcxVolumeNormalization(bool)[],
  ProjectSnapshotsResponseModel(class)[projects],
    Snapshots(array)[projects],
      ProjectSnapshotResponseModel(ref)[projects],
  RemovePronunciationDictionaryRulesResponseModel(class)[Pronunciation Dictionary],
    Id(string)[Pronunciation Dictionary],
    VersionId(string)[Pronunciation Dictionary],
  SsoProviderResponseModel(class)[workspace],
    SsoProviderResponseModelProviderType(enum)[workspace],
    ProviderId(string)[workspace],
    Domains(array)[workspace],
      DomainsItem(string)[workspace],
  SubscriptionResponseModel(class)[user],
    Tier(string)[user],
    CharacterCount(int)[user],
    CharacterLimit(int)[user],
    CanExtendCharacterLimit(bool)[user],
    AllowedToExtendCharacterLimit(bool)[user],
    NextCharacterCountResetUnix(int)[user],
    VoiceLimit(int)[user],
    MaxVoiceAddEdits(int)[user],
    VoiceAddEditCounter(int)[user],
    ProfessionalVoiceLimit(int)[user],
    CanExtendVoiceLimit(bool)[user],
    CanUseInstantVoiceCloning(bool)[user],
    CanUseProfessionalVoiceCloning(bool)[user],
    SubscriptionResponseModelCurrency(enum)[user],
    SubscriptionResponseModelStatus(enum)[user],
    SubscriptionResponseModelBillingPeriod(enum)[user],
    SubscriptionResponseModelCharacterRefreshPeriod(enum)[user],
  UsageCharactersResponseModel(class)[usage],
    Time(array)[usage],
      TimeItem(int)[usage],
    UsageCharactersResponseModelUsage(class)[usage],
  UserResponseModel(class)[user],
    SubscriptionResponseModel(ref)[user],
    IsNewUser(bool)[user],
    XiApiKey(string)[user],
    CanUseDelayedPaymentMethods(bool)[user],
    IsOnboardingCompleted(bool)[user],
    IsOnboardingChecklistCompleted(bool)[user],
    FirstName(string)[user],
    IsApiKeyHashed(bool)[user],
    XiApiKeyPreview(string)[user],
  VoiceGenerationParameterOptionResponseModel(class)[voice-generation],
    Name(string)[voice-generation],
    Code(string)[voice-generation],
  VoiceGenerationParameterResponseModel(class)[voice-generation],
    Genders(array)[voice-generation],
      VoiceGenerationParameterOptionResponseModel(ref)[voice-generation],
    Accents(array)[voice-generation],
      VoiceGenerationParameterOptionResponseModel(ref)[voice-generation],
    Ages(array)[voice-generation],
      VoiceGenerationParameterOptionResponseModel(ref)[voice-generation],
    MinimumCharacters(int)[voice-generation],
    MaximumCharacters(int)[voice-generation],
    MinimumAccentStrength(double)[voice-generation],
    MaximumAccentStrength(double)[voice-generation],
  BodyDownloadHistoryItemsV1HistoryDownloadPost(ref)[speech-history],
  BodySoundGenerationV1SoundGenerationPost(ref)[sound-generation],
  BodyAudioIsolationV1AudioIsolationPost(ref)[audio-isolation],
  BodyAudioIsolationStreamV1AudioIsolationStreamPost(ref)[audio-isolation],
  BodyTextToSpeechV1TextToSpeechVoiceIdPost(ref)[text-to-speech],
  BodyTextToSpeechWithTimestampsV1TextToSpeechVoiceIdWithTimestampsPost(ref)[text-to-speech],
  BodyTextToSpeechStreamingV1TextToSpeechVoiceIdStreamPost(ref)[text-to-speech],
  BodyTextToSpeechStreamingWithTimestampsV1TextToSpeechVoiceIdStreamWithTimestampsPost(ref)[text-to-speech],
  BodySpeechToSpeechV1SpeechToSpeechVoiceIdPost(ref)[speech-to-speech],
  BodySpeechToSpeechStreamingV1SpeechToSpeechVoiceIdStreamPost(ref)[speech-to-speech],
  BodyGenerateARandomVoiceV1VoiceGenerationGenerateVoicePost(ref)[voice-generation],
  BodyCreateAPreviouslyGeneratedVoiceV1VoiceGenerationCreateVoicePost(ref)[voice-generation],
  EditVoiceSettingsV1VoicesVoiceIdSettingsEditPostRequest(allOf)[voices],
    VoiceSettingsResponseModel(ref)[voices],
  BodyAddVoiceV1VoicesAddPost(ref)[voices],
  BodyEditVoiceV1VoicesVoiceIdEditPost(ref)[voices],
  BodyAddSharingVoiceV1VoicesAddPublicUserIdVoiceIdPost(ref)[voices],
  BodyAddProjectV1ProjectsAddPost(ref)[projects],
  BodyEditBasicProjectInfoV1ProjectsProjectIdPost(ref)[projects],
  BodyStreamProjectAudioV1ProjectsProjectIdSnapshotsProjectSnapshotIdStreamPost(ref)[projects],
  BodyAddChapterToAProjectV1ProjectsProjectIdChaptersAddPost(ref)[projects],
  BodyStreamChapterAudioV1ProjectsProjectIdChaptersChapterIdSnapshotsChapterSnapshotIdStreamPost(ref)[projects],
  BodyUpdatePronunciationDictionariesV1ProjectsProjectIdUpdatePronunciationDictionariesPost(ref)[projects],
  BodyDubAVideoOrAnAudioFileV1DubbingPost(ref)[dubbing],
  BodyCreatesAudioNativeEnabledProjectV1AudioNativePost(ref)[audio-native],
  BodyGetSimilarLibraryVoicesV1SimilarVoicesPost(ref)[voices],
  BodyAddAPronunciationDictionaryV1PronunciationDictionariesAddFromFilePost(ref)[Pronunciation Dictionary],
  BodyAddRulesToThePronunciationDictionaryV1PronunciationDictionariesPronunciationDictionaryIdAddRulesPost(ref)[Pronunciation Dictionary],
  BodyRemoveRulesFromThePronunciationDictionaryV1PronunciationDictionariesPronunciationDictionaryIdRemoveRulesPost(ref)[Pronunciation Dictionary],
  BodyInviteUserV1WorkspaceInvitesAddPost(ref)[workspace],
  BodyDeleteExistingInvitationV1WorkspaceInvitesDelete(ref)[workspace],
  BodyUpdateMemberV1WorkspaceMembersPost(ref)[workspace],
  GetGeneratedItemsV1HistoryGetPageSize(int)[speech-history],
  GetGeneratedItemsV1HistoryGetStartAfterHistoryItemId(string)[speech-history],
  GetGeneratedItemsV1HistoryGetVoiceId(string)[speech-history],
  GetGeneratedItemsV1HistoryGetXiApiKey(string)[speech-history],
  GetHistoryItemByIDV1HistoryHistoryItemIdGetHistoryItemId(string)[speech-history],
  GetHistoryItemByIDV1HistoryHistoryItemIdGetXiApiKey(string)[speech-history],
  DeleteHistoryItemV1HistoryHistoryItemIdDeleteHistoryItemId(string)[speech-history],
  DeleteHistoryItemV1HistoryHistoryItemIdDeleteXiApiKey(string)[speech-history],
  GetAudioFromHistoryItemV1HistoryHistoryItemIdAudioGetHistoryItemId(string)[speech-history],
  GetAudioFromHistoryItemV1HistoryHistoryItemIdAudioGetXiApiKey(string)[speech-history],
  DownloadHistoryItemsV1HistoryDownloadPostXiApiKey(string)[speech-history],
  SoundGenerationV1SoundGenerationPostXiApiKey(string)[sound-generation],
  AudioIsolationV1AudioIsolationPostXiApiKey(string)[audio-isolation],
  AudioIsolationStreamV1AudioIsolationStreamPostXiApiKey(string)[audio-isolation],
  DeleteSampleV1VoicesVoiceIdSamplesSampleIdDeleteVoiceId(string)[samples],
  DeleteSampleV1VoicesVoiceIdSamplesSampleIdDeleteSampleId(string)[samples],
  DeleteSampleV1VoicesVoiceIdSamplesSampleIdDeleteXiApiKey(string)[samples],
  GetAudioFromSampleV1VoicesVoiceIdSamplesSampleIdAudioGetVoiceId(string)[samples],
  GetAudioFromSampleV1VoicesVoiceIdSamplesSampleIdAudioGetSampleId(string)[samples],
  GetAudioFromSampleV1VoicesVoiceIdSamplesSampleIdAudioGetXiApiKey(string)[samples],
  TextToSpeechV1TextToSpeechVoiceIdPostVoiceId(string)[text-to-speech],
  TextToSpeechV1TextToSpeechVoiceIdPostEnableLogging(bool)[text-to-speech],
  TextToSpeechV1TextToSpeechVoiceIdPostOptimizeStreamingLatency(int)[text-to-speech],
  TextToSpeechV1TextToSpeechVoiceIdPostOutputFormat(string)[text-to-speech],
  TextToSpeechV1TextToSpeechVoiceIdPostXiApiKey(string)[text-to-speech],
  TextToSpeechWithTimestampsV1TextToSpeechVoiceIdWithTimestampsPostVoiceId(string)[text-to-speech],
  TextToSpeechWithTimestampsV1TextToSpeechVoiceIdWithTimestampsPostEnableLogging(bool)[text-to-speech],
  TextToSpeechWithTimestampsV1TextToSpeechVoiceIdWithTimestampsPostOptimizeStreamingLatency(int)[text-to-speech],
  TextToSpeechWithTimestampsV1TextToSpeechVoiceIdWithTimestampsPostOutputFormat(string)[text-to-speech],
  TextToSpeechWithTimestampsV1TextToSpeechVoiceIdWithTimestampsPostXiApiKey(string)[text-to-speech],
  TextToSpeechStreamingV1TextToSpeechVoiceIdStreamPostVoiceId(string)[text-to-speech],
  TextToSpeechStreamingV1TextToSpeechVoiceIdStreamPostEnableLogging(bool)[text-to-speech],
  TextToSpeechStreamingV1TextToSpeechVoiceIdStreamPostOptimizeStreamingLatency(int)[text-to-speech],
  TextToSpeechStreamingV1TextToSpeechVoiceIdStreamPostOutputFormat(string)[text-to-speech],
  TextToSpeechStreamingV1TextToSpeechVoiceIdStreamPostXiApiKey(string)[text-to-speech],
  TextToSpeechStreamingWithTimestampsV1TextToSpeechVoiceIdStreamWithTimestampsPostVoiceId(string)[text-to-speech],
  TextToSpeechStreamingWithTimestampsV1TextToSpeechVoiceIdStreamWithTimestampsPostEnableLogging(bool)[text-to-speech],
  TextToSpeechStreamingWithTimestampsV1TextToSpeechVoiceIdStreamWithTimestampsPostOptimizeStreamingLatency(int)[text-to-speech],
  TextToSpeechStreamingWithTimestampsV1TextToSpeechVoiceIdStreamWithTimestampsPostOutputFormat(string)[text-to-speech],
  TextToSpeechStreamingWithTimestampsV1TextToSpeechVoiceIdStreamWithTimestampsPostXiApiKey(string)[text-to-speech],
  SpeechToSpeechV1SpeechToSpeechVoiceIdPostVoiceId(string)[speech-to-speech],
  SpeechToSpeechV1SpeechToSpeechVoiceIdPostEnableLogging(bool)[speech-to-speech],
  SpeechToSpeechV1SpeechToSpeechVoiceIdPostOptimizeStreamingLatency(int)[speech-to-speech],
  SpeechToSpeechV1SpeechToSpeechVoiceIdPostOutputFormat(string)[speech-to-speech],
  SpeechToSpeechV1SpeechToSpeechVoiceIdPostXiApiKey(string)[speech-to-speech],
  SpeechToSpeechStreamingV1SpeechToSpeechVoiceIdStreamPostVoiceId(string)[speech-to-speech],
  SpeechToSpeechStreamingV1SpeechToSpeechVoiceIdStreamPostEnableLogging(bool)[speech-to-speech],
  SpeechToSpeechStreamingV1SpeechToSpeechVoiceIdStreamPostOptimizeStreamingLatency(int)[speech-to-speech],
  SpeechToSpeechStreamingV1SpeechToSpeechVoiceIdStreamPostOutputFormat(string)[speech-to-speech],
  SpeechToSpeechStreamingV1SpeechToSpeechVoiceIdStreamPostXiApiKey(string)[speech-to-speech],
  GenerateARandomVoiceV1VoiceGenerationGenerateVoicePostXiApiKey(string)[voice-generation],
  CreateAPreviouslyGeneratedVoiceV1VoiceGenerationCreateVoicePostXiApiKey(string)[voice-generation],
  GetUserSubscriptionInfoV1UserSubscriptionGetXiApiKey(string)[user],
  GetUserInfoV1UserGetXiApiKey(string)[user],
  GetVoicesV1VoicesGetShowLegacy(bool)[voices],
  GetVoicesV1VoicesGetXiApiKey(string)[voices],
  GetVoiceSettingsV1VoicesVoiceIdSettingsGetVoiceId(string)[voices],
  GetVoiceSettingsV1VoicesVoiceIdSettingsGetXiApiKey(string)[voices],
  GetVoiceV1VoicesVoiceIdGetVoiceId(string)[voices],
  GetVoiceV1VoicesVoiceIdGetWithSettings(bool)[voices],
  GetVoiceV1VoicesVoiceIdGetXiApiKey(string)[voices],
  DeleteVoiceV1VoicesVoiceIdDeleteVoiceId(string)[voices],
  DeleteVoiceV1VoicesVoiceIdDeleteXiApiKey(string)[voices],
  EditVoiceSettingsV1VoicesVoiceIdSettingsEditPostVoiceId(string)[voices],
  EditVoiceSettingsV1VoicesVoiceIdSettingsEditPostXiApiKey(string)[voices],
  AddVoiceV1VoicesAddPostXiApiKey(string)[voices],
  EditVoiceV1VoicesVoiceIdEditPostVoiceId(string)[voices],
  EditVoiceV1VoicesVoiceIdEditPostXiApiKey(string)[voices],
  AddSharingVoiceV1VoicesAddPublicUserIdVoiceIdPostPublicUserId(string)[voices],
  AddSharingVoiceV1VoicesAddPublicUserIdVoiceIdPostVoiceId(string)[voices],
  AddSharingVoiceV1VoicesAddPublicUserIdVoiceIdPostXiApiKey(string)[voices],
  GetProjectsV1ProjectsGetXiApiKey(string)[projects],
  AddProjectV1ProjectsAddPostXiApiKey(string)[projects],
  GetProjectByIDV1ProjectsProjectIdGetProjectId(string)[projects],
  GetProjectByIDV1ProjectsProjectIdGetXiApiKey(string)[projects],
  EditBasicProjectInfoV1ProjectsProjectIdPostProjectId(string)[projects],
  EditBasicProjectInfoV1ProjectsProjectIdPostXiApiKey(string)[projects],
  DeleteProjectV1ProjectsProjectIdDeleteProjectId(string)[projects],
  DeleteProjectV1ProjectsProjectIdDeleteXiApiKey(string)[projects],
  ConvertProjectV1ProjectsProjectIdConvertPostProjectId(string)[projects],
  ConvertProjectV1ProjectsProjectIdConvertPostXiApiKey(string)[projects],
  GetProjectSnapshotsV1ProjectsProjectIdSnapshotsGetProjectId(string)[projects],
  GetProjectSnapshotsV1ProjectsProjectIdSnapshotsGetXiApiKey(string)[projects],
  StreamProjectAudioV1ProjectsProjectIdSnapshotsProjectSnapshotIdStreamPostProjectId(string)[projects],
  StreamProjectAudioV1ProjectsProjectIdSnapshotsProjectSnapshotIdStreamPostProjectSnapshotId(string)[projects],
  StreamProjectAudioV1ProjectsProjectIdSnapshotsProjectSnapshotIdStreamPostXiApiKey(string)[projects],
  StreamsArchiveWithProjectAudioV1ProjectsProjectIdSnapshotsProjectSnapshotIdArchivePostProjectId(string)[projects],
  StreamsArchiveWithProjectAudioV1ProjectsProjectIdSnapshotsProjectSnapshotIdArchivePostProjectSnapshotId(string)[projects],
  StreamsArchiveWithProjectAudioV1ProjectsProjectIdSnapshotsProjectSnapshotIdArchivePostXiApiKey(string)[projects],
  GetChaptersV1ProjectsProjectIdChaptersGetProjectId(string)[projects],
  GetChaptersV1ProjectsProjectIdChaptersGetXiApiKey(string)[projects],
  GetChapterByIDV1ProjectsProjectIdChaptersChapterIdGetProjectId(string)[projects],
  GetChapterByIDV1ProjectsProjectIdChaptersChapterIdGetChapterId(string)[projects],
  GetChapterByIDV1ProjectsProjectIdChaptersChapterIdGetXiApiKey(string)[projects],
  DeleteChapterV1ProjectsProjectIdChaptersChapterIdDeleteProjectId(string)[projects],
  DeleteChapterV1ProjectsProjectIdChaptersChapterIdDeleteChapterId(string)[projects],
  DeleteChapterV1ProjectsProjectIdChaptersChapterIdDeleteXiApiKey(string)[projects],
  AddChapterToAProjectV1ProjectsProjectIdChaptersAddPostProjectId(string)[projects],
  AddChapterToAProjectV1ProjectsProjectIdChaptersAddPostXiApiKey(string)[projects],
  ConvertChapterV1ProjectsProjectIdChaptersChapterIdConvertPostProjectId(string)[projects],
  ConvertChapterV1ProjectsProjectIdChaptersChapterIdConvertPostChapterId(string)[projects],
  ConvertChapterV1ProjectsProjectIdChaptersChapterIdConvertPostXiApiKey(string)[projects],
  GetChapterSnapshotsV1ProjectsProjectIdChaptersChapterIdSnapshotsGetProjectId(string)[projects],
  GetChapterSnapshotsV1ProjectsProjectIdChaptersChapterIdSnapshotsGetChapterId(string)[projects],
  GetChapterSnapshotsV1ProjectsProjectIdChaptersChapterIdSnapshotsGetXiApiKey(string)[projects],
  StreamChapterAudioV1ProjectsProjectIdChaptersChapterIdSnapshotsChapterSnapshotIdStreamPostProjectId(string)[projects],
  StreamChapterAudioV1ProjectsProjectIdChaptersChapterIdSnapshotsChapterSnapshotIdStreamPostChapterId(string)[projects],
  StreamChapterAudioV1ProjectsProjectIdChaptersChapterIdSnapshotsChapterSnapshotIdStreamPostChapterSnapshotId(string)[projects],
  StreamChapterAudioV1ProjectsProjectIdChaptersChapterIdSnapshotsChapterSnapshotIdStreamPostXiApiKey(string)[projects],
  UpdatePronunciationDictionariesV1ProjectsProjectIdUpdatePronunciationDictionariesPostProjectId(string)[projects],
  UpdatePronunciationDictionariesV1ProjectsProjectIdUpdatePronunciationDictionariesPostXiApiKey(string)[projects],
  DubAVideoOrAnAudioFileV1DubbingPostXiApiKey(string)[dubbing],
  GetDubbingProjectMetadataV1DubbingDubbingIdGetDubbingId(string)[dubbing],
  GetDubbingProjectMetadataV1DubbingDubbingIdGetXiApiKey(string)[dubbing],
  DeleteDubbingProjectV1DubbingDubbingIdDeleteDubbingId(string)[dubbing],
  DeleteDubbingProjectV1DubbingDubbingIdDeleteXiApiKey(string)[dubbing],
  GetDubbedFileV1DubbingDubbingIdAudioLanguageCodeGetDubbingId(string)[dubbing],
  GetDubbedFileV1DubbingDubbingIdAudioLanguageCodeGetLanguageCode(string)[dubbing],
  GetDubbedFileV1DubbingDubbingIdAudioLanguageCodeGetXiApiKey(string)[dubbing],
  GetTranscriptForDubV1DubbingDubbingIdTranscriptLanguageCodeGetDubbingId(string)[dubbing],
  GetTranscriptForDubV1DubbingDubbingIdTranscriptLanguageCodeGetLanguageCode(string)[dubbing],
  GetTranscriptForDubV1DubbingDubbingIdTranscriptLanguageCodeGetFormatType(enum)[dubbing],
  GetTranscriptForDubV1DubbingDubbingIdTranscriptLanguageCodeGetXiApiKey(string)[dubbing],
  GetSsoProviderAdminAdminN8enylacgdSsoProviderGetWorkspaceId(string)[workspace],
  GetModelsV1ModelsGetXiApiKey(string)[models],
  CreatesAudioNativeEnabledProjectV1AudioNativePostXiApiKey(string)[audio-native],
  GetVoicesV1SharedVoicesGetPageSize(int)[voices],
  GetVoicesV1SharedVoicesGetCategory(string)[voices],
  GetVoicesV1SharedVoicesGetGender(string)[voices],
  GetVoicesV1SharedVoicesGetAge(string)[voices],
  GetVoicesV1SharedVoicesGetAccent(string)[voices],
  GetVoicesV1SharedVoicesGetLanguage(string)[voices],
  GetVoicesV1SharedVoicesGetSearch(string)[voices],
  GetVoicesV1SharedVoicesGetUseCases(array)[voices],
    GetVoicesV1SharedVoicesGetUseCasesItem(string)[voices],
  GetVoicesV1SharedVoicesGetDescriptives(array)[voices],
    GetVoicesV1SharedVoicesGetDescriptivesItem(string)[voices],
  GetVoicesV1SharedVoicesGetFeatured(bool)[voices],
  GetVoicesV1SharedVoicesGetReaderAppEnabled(bool)[voices],
  GetVoicesV1SharedVoicesGetOwnerId(string)[voices],
  GetVoicesV1SharedVoicesGetSort(string)[voices],
  GetVoicesV1SharedVoicesGetPage(int)[voices],
  GetVoicesV1SharedVoicesGetXiApiKey(string)[voices],
  GetSimilarLibraryVoicesV1SimilarVoicesPostXiApiKey(string)[voices],
  GetCharactersUsageMetricsV1UsageCharacterStatsGetStartUnix(int)[usage],
  GetCharactersUsageMetricsV1UsageCharacterStatsGetEndUnix(int)[usage],
  GetCharactersUsageMetricsV1UsageCharacterStatsGetIncludeWorkspaceMetrics(bool)[usage],
  GetCharactersUsageMetricsV1UsageCharacterStatsGetBreakdownType(enum)[usage],
  GetCharactersUsageMetricsV1UsageCharacterStatsGetXiApiKey(string)[usage],
  AddAPronunciationDictionaryV1PronunciationDictionariesAddFromFilePostXiApiKey(string)[Pronunciation Dictionary],
  AddRulesToThePronunciationDictionaryV1PronunciationDictionariesPronunciationDictionaryIdAddRulesPostPronunciationDictionaryId(string)[Pronunciation Dictionary],
  AddRulesToThePronunciationDictionaryV1PronunciationDictionariesPronunciationDictionaryIdAddRulesPostXiApiKey(string)[Pronunciation Dictionary],
  RemoveRulesFromThePronunciationDictionaryV1PronunciationDictionariesPronunciationDictionaryIdRemoveRulesPostPronunciationDictionaryId(string)[Pronunciation Dictionary],
  RemoveRulesFromThePronunciationDictionaryV1PronunciationDictionariesPronunciationDictionaryIdRemoveRulesPostXiApiKey(string)[Pronunciation Dictionary],
  GetPLSFileWithAPronunciationDictionaryVersionRulesV1PronunciationDictionariesDictionaryIdVersionIdDownloadGetDictionaryId(string)[Pronunciation Dictionary],
  GetPLSFileWithAPronunciationDictionaryVersionRulesV1PronunciationDictionariesDictionaryIdVersionIdDownloadGetVersionId(string)[Pronunciation Dictionary],
  GetPLSFileWithAPronunciationDictionaryVersionRulesV1PronunciationDictionariesDictionaryIdVersionIdDownloadGetXiApiKey(string)[Pronunciation Dictionary],
  GetMetadataForAPronunciationDictionaryV1PronunciationDictionariesPronunciationDictionaryIdGetPronunciationDictionaryId(string)[Pronunciation Dictionary],
  GetMetadataForAPronunciationDictionaryV1PronunciationDictionariesPronunciationDictionaryIdGetXiApiKey(string)[Pronunciation Dictionary],
  GetPronunciationDictionariesV1PronunciationDictionariesGetCursor(string)[Pronunciation Dictionary],
  GetPronunciationDictionariesV1PronunciationDictionariesGetPageSize(int)[Pronunciation Dictionary],
  GetPronunciationDictionariesV1PronunciationDictionariesGetXiApiKey(string)[Pronunciation Dictionary],
  InviteUserV1WorkspaceInvitesAddPostXiApiKey(string)[workspace],
  DeleteExistingInvitationV1WorkspaceInvitesDeleteXiApiKey(string)[workspace],
  UpdateMemberV1WorkspaceMembersPostXiApiKey(string)[workspace],
  GetAProfilePageProfileHandleGetHandle(string)[voices],
  GetSpeechHistoryResponseModel(ref)[speech-history],
  HTTPValidationError(ref)[speech-history],
  SpeechHistoryItemResponseModel(ref)[speech-history],
  HTTPValidationError(ref)[speech-history],
  DeleteHistoryItemV1HistoryHistoryItemIdDeleteResponse(class)[speech-history],
  HTTPValidationError(ref)[speech-history],
  HTTPValidationError(ref)[speech-history],
  HTTPValidationError(ref)[speech-history],
  HTTPValidationError(ref)[sound-generation],
  HTTPValidationError(ref)[audio-isolation],
  HTTPValidationError(ref)[audio-isolation],
  DeleteSampleV1VoicesVoiceIdSamplesSampleIdDeleteResponse(class)[samples],
  HTTPValidationError(ref)[samples],
  HTTPValidationError(ref)[samples],
  HTTPValidationError(ref)[text-to-speech],
  HTTPValidationError(ref)[text-to-speech],
  HTTPValidationError(ref)[text-to-speech],
  HTTPValidationError(ref)[text-to-speech],
  HTTPValidationError(ref)[speech-to-speech],
  HTTPValidationError(ref)[speech-to-speech],
  VoiceGenerationParameterResponseModel(ref)[voice-generation],
  HTTPValidationError(ref)[voice-generation],
  VoiceResponseModel(ref)[voice-generation],
  HTTPValidationError(ref)[voice-generation],
  ExtendedSubscriptionResponseModel(ref)[user],
  HTTPValidationError(ref)[user],
  UserResponseModel(ref)[user],
  HTTPValidationError(ref)[user],
  GetVoicesResponseModel(ref)[voices],
  HTTPValidationError(ref)[voices],
  VoiceSettingsResponseModel(ref)[voices],
  VoiceSettingsResponseModel(ref)[voices],
  HTTPValidationError(ref)[voices],
  VoiceResponseModel(ref)[voices],
  HTTPValidationError(ref)[voices],
  DeleteVoiceV1VoicesVoiceIdDeleteResponse(class)[voices],
  HTTPValidationError(ref)[voices],
  EditVoiceSettingsV1VoicesVoiceIdSettingsEditPostResponse(class)[voices],
  HTTPValidationError(ref)[voices],
  AddVoiceResponseModel(ref)[voices],
  HTTPValidationError(ref)[voices],
  EditVoiceV1VoicesVoiceIdEditPostResponse(class)[voices],
  HTTPValidationError(ref)[voices],
  AddVoiceResponseModel(ref)[voices],
  HTTPValidationError(ref)[voices],
  GetProjectsResponseModel(ref)[projects],
  HTTPValidationError(ref)[projects],
  AddProjectResponseModel(ref)[projects],
  HTTPValidationError(ref)[projects],
  ProjectExtendedResponseModel(ref)[projects],
  HTTPValidationError(ref)[projects],
  EditProjectResponseModel(ref)[projects],
  HTTPValidationError(ref)[projects],
  DeleteProjectV1ProjectsProjectIdDeleteResponse(class)[projects],
  HTTPValidationError(ref)[projects],
  ConvertProjectV1ProjectsProjectIdConvertPostResponse(class)[projects],
  HTTPValidationError(ref)[projects],
  ProjectSnapshotsResponseModel(ref)[projects],
  HTTPValidationError(ref)[projects],
  HTTPValidationError(ref)[projects],
  HTTPValidationError(ref)[projects],
  GetChaptersResponseModel(ref)[projects],
  HTTPValidationError(ref)[projects],
  ChapterResponseModel(ref)[projects],
  HTTPValidationError(ref)[projects],
  DeleteChapterV1ProjectsProjectIdChaptersChapterIdDeleteResponse(class)[projects],
  HTTPValidationError(ref)[projects],
  AddChapterResponseModel(ref)[projects],
  HTTPValidationError(ref)[projects],
  ConvertChapterV1ProjectsProjectIdChaptersChapterIdConvertPostResponse(class)[projects],
  HTTPValidationError(ref)[projects],
  ChapterSnapshotsResponseModel(ref)[projects],
  HTTPValidationError(ref)[projects],
  HTTPValidationError(ref)[projects],
  UpdatePronunciationDictionariesV1ProjectsProjectIdUpdatePronunciationDictionariesPostResponse(class)[projects],
  HTTPValidationError(ref)[projects],
  DoDubbingResponseModel(ref)[dubbing],
  HTTPValidationError(ref)[dubbing],
  DubbingMetadataResponse(ref)[dubbing],
  HTTPValidationError(ref)[dubbing],
  DeleteDubbingProjectV1DubbingDubbingIdDeleteResponse(class)[dubbing],
  HTTPValidationError(ref)[dubbing],
  HTTPValidationError(ref)[dubbing],
  GetTranscriptForDubV1DubbingDubbingIdTranscriptLanguageCodeGetResponse(class)[dubbing],
  HTTPValidationError(ref)[dubbing],
  SsoProviderResponseModel(ref)[workspace],
  HTTPValidationError(ref)[workspace],
  GetModelsV1ModelsGetResponse(array)[models],
    ModelResponseModel(ref)[models],
  HTTPValidationError(ref)[models],
  AudioNativeCreateProjectResponseModel(ref)[audio-native],
  HTTPValidationError(ref)[audio-native],
  GetLibraryVoicesResponseModel(ref)[voices],
  HTTPValidationError(ref)[voices],
  GetLibraryVoicesResponseModel(ref)[voices],
  HTTPValidationError(ref)[voices],
  UsageCharactersResponseModel(ref)[usage],
  HTTPValidationError(ref)[usage],
  AddPronunciationDictionaryResponseModel(ref)[Pronunciation Dictionary],
  HTTPValidationError(ref)[Pronunciation Dictionary],
  AddPronunciationDictionaryRulesResponseModel(ref)[Pronunciation Dictionary],
  HTTPValidationError(ref)[Pronunciation Dictionary],
  RemovePronunciationDictionaryRulesResponseModel(ref)[Pronunciation Dictionary],
  HTTPValidationError(ref)[Pronunciation Dictionary],
  HTTPValidationError(ref)[Pronunciation Dictionary],
  GetPronunciationDictionaryMetadataResponseModel(ref)[Pronunciation Dictionary],
  HTTPValidationError(ref)[Pronunciation Dictionary],
  GetPronunciationDictionariesMetadataResponseModel(ref)[Pronunciation Dictionary],
  HTTPValidationError(ref)[Pronunciation Dictionary],
  InviteUserV1WorkspaceInvitesAddPostResponse(class)[workspace],
  HTTPValidationError(ref)[workspace],
  DeleteExistingInvitationV1WorkspaceInvitesDeleteResponse(class)[workspace],
  HTTPValidationError(ref)[workspace],
  UpdateMemberV1WorkspaceMembersPostResponse(class)[workspace],
  HTTPValidationError(ref)[workspace],
  ProfilePageResponseModel(ref)[voices],
  HTTPValidationError(ref)[voices],
  RedirectToMintlifyDocsGetResponse(class)[]
]