[
  AcceptInvitationByCurrentUserRequest(class)[User],
    InvitationId(string)[User],
  AccessList(class)[Security],
    Id(string)[Security],
    Title(string)[Security],
    Description(string)[Security],
    AccessTags(int)[Security],
    AccessResources(int)[Security],
    AccessExcerpts(int)[Security],
    AccessDescriptors(int)[Security],
    AccessDesFields(int)[Security],
    AccessSecurity(int)[Security],
    AccessUsers(int)[Security],
  AccountProjectInfo(class)[Account],
    ProjectId(string)[Account],
    ProjectTitle(string)[Account],
    AudioHours(double)[Account],
    VideoHours(double)[Account],
    MonthlyDataCost(double)[Account],
    AdminId(string)[Account],
    AdminUsername(string)[Account],
    AdminEmail(string)[Account],
  AccountVO(class)[Account],
    Id(string)[Account],
    CreateStamp(DateTime)[Account],
    Credits(double)[Account],
    Cpupm(double)[Account],
    LastPayment(DateTime)[Account],
    IsActive(bool)[Account],
    IsPastDue(bool)[Account],
    PastDueStartDate(DateTime)[Account],
    CrRunDate(DateTime)[Account],
    LastPastDueNoticeDate(DateTime)[Account],
    AutoBillRefTransId(string)[Account],
    AutoBillCVV2(string)[Account],
    AutoBillActive(bool)[Account],
    CpupmOverride(double)[Account],
    CpupmOverrideEnd(DateTime)[Account],
    EnforcePasswordPolicy(bool)[Account],
    PwPolicyMinLength(int)[Account],
    PwPolicyRequireChar(bool)[Account],
    PwPolicyRequireUpper(bool)[Account],
    PwPolicyRequireNumber(bool)[Account],
    PwPolicyRequireSymbol(bool)[Account],
    PwPolicyMaxAge(int)[Account],
    PwPolicyRequire2Auth(bool)[Account],
    PwPolicy2AuthOnRelog(bool)[Account],
    PwPolicyIdleTimeout(int)[Account],
    AdminIds(array)[Account],
      AdminIdsItem(string)[Account],
  AccountVO2(class)[Account],
    Id(string)[Account],
    CreateStamp(DateTime)[Account],
    Credits(double)[Account],
    Cpupm(double)[Account],
    LastPayment(DateTime)[Account],
    IsActive(bool)[Account],
    IsPastDue(bool)[Account],
    PastDueStartDate(DateTime)[Account],
    CrRunDate(DateTime)[Account],
    LastPastDueNoticeDate(DateTime)[Account],
    AutoBillRefTransId(string)[Account],
    AutoBillCVV2(string)[Account],
    AutoBillActive(bool)[Account],
    CpupmOverride(double)[Account],
    CpupmOverrideEnd(DateTime)[Account],
    EnforcePasswordPolicy(bool)[Account],
    PwPolicyMinLength(int)[Account],
    PwPolicyRequireChar(bool)[Account],
    PwPolicyRequireUpper(bool)[Account],
    PwPolicyRequireNumber(bool)[Account],
    PwPolicyRequireSymbol(bool)[Account],
    PwPolicyMaxAge(int)[Account],
    PwPolicyRequire2Auth(bool)[Account],
    PwPolicy2AuthOnRelog(bool)[Account],
    PwPolicyIdleTimeout(int)[Account],
    AdminIds(array)[Account],
      AdminIdsItem(string)[Account],
  AccountWithLogs(class)[Account],
    AccountVO2(ref)[Account],
    BillingTransactionItems(array)[Account],
      BillingTransaction(ref)[Account],
    CreditTransactionItems(array)[Account],
      CreditTransaction(ref)[Account],
  BillingTransaction(class)[Account],
    Id(string)[Account],
    AccountId(string)[Account],
    BillingDate(DateTime)[Account],
    AmountPaid(double)[Account],
    CreditsAdded(double)[Account],
    Memo(string)[Account],
  CreditTransaction(class)[Account],
    Id(string)[Account],
    AccountId(string)[Account],
    CreditDate(DateTime)[Account],
    Amount(double)[Account],
    IsDebit(bool)[Account],
    PrevBal(double)[Account],
    RemBal(double)[Account],
    Memo(string)[Account],
  ActiveUser(class)[Chat],
    Id(string)[Chat],
    UserId(string)[Chat],
    AccountId(string)[Chat],
    Firstname(string)[Chat],
    Lastname(string)[Chat],
    UserName(string)[Chat],
    SessionStart(DateTime)[Chat],
    LastCheckin(DateTime)[Chat],
    ActiveProjectId(string)[Chat],
    ActiveProjectTitle(string)[Chat],
    ConnKey(string)[Chat],
  AddAudioResourceRequest(class)[Resource],
    ProjectId(string)[Resource],
    UserId(string)[Resource],
    Title(string)[Resource],
    Description(string)[Resource],
    VideoUploadURL(string)[Resource],
  AddCreditsToAccountRequest(class)[Admin],
    AccountId(string)[Admin],
    Credits(double)[Admin],
    Reason(string)[Admin],
  AddDataSetRequest(class)[DataSet],
    ProjectId(string)[DataSet],
    UserId(string)[DataSet],
    Title(string)[DataSet],
    Description(string)[DataSet],
    AreExcerptsFiltered(bool)[DataSet],
    AreResourcesFiltered(bool)[DataSet],
    AreDescriptorsFiltered(bool)[DataSet],
    AreTagsFiltered(bool)[DataSet],
    AreUsersFiltered(bool)[DataSet],
    ExcerptIds(array)[DataSet],
      ExcerptIdsItem(string)[DataSet],
    DescriptorIds(array)[DataSet],
      DescriptorIdsItem(string)[DataSet],
    UserIds(array)[DataSet],
      UserIdsItem(string)[DataSet],
    ResourceIds(array)[DataSet],
      ResourceIdsItem(string)[DataSet],
    TagIds(array)[DataSet],
      TagIdsItem(string)[DataSet],
    ExcludedExcerptIds(array)[DataSet],
      ExcludedExcerptIdsItem(string)[DataSet],
  AddDescriptorFieldRequest(class)[Descriptor],
    ProjectId(string)[Descriptor],
    Title(string)[Descriptor],
    Description(string)[Descriptor],
    Type(double)[Descriptor],
    IsDynamic(bool)[Descriptor],
    SetId(string)[Descriptor],
    FieldOptions(array)[Descriptor],
      FieldOptionVO(ref)[Descriptor],
  FieldOptionVO(class)[Descriptor],
    Title(string)[Descriptor],
    SortOrder(int)[Descriptor],
    ExitingOptionId(string)[Descriptor],
  AddDescriptorLinkRequest(class)[Descriptor],
    ProjectId(string)[Descriptor],
    ResourceId(string)[Descriptor],
    DescriptorId(string)[Descriptor],
    DynamicValues(array)[Descriptor],
      FieldValueDTO(ref)[Descriptor],
  FieldValueDTO(class)[Descriptor],
    DescriptorId(string)[Descriptor],
    FieldId(string)[Descriptor],
    Value(string)[Descriptor],
    OptionId(string)[Descriptor],
  AddDescriptorRequest(class)[Descriptor],
    ProjectId(string)[Descriptor],
    UserId(string)[Descriptor],
    SetId(string)[Descriptor],
    FieldValues(array)[Descriptor],
      FieldValueDTO(ref)[Descriptor],
  AddDescriptorSetRequest(class)[Descriptor],
    ProjectId(string)[Descriptor],
    Title(string)[Descriptor],
    Description(string)[Descriptor],
    CreateByUserId(string)[Descriptor],
  AddDocumentExcerptWithTagsRequest(class)[Excerpt],
    ProjectId(string)[Excerpt],
    UserId(string)[Excerpt],
    ResourceId(string)[Excerpt],
    Title(string)[Excerpt],
    Description(string)[Excerpt],
    StartIndex(int)[Excerpt],
    EndIndex(int)[Excerpt],
    ExcerptText(string)[Excerpt],
    TagApps(array)[Excerpt],
      TagAppSimple(ref)[Excerpt],
  TagAppSimple(class)[Excerpt, Tag],
    TagId(string)[Excerpt, Tag],
    TagWeight(double)[Excerpt, Tag],
  AddDynamicValueRequest(class)[Descriptor],
    ProjectId(string)[Descriptor],
    SetId(string)[Descriptor],
    DescriptorId(string)[Descriptor],
    FieldId(string)[Descriptor],
    ResourceId(string)[Descriptor],
    Data(string)[Descriptor],
    OptionId(string)[Descriptor],
  AddExcerptTagApplicationRequest(class)[Tag],
    UserId(string)[Tag],
    ProjectId(string)[Tag],
    ResourceId(string)[Tag],
    ExcerptId(string)[Tag],
    TagId(string)[Tag],
    Weight(double)[Tag],
  AddExcerptTagApplicationsRequest(class)[Tag],
    UserId(string)[Tag],
    ProjectId(string)[Tag],
    ResourceId(string)[Tag],
    ExcerptId(string)[Tag],
    TagApps(array)[Tag],
      TagAppSimple(ref)[Tag],
  AddFolderRequest(class)[Memo],
    ProjectId(string)[Memo],
    Title(string)[Memo],
    ParentFolderId(string)[Memo],
  AddGroupRequest(class)[Security],
    ProjectId(string)[Security],
    Title(string)[Security],
    AccessListId(string)[Security],
  AddGroupToProjectRequest(class)[Admin],
    ProjectId(string)[Admin],
    GroupTitle(string)[Admin],
    GroupACLId(string)[Admin],
  AddImageExcerptRequest(class)[Excerpt],
    ProjectId(string)[Excerpt],
    UserId(string)[Excerpt],
    ResourceId(string)[Excerpt],
    Start(int)[Excerpt],
    End(int)[Excerpt],
    TagIdsToApply(array)[Excerpt],
      TagIdsToApplyItem(string)[Excerpt],
  AddLinksRequest(class)[Descriptor],
    ProjectId(string)[Descriptor],
    Links(array)[Descriptor],
      DescriptorLinkVO(ref)[Descriptor],
  DescriptorLinkVO(class)[Descriptor],
    DescriptorId(string)[Descriptor],
    ResourceId(string)[Descriptor],
  AddMemoFolderLinksRequest(class)[Memo],
    ProjectId(string)[Memo],
    MemoId(string)[Memo],
    FolderIds(array)[Memo],
      FolderIdsItem(string)[Memo],
  AddMemoRequest(class)[Memo],
    ProjectId(string)[Memo],
    Title(string)[Memo],
    DataPath(string)[Memo],
    FolderIds(array)[Memo],
      FolderIdsItem(string)[Memo],
    MemoLinkedObjects(ref)[Memo],
  MemoLinkedObjects(class)[Memo],
    Resources(array)[Memo],
      ObjectIdWithPos(ref)[Memo],
    Excerpts(array)[Memo],
      ObjectIdWithPos(ref)[Memo],
    Descriptors(array)[Memo],
      ObjectIdWithPos(ref)[Memo],
    Tags(array)[Memo],
      ObjectIdWithPos(ref)[Memo],
  ObjectIdWithPos(class)[Memo],
    Id(string)[Memo],
    Position(int)[Memo],
  AddNewUserToAccountRequest(class)[Admin],
    AccountId(string)[Admin],
    Username(string)[Admin],
    FirstName(string)[Admin],
    LastName(string)[Admin],
    Email(string)[Admin],
    Phone(string)[Admin],
    EncryptedPass(string)[Admin],
  AddNewUserToAccountRequest2(class)[User],
    ProjectId(string)[User],
    Username(string)[User],
    FirstName(string)[User],
    LastName(string)[User],
    Email(string)[User],
    Phone(string)[User],
    EncryptedPass(string)[User],
    GroupId(string)[User],
  AddNewUserToAccountResponse(class)[User],
    User(ref)[User],
    UserGroupLink(ref)[User],
  User(class)[Account, User, Login],
    Id(string)[Account, User, Login],
    Username(string)[Account, User, Login],
    PassSalt(string)[Account, User, Login],
    FirstName(string)[Account, User, Login],
    LastName(string)[Account, User, Login],
    Email(string)[Account, User, Login],
    CreateStamp(DateTime)[Account, User, Login],
    Phone(string)[Account, User, Login],
    EulaStamp(DateTime)[Account, User, Login],
    IsActive(bool)[Account, User, Login],
    AdminDisable(bool)[Account, User, Login],
    AccountId(string)[Account, User, Login],
    Address(string)[Account, User, Login],
    City(string)[Account, User, Login],
    State(string)[Account, User, Login],
    Country(string)[Account, User, Login],
    Zip(string)[Account, User, Login],
    LastLogin(DateTime)[Account, User, Login],
    ChangePass(bool)[Account, User, Login],
    ChagePassDate(DateTime)[Account, User, Login],
    IsVerified(bool)[Account, User, Login],
  UserGroupLink(class)[Security, User],
    ProjectIdKey(string)[Security, User],
    ProjectId(string)[Security, User],
    Id(string)[Security, User],
    UserIdL(string)[Security, User],
    ProjectIDL(string)[Security, User],
    GroupIdl(string)[Security, User],
  AddOrUpdateDynamicValuesRequest(class)[Descriptor],
    ProjectId(string)[Descriptor],
    ResourceId(string)[Descriptor],
    SetId(string)[Descriptor],
    DescriptorId(string)[Descriptor],
    Values(array)[Descriptor],
      DynamicDescriptorValueDTO(ref)[Descriptor],
  DynamicDescriptorValueDTO(class)[Descriptor],
    Id(string)[Descriptor],
    ProjectId(string)[Descriptor],
    ProjectIdKey(string)[Descriptor],
    SetId(string)[Descriptor],
    DescriptorId(string)[Descriptor],
    FieldId(string)[Descriptor],
    ResourceId(string)[Descriptor],
    Data(string)[Descriptor],
    OptionId(string)[Descriptor],
  AddPDFImageExcerptRequest(class)[Excerpt],
    ProjectId(string)[Excerpt],
    UserId(string)[Excerpt],
    ResourceId(string)[Excerpt],
    Start(int)[Excerpt],
    End(int)[Excerpt],
    TagIdsToApply(array)[Excerpt],
      TagIdsToApplyItem(string)[Excerpt],
  AddPDFSwfImageExcerptRequest(class)[Excerpt],
    ProjectId(string)[Excerpt],
    UserId(string)[Excerpt],
    ResourceId(string)[Excerpt],
    Start(int)[Excerpt],
    End(int)[Excerpt],
    TagIdsToApply(array)[Excerpt],
      TagIdsToApplyItem(string)[Excerpt],
  AddPDFSwfTextExcerptRequest(class)[Excerpt],
    ProjectId(string)[Excerpt],
    UserId(string)[Excerpt],
    ResourceId(string)[Excerpt],
    PageIndex(int)[Excerpt],
    Start(int)[Excerpt],
    End(int)[Excerpt],
    Text(string)[Excerpt],
    TagApps(array)[Excerpt],
      TagAppSimple(ref)[Excerpt],
  AddProjectByUserRequest(class)[Project],
    UserId(string)[Project],
    Title(string)[Project],
    Decription(string)[Project],
  AddProjectEncryptedByUserRequest(class)[Project],
    UserId(string)[Project],
    Title(string)[Project],
    Decription(string)[Project],
    SymKeyHash(string)[Project],
  AddResourceRequest(class)[Resource],
    ProjectId(string)[Resource],
    UserId(string)[Resource],
    Title(string)[Resource],
    Description(string)[Resource],
    ResourceType(int)[Resource],
    FileURL(string)[Resource],
    Length(int)[Resource],
  AddTagLinkRequest(class)[Tag],
    ProjectId(string)[Tag],
    Tag1Id(string)[Tag],
    Tag2Id(string)[Tag],
    IsParentChildLink(bool)[Tag],
  AddTagRequest(class)[Tag],
    ProjectId(string)[Tag],
    Title(string)[Tag],
    Description(string)[Tag],
    IsWeighted(bool)[Tag],
    WeightMin(double)[Tag],
    WeightMax(double)[Tag],
    WeightDefault(double)[Tag],
    AllowDecimalWeights(bool)[Tag],
    Color(int)[Tag],
  AddTagWithParentRequest(class)[Tag],
    ProejctId(string)[Tag],
    ParentTagId(string)[Tag],
    Title(string)[Tag],
    Description(string)[Tag],
    IsWeighted(bool)[Tag],
    WeightMin(double)[Tag],
    WeightMax(double)[Tag],
    WeightDefault(double)[Tag],
    AllowDecimalWeights(bool)[Tag],
    Color(double)[Tag],
  AddTestRequest(class)[Training],
    ProjectId(string)[Training],
    TrainingTestType(int)[Training],
    Title(string)[Training],
    Description(string)[Training],
    CreatedUserId(string)[Training],
    ExIds(array)[Training],
      ExIdsItem(string)[Training],
    TagIds(array)[Training],
      TagIdsItem(string)[Training],
  AddTranscriptRequest(class)[Resource],
    ProjectId(string)[Resource],
    CurrentUserId(string)[Resource],
    ResourceId(string)[Resource],
    TranscriptData(string)[Resource],
  AddUserToAccountRequest(class)[Admin],
    UserId(string)[Admin],
    AccountId(string)[Admin],
  AddUserToGroupRequest(class)[Admin],
    ProjectId(string)[Admin],
    UserId(string)[Admin],
    GroupId(string)[Admin],
  AddVideoExcerptRequest(class)[Excerpt],
    ProjectId(string)[Excerpt],
    UserId(string)[Excerpt],
    ResourceId(string)[Excerpt],
    Start(int)[Excerpt],
    End(int)[Excerpt],
    TagIdsToApply(array)[Excerpt],
      TagIdsToApplyItem(string)[Excerpt],
  AddVideoResourceRequest(class)[Resource],
    ProjectId(string)[Resource],
    UserId(string)[Resource],
    Title(string)[Resource],
    Description(string)[Resource],
    VideoUploadURL(string)[Resource],
  BillingTransaction2(class)[User],
    Id(string)[User],
    AccountId(string)[User],
    BillingDate(DateTime)[User],
    AmountPaid(double)[User],
    CreditsAdded(double)[User],
    Memo(string)[User],
  BlogPost(class)[Information],
    Title(string)[Information],
    PostDate(string)[Information],
    Summary(string)[Information],
    Url(string)[Information],
  ChartExportInfo(class)[Export],
    Title(string)[Export],
    SeriesData(array)[Export],
      ChartSeriesInfo(ref)[Export],
  ChartSeriesInfo(class)[],
    Title(string)[],
    Items(array)[],
      ChartItemInfo(ref)[],
  ChartItemInfo(class)[Export],
    Title(string)[Export],
    Value(double)[Export],
  ChartHierarchicalExportInfo(class)[Export],
    Title(string)[Export],
    ParentItems(array)[Export],
      ChartHierarchicalItemInfo(ref)[Export],
  ChartHierarchicalItemInfo(class)[Export],
    Title(string)[Export],
    Children(array)[Export],
      ChartItemInfo(ref)[Export],
  ChatMessageVO(class)[Chat],
    Id(string)[Chat],
    ProjectId(string)[Chat],
    UserId(string)[Chat],
    Username(string)[Chat],
    CreateStamp(DateTime)[Chat],
    Message(string)[Chat],
  CheckEncryptedDataRequest(class)[Project],
    ProjectId(string)[Project],
    EncryptedSymKey(string)[Project],
  CloneDocumentRequest(class)[Resource],
    ProjectId(string)[Resource],
    ResourceId(string)[Resource],
    CloneExcerpts(bool)[Resource],
    CloneTagApps(bool)[Resource],
  CloneDocumentResponse(class)[Resource],
    Resource(ref)[Resource],
    Excerpts(array)[Resource],
      Excerpt(ref)[Resource],
    TagApps(array)[Resource],
      TrainingTestTagApp(ref)[Resource],
  Resource(class)[Resource],
    ProjectIdKey(string)[Resource],
    ProjectId(string)[Resource],
    Id(string)[Resource],
    ProjectIDL(string)[Resource],
    Title(string)[Resource],
    Description(string)[Resource],
    Type(int)[Resource],
    DataPath(string)[Resource],
    Length(int)[Resource],
    CreateStamp(DateTime)[Resource],
    CreateByUserIDL(string)[Resource],
    IsDataLocked(bool)[Resource],
    MetaData(string)[Resource],
  Excerpt(class)[Excerpt, Resource],
    ProjectIdKey(string)[Excerpt, Resource],
    ProjectId(string)[Excerpt, Resource],
    Id(string)[Excerpt, Resource],
    ProjectIDL(string)[Excerpt, Resource],
    ResourceIDL(string)[Excerpt, Resource],
    StartIndex(int)[Excerpt, Resource],
    EndIndex(int)[Excerpt, Resource],
    Title(string)[Excerpt, Resource],
    Description(string)[Excerpt, Resource],
    CreateStamp(DateTime)[Excerpt, Resource],
    CreateUserIDL(string)[Excerpt, Resource],
    DataFilePartialURL(string)[Excerpt, Resource],
    MetaData(string)[Excerpt, Resource],
    CodeAppData(byte)[Excerpt, Resource],
  TrainingTestTagApp(class)[Training, Resource],
    ProjectIdKey(string)[Training, Resource],
    ProjectId(string)[Training, Resource],
    Id(string)[Training, Resource],
    TrainingTestIDL(string)[Training, Resource],
    CreatedOn(DateTime)[Training, Resource],
    TrainingTagIDL(string)[Training, Resource],
    Weight(double)[Training, Resource],
    TrainingTestExcerptId(string)[Training, Resource],
    ProjectIDL(string)[Training, Resource],
    TrainingTestResultIDL(string)[Training, Resource],
  CreateAccountRequest(class)[Admin],
    AdminId(string)[Admin],
    Credits(double)[Admin],
  CreditTransaction2(class)[User],
    Id(string)[User],
    AccountId(string)[User],
    CreditDate(DateTime)[User],
    Amount(double)[User],
    IsDebit(bool)[User],
    PrevBal(double)[User],
    RemBal(double)[User],
    Memo(string)[User],
  DataSetObjectIds(class)[DataSet],
    IncludedTagIds(array)[DataSet],
      IncludedTagIdsItem(string)[DataSet],
    IncludedDescriptorIds(array)[DataSet],
      IncludedDescriptorIdsItem(string)[DataSet],
    IncludedResourceIds(array)[DataSet],
      IncludedResourceIdsItem(string)[DataSet],
    IncludedExcerptIds(array)[DataSet],
      IncludedExcerptIdsItem(string)[DataSet],
    IncludedUserIds(array)[DataSet],
      IncludedUserIdsItem(string)[DataSet],
    ExcludedExcerptIds(array)[DataSet],
      ExcludedExcerptIdsItem(string)[DataSet],
  DataSetVO(class)[DataSet],
    Id(string)[DataSet],
    ProjectId(string)[DataSet],
    ProjectIdKey(string)[DataSet],
    CreatedById(string)[DataSet],
    CreateStamp(DateTime)[DataSet],
    Title(string)[DataSet],
    Desciption(string)[DataSet],
    DataSetObjectIds(ref)[DataSet],
    AreExcerptsFiltered(bool)[DataSet],
    AreResourcesFiltered(bool)[DataSet],
    AreTagsFiltered(bool)[DataSet],
    AreUsersFiltered(bool)[DataSet],
    AreDescriptorsFiltered(bool)[DataSet],
  DeleteDataSetRequest(class)[DataSet],
    DataSetVO(ref)[DataSet],
  DeleteDescriptorFieldRequest(class)[Descriptor],
    DescriptorField(ref)[Descriptor],
  DescriptorField(class)[Descriptor],
    ProjectIdKey(string)[Descriptor],
    ProjectId(string)[Descriptor],
    Id(string)[Descriptor],
    ProjectIDL(string)[Descriptor],
    DescriptorSetIDL(string)[Descriptor],
    Type(int)[Descriptor],
    Title(string)[Descriptor],
    Description(string)[Descriptor],
    IsDynamicField(bool)[Descriptor],
    SortOrder(int)[Descriptor],
  DeleteDescriptorRequest(class)[Descriptor],
    Descriptor(ref)[Descriptor],
  Descriptor(class)[Descriptor],
    ProjectIdKey(string)[Descriptor],
    ProjectId(string)[Descriptor],
    Id(string)[Descriptor],
    ProjectIDL(string)[Descriptor],
    CreateStamp(DateTime)[Descriptor],
    CreateByIDL(string)[Descriptor],
    DescriptorSetIDL(string)[Descriptor],
    ValuesData(byte)[Descriptor],
    DynamicValuesData(byte)[Descriptor],
  DeleteDescriptorsRequest(class)[Descriptor],
    ProjectId(string)[Descriptor],
    DescriptorsIds(array)[Descriptor],
      DescriptorsIdsItem(string)[Descriptor],
  DeleteExcerptRequest(class)[Excerpt],
    ProjectId(string)[Excerpt],
    ExcerptId(string)[Excerpt],
  DeleteFolderRequest(class)[Memo],
    MemoFolder(ref)[Memo],
  MemoFolder(class)[Memo],
    ProjectIdKey(string)[Memo],
    Id(string)[Memo],
    ProjectId(string)[Memo],
    Title(string)[Memo],
  DeleteGroupRequest(class)[Security],
    UserGroup(ref)[Security],
  UserGroup(class)[Admin, Security],
    ProjectIdKey(string)[Admin, Security],
    ProjectId(string)[Admin, Security],
    Id(string)[Admin, Security],
    ProjectIDL(string)[Admin, Security],
    Title(string)[Admin, Security],
    AccessListIDL(string)[Admin, Security],
  DeleteLinkRequest(class)[Descriptor],
    ProjectId(string)[Descriptor],
    ResourceId(string)[Descriptor],
    DescriptorId(string)[Descriptor],
  DeleteMemoRequest(class)[Memo],
    Memo(ref)[Memo],
  Memo(class)[Memo],
    ProjectIdKey(string)[Memo],
    Id(string)[Memo],
    ProjectId(string)[Memo],
    Title(string)[Memo],
    CreatedUserId(string)[Memo],
    LastEditUserId(string)[Memo],
    CreateStamp(DateTime)[Memo],
    LastEditStamp(DateTime)[Memo],
    FolderId(string)[Memo],
    DataURI(string)[Memo],
  DeleteResourceRequest(class)[Resource],
    CurrentProjectId(string)[Resource],
    Resource(ref)[Resource],
  DeleteTagByJobRequest(class)[Tag],
    CurrentProjectId(string)[Tag],
    Tag(ref)[Tag],
  Tag(class)[Tag],
    ProjectIdKey(string)[Tag],
    ProjectId(string)[Tag],
    Id(string)[Tag],
    ProjectIDL(string)[Tag],
    Title(string)[Tag],
    Description(string)[Tag],
    IsWeighted(bool)[Tag],
    WeightMin(double)[Tag],
    WeightMax(double)[Tag],
    WeightDefault(double)[Tag],
    SortOrder(int)[Tag],
    Color(int)[Tag],
    AllowDecimalWeight(bool)[Tag],
  DeleteTagLinkRequest(class)[Tag],
    CurrentProjectId(string)[Tag],
    TagLink(ref)[Tag],
  TagLink(class)[Tag],
    ProjectIdKey(string)[Tag],
    ProjectId(string)[Tag],
    Id(string)[Tag],
    ProjectIDL(string)[Tag],
    Tag1IDL(string)[Tag],
    Tag2IDL(string)[Tag],
    IsParentChildLink(bool)[Tag],
  DeleteTestRequest(class)[Training],
    TrainingTest(ref)[Training],
  TrainingTest(class)[Training],
    ProjectIdKey(string)[Training],
    Id(string)[Training],
    TestType(int)[Training],
    Title(string)[Training],
    Description(string)[Training],
    CreatedOn(DateTime)[Training],
    ProjectId(string)[Training],
    ExcerptCount(int)[Training],
    TagCount(int)[Training],
    Creator(string)[Training],
  DeleteTranscriptRequest(class)[Resource],
    ResourceTranscript(ref)[Resource],
  ResourceTranscript(class)[Resource],
    ProjectIdKey(string)[Resource],
    Id(string)[Resource],
    Creator(string)[Resource],
    ProjectId(string)[Resource],
    ResourceId(string)[Resource],
    DataPath(string)[Resource],
    Created(DateTime)[Resource],
  Descriptor2(class)[Descriptor],
    ProjectIdKey(string)[Descriptor],
    ProjectId(string)[Descriptor],
    Id(string)[Descriptor],
    ProjectIDL(string)[Descriptor],
    CreateStamp(DateTime)[Descriptor],
    CreateByIDL(string)[Descriptor],
    DescriptorSetIDL(string)[Descriptor],
    ValuesData(byte)[Descriptor],
    DynamicValuesData(byte)[Descriptor],
  DescriptorField2(class)[Descriptor],
    ProjectIdKey(string)[Descriptor],
    ProjectId(string)[Descriptor],
    Id(string)[Descriptor],
    ProjectIDL(string)[Descriptor],
    DescriptorSetIDL(string)[Descriptor],
    Type(int)[Descriptor],
    Title(string)[Descriptor],
    Description(string)[Descriptor],
    IsDynamicField(bool)[Descriptor],
    SortOrder(int)[Descriptor],
  DescriptorFieldOption(class)[Descriptor],
    ProjectIdKey(string)[Descriptor],
    ProjectId(string)[Descriptor],
    Id(string)[Descriptor],
    ProjectIDL(string)[Descriptor],
    FieldIDL(string)[Descriptor],
    Title(string)[Descriptor],
    Description(string)[Descriptor],
    SortOrder(int)[Descriptor],
  DescriptorFieldWithOptions(class)[Descriptor],
    DescriptorField2(ref)[Descriptor],
    Options(array)[Descriptor],
      DescriptorFieldOption(ref)[Descriptor],
  DescriptorInfo(class)[Descriptor],
    DescriptorId(string)[Descriptor],
    FieldValues(array)[Descriptor],
      FieldValueDTO(ref)[Descriptor],
  DescriptorLink(class)[Descriptor],
    ProjectIdKey(string)[Descriptor],
    ProjectId(string)[Descriptor],
    Id(string)[Descriptor],
    ProjectIDL(string)[Descriptor],
    DescriptorIDL(string)[Descriptor],
    ResourceIDL(string)[Descriptor],
  DescriptorSet(class)[Descriptor],
    ProjectIdKey(string)[Descriptor],
    ProjectId(string)[Descriptor],
    Id(string)[Descriptor],
    ProjectIDL(string)[Descriptor],
    Title(string)[Descriptor],
    Description(string)[Descriptor],
    CreateStamp(DateTime)[Descriptor],
    CreatedByUserId(string)[Descriptor],
  DescriptorValueDTO(class)[Descriptor],
    Id(string)[Descriptor],
    ProjectId(string)[Descriptor],
    ProjectIdKey(string)[Descriptor],
    DescriptorId(string)[Descriptor],
    FieldId(string)[Descriptor],
    Data(string)[Descriptor],
    OptionId(string)[Descriptor],
  DescriptorWithValues(class)[Descriptor],
    Descriptor2(ref)[Descriptor],
    Values(array)[Descriptor],
      DescriptorValueDTO(ref)[Descriptor],
  DisableRecurringPaymentRequest(class)[Account],
    AccountId(string)[Account],
  DoesUserEmailExistRequest(class)[User],
    Email(string)[User],
  DoesUserExistRequest(class)[User],
    Username(string)[User],
  EmailFileRequest(class)[File],
    FileURI(string)[File],
    AttachmentFileName(string)[File],
    EmailAddress(string)[File],
    Subject(string)[File],
  Excerpt2(class)[Excerpt],
    ProjectIdKey(string)[Excerpt],
    ProjectId(string)[Excerpt],
    Id(string)[Excerpt],
    ProjectIDL(string)[Excerpt],
    ResourceIDL(string)[Excerpt],
    StartIndex(int)[Excerpt],
    EndIndex(int)[Excerpt],
    Title(string)[Excerpt],
    Description(string)[Excerpt],
    CreateStamp(DateTime)[Excerpt],
    CreateUserIDL(string)[Excerpt],
    DataFilePartialURL(string)[Excerpt],
    MetaData(string)[Excerpt],
    CodeAppData(byte)[Excerpt],
  ExcerptExportOptions(class)[Export],
    FileExtension(string)[Export],
    ExCopyMode(int)[Export],
    SortMode(int)[Export],
    ExRange(bool)[Export],
    ExCreator(bool)[Export],
    ExDate(bool)[Export],
    DesInfo(bool)[Export],
    DocTitle(bool)[Export],
    DocCreator(bool)[Export],
    DocDate(bool)[Export],
    TagApplied(bool)[Export],
    TagWeight(bool)[Export],
    TagRange(bool)[Export],
    Memos(bool)[Export],
  ExcerptWithTagApps(class)[Excerpt],
    Excerpt2(ref)[Excerpt],
    TagApps(array)[Excerpt],
      TagAppDTO(ref)[Excerpt],
  TagAppDTO(class)[Tag, Excerpt],
    Id(string)[Tag, Excerpt],
    ProjectId(string)[Tag, Excerpt],
    TagId(string)[Tag, Excerpt],
    ResourceId(string)[Tag, Excerpt],
    ExcerptId(string)[Tag, Excerpt],
    Weight(double)[Tag, Excerpt],
    UserId(string)[Tag, Excerpt],
    CreateStamp(DateTime)[Tag, Excerpt],
  FieldInfo(class)[Descriptor],
    Title(string)[Descriptor],
    Description(string)[Descriptor],
    TypeInt(int)[Descriptor],
    ListOptions(array)[Descriptor],
      ListOptionsItem(string)[Descriptor],
    IsDynamic(bool)[Descriptor],
  FieldVO(class)[Descriptor],
    FieldId(string)[Descriptor],
    Title(string)[Descriptor],
    TypeLabel(string)[Descriptor],
    IsDynamicLabel(string)[Descriptor],
    Description(string)[Descriptor],
    SortOrder(int)[Descriptor],
    IsActive(bool)[Descriptor],
  ForceDeleteDescriptorSetPolledRequest(class)[Descriptor],
    ProjectIDL(string)[Descriptor],
    DescriptorSetId(string)[Descriptor],
  GetAccountDetailsForCurrentUserResponse(class)[Account],
    AccountVO(ref)[Account],
    Users(array)[Account],
      User(ref)[Account],
  GetAccountProjectInfoJobResponseRequest(class)[Account],
    JobId(string)[Account],
  GetAccountTransactionsRequest(class)[Admin],
    AccountId(string)[Admin],
  GetAddImageResourceJobResponseRequest(class)[Resource],
    JobId(string)[Resource],
  GetAddPDFImageResourceJobResponseRequest(class)[Resource],
    JobId(string)[Resource],
  GetAddPDFSwfResourceJobResponseRequest(class)[Resource],
    JobId(string)[Resource],
  GetAddTestResultRequest(class)[Training],
    AddTestWorkerId(string)[Training],
  GetAudioResourceByJobIdRequest(class)[Resource],
    ProjectId(string)[Resource],
    JobId(string)[Resource],
  GetAudioSampleRequest(class)[Resource],
    ProjectId(string)[Resource],
    ResourceId(string)[Resource],
  GetChatMessagesRequest(class)[Chat],
    UserId(string)[Chat],
    ProjectId(string)[Chat],
    LastRevievedProjectMessageId(string)[Chat],
    LastRecievedGlobalMessageId(string)[Chat],
  GetConvertFieldTypeJobResponseRequest(class)[Descriptor],
    JobId(string)[Descriptor],
  GetConvertPDF2SwfResultRequest(class)[File],
    JobId(string)[File],
  GetCopyMemosToDocumentsJobResultRequest(class)[Memo],
    JobId(string)[Memo],
  GetCopyProjectStatusRequest(class)[Project],
    JobId(string)[Project],
  GetDataSetsByProjectRequest(class)[DataSet],
    ProjectId(string)[DataSet],
  GetDeleteTagByJobResponseRequest(class)[Tag],
    JobId(string)[Tag],
  GetDesDataFromFileJobResultRequest(class)[Descriptor],
    JobId(string)[Descriptor],
  GetDesFieldImportDataFromFileRequest(class)[Descriptor],
    RelativeFileURL(string)[Descriptor],
  GetDocumentSearchJobResultRequest(class)[Resource],
    JobId(string)[Resource],
  GetDynamicValuesByProjectIdRequest(class)[Descriptor],
    ProjectId(string)[Descriptor],
  GetExcerptsByProjectIdRequest(class)[Excerpt],
    ProjectId(string)[Excerpt],
    Page(int)[Excerpt],
    PageSize(int)[Excerpt],
  GetExcerptsExportStatusRequest(class)[Export],
    JobId(string)[Export],
  GetExcerptsExportURLRequest(class)[Export],
    JobId(string)[Export],
  GetExportAccountProjectsJobIdRequest(class)[Project],
    AccountId(string)[Project],
  GetExportJobFileURIRequest(class)[File],
    JobId(string)[File],
  GetExportJobURIRequest(class)[Export],
    JobId(string)[Export],
  GetExportJobURLRequest(class)[Resource],
    JobId(string)[Resource],
  GetExportPDFSwfJobResultRequest(class)[Resource],
    JobId(string)[Resource],
  GetExportStorageMetricsJobIdRequest(class)[Account],
    AccountId(string)[Account],
  GetFederationResponseForConnectionRequest(class)[User],
    ConnectionKey(string)[User],
  GetFilteredProjectsAndUsersRequest(class)[Admin],
    Filter(string)[Admin],
    MaxResults(int)[Admin],
  GetFilteredProjectsRequest(class)[Admin],
    Filter(string)[Admin],
    MaxResults(int)[Admin],
  GetFilteredUsersRequest(class)[Admin],
    Filter(string)[Admin],
    MaxResults(int)[Admin],
  GetFilteredUsersRequest2(class)[User],
    ProjectId(string)[User],
    Filter(string)[User],
    MaxResults(int)[User],
  GetFXMLDocJobResultRequest(class)[File],
    JobId(string)[File],
  GetFXMLDocXPolledRequest(class)[File],
    ProjectId(string)[File],
    FileURL(string)[File],
  GetImportMemosXMLResponseRequest(class)[Memo],
    JobId(string)[Memo],
  GetMergeStatusRequest(class)[Admin],
    MergedProjectId(string)[Admin],
  GetMoveFileFromTempToPermJobResultRequest(class)[File],
    JobId(string)[File],
  GetProjectByIdRequest(class)[Project],
    ProjectId(string)[Project],
  GetProjectChatUsersRequest(class)[Chat],
    ProjectId(string)[Chat],
  GetProjectCopyJobProjectRequest(class)[Project],
    JobId(string)[Project],
  GetProjectDescriptorFieldValuesRequest(class)[Descriptor],
    ProjectId(string)[Descriptor],
    Page(int)[Descriptor],
    PageSize(int)[Descriptor],
  GetProjectDescriptorLinksRequest(class)[Descriptor],
    ProjectId(string)[Descriptor],
  GetProjectDescriptorPropsRequest(class)[Descriptor],
    ProjectId(string)[Descriptor],
  GetProjectDescriptorsPagedRequest(class)[Descriptor],
    ProjectId(string)[Descriptor],
    Page(int)[Descriptor],
    PageSize(int)[Descriptor],
  GetProjectGroupLinksRequest(class)[Security],
    ProjectId(string)[Security],
  GetProjectGroupsRequest(class)[Security],
    ProjectId(string)[Security],
  GetProjectImportJobExceptionsRequest(class)[Project],
    JobId(string)[Project],
  GetProjectImportStatusRequest(class)[Project],
    JobId(string)[Project],
  GetProjectSecurityInfoRequest(class)[Admin],
    ProjectId(string)[Admin],
  GetProjectTagsExportFileURLJobIdRequest(class)[Tag],
    ProjectId(string)[Tag],
    FileExtension(string)[Tag],
    IncludeExcerpts(bool)[Tag],
    EncryptedSymKey(string)[Tag],
  GetProjectTagsExportJobFileURLRequest(class)[Tag],
    JobId(string)[Tag],
  GetProjectUsersRequest(class)[User],
    ProjectId(string)[User],
  GetResourceLinksRequest(class)[Descriptor],
    ProjectId(string)[Descriptor],
    ResourceId(string)[Descriptor],
  GetResourcesByProjectRequest(class)[Resource],
    ProjectId(string)[Resource],
  GetResourceSyncItemsRequest(class)[Resource],
    ProjectId(string)[Resource],
    ResourceId(string)[Resource],
  GetRetroUpcodeJobTagApplicationsRequest(class)[Tag],
    JobId(string)[Tag],
  GetSearchExcerptsJobResultsRequest(class)[Excerpt],
    JobId(string)[Excerpt],
  GetSearchMemosJobResultsRequest(class)[Memo],
    JobId(string)[Memo],
  GetSurveyImportStatusRequest(class)[SurveyImport],
    JobId(string)[SurveyImport],
  GetTagApplicationsByProjectRequest(class)[Tag],
    ProjectId(string)[Tag],
    Page(int)[Tag],
    PageSize(int)[Tag],
  GetTagLinksByProjectRequest(class)[Tag],
    ProjectId(string)[Tag],
  GetTagsByProjectRequest(class)[Tag],
    ProjectId(string)[Tag],
  GetTagsFromSpreadsheetJobResultRequest(class)[Tag],
    JobId(string)[Tag],
  GetTestExcerptsRequest(class)[Training],
    ProjectId(string)[Training],
    TestId(string)[Training],
  GetTestMasterTagApplicationsRequest(class)[Training],
    ProjectId(string)[Training],
    TestId(string)[Training],
  GetTestResultsByProjectRequest(class)[Training],
    ProjectId(string)[Training],
  GetTestResultTagAppsRequest(class)[Training],
    ProjectId(string)[Training],
    TestId(string)[Training],
    TestResultId(string)[Training],
  GetTestsByProjectRequest(class)[Training],
    ProjectId(string)[Training],
  GetTestTagsRequest(class)[Training],
    ProjectId(string)[Training],
    TestId(string)[Training],
  GetTranscripstsRequest(class)[Resource],
    ProjectId(string)[Resource],
  GetTranscriptExportJobIdRequest(class)[Resource],
    ProjectId(string)[Resource],
    TranscriptId(string)[Resource],
  GetUserFullDetailsByUserRequest(class)[Admin],
    UserId(string)[Admin],
  GetVideoResourceByJobIdRequest(class)[Resource],
    ProjectId(string)[Resource],
    JobId(string)[Resource],
  GrantAdminRequest(class)[Account],
    AccountId(string)[Account],
    UserId(string)[Account],
  GridChartExportVO(class)[Export],
    Title(string)[Export],
    ColumnLabels(array)[Export],
      ColumnLabelsItem(string)[Export],
    RowLabels(array)[Export],
      RowLabelsItem(string)[Export],
    Rows(array)[Export],
      RowsItem(array)[Export],
        RowsItemItem(float)[Export],
    MaxCount(float)[Export],
    ColorByTotal(bool)[Export],
  HttpValidationProblemDetails(class)[Account, Admin, Chat, DataSet, Descriptor, Error, Excerpt, Export, File, Memo, Project, Resource, Security, SurveyImport, Tag, Training, User, Users, FileStorage, Login],
    Type(string)[Account, Admin, Chat, DataSet, Descriptor, Error, Excerpt, Export, File, Memo, Project, Resource, Security, SurveyImport, Tag, Training, User, Users, FileStorage, Login],
    Title(string)[Account, Admin, Chat, DataSet, Descriptor, Error, Excerpt, Export, File, Memo, Project, Resource, Security, SurveyImport, Tag, Training, User, Users, FileStorage, Login],
    Status(int)[Account, Admin, Chat, DataSet, Descriptor, Error, Excerpt, Export, File, Memo, Project, Resource, Security, SurveyImport, Tag, Training, User, Users, FileStorage, Login],
    Detail(string)[Account, Admin, Chat, DataSet, Descriptor, Error, Excerpt, Export, File, Memo, Project, Resource, Security, SurveyImport, Tag, Training, User, Users, FileStorage, Login],
    Instance(string)[Account, Admin, Chat, DataSet, Descriptor, Error, Excerpt, Export, File, Memo, Project, Resource, Security, SurveyImport, Tag, Training, User, Users, FileStorage, Login],
    HttpValidationProblemDetailsErrors(class)[Account, Admin, Chat, DataSet, Descriptor, Error, Excerpt, Export, File, Memo, Project, Resource, Security, SurveyImport, Tag, Training, User, Users, FileStorage, Login],
      Errors(array)[Account, Admin, Chat, DataSet, Descriptor, Error, Excerpt, Export, File, Memo, Project, Resource, Security, SurveyImport, Tag, Training, User, Users, FileStorage, Login],
        ErrorsItem(string)[Account, Admin, Chat, DataSet, Descriptor, Error, Excerpt, Export, File, Memo, Project, Resource, Security, SurveyImport, Tag, Training, User, Users, FileStorage, Login],
  ImpersonateUserRequest(class)[Security],
    Username(string)[Security],
    Email(string)[Security],
  ImportFieldsRequest(class)[Descriptor],
    ProjectId(string)[Descriptor],
    UserId(string)[Descriptor],
    FieldInfos(array)[Descriptor],
      FieldInfo(ref)[Descriptor],
    ExistingSetId(string)[Descriptor],
    NewSetTitle(string)[Descriptor],
  InviteUserToProjectRequest(class)[User],
    ProjectId(string)[User],
    Email(string)[User],
    GroupId(string)[User],
  IsCopyMemosToDocumentsJobCompleteRequest(class)[Memo],
    JobId(string)[Memo],
  IsDeletedProjectJobCompleteRequest(class)[Project],
    JobId(string)[Project],
  IsDeleteExcerptsJobCompleteRequest(class)[Excerpt],
    JobId(string)[Excerpt],
  IsExportJobCompleteRequest(class)[Export],
    JobId(string)[Export],
  IsForceDeleteDescriptorSetPolledCompleteRequest(class)[Descriptor],
    JobId(string)[Descriptor],
  IsJobCompleteRequest(class)[Resource, Tag],
    JobId(string)[Resource, Tag],
  IsJobManagerJobCompleteRequest(class)[File],
    JobId(string)[File],
  IsResourceAudioConversionCompleteRequest(class)[Resource],
    JobId(string)[Resource],
  IsResourceVideoConversionCompleteRequest(class)[Resource],
    JobId(string)[Resource],
  IsRetroUpcodeJobCompleteRequest(class)[Tag],
    JobId(string)[Tag],
  IsTestAddCompleteRequest(class)[Training],
    AddTestWorkerId(string)[Training],
  LinkFoldersToMemosRequest(class)[Memo],
    ProjectId(string)[Memo],
    FolderIds(array)[Memo],
      FolderIdsItem(string)[Memo],
    MemoIds(array)[Memo],
      MemoIdsItem(string)[Memo],
  LinkObjectRequest(class)[Memo],
    ProjectId(string)[Memo],
    MemoId(string)[Memo],
    ObjectIdWithPos(ref)[Memo],
    ObjectIdWithPos(ref)[Memo],
    ObjectIdWithPos(ref)[Memo],
    ObjectIdWithPos(ref)[Memo],
  LinkUserRequest(class)[Security],
    UserId(string)[Security],
    ProjectId(string)[Security],
    GroupId(string)[Security],
  LinkUsertoAccountRequest(class)[User],
    UserId(string)[User],
    AccountId(string)[User],
  LinkUserWithInvitationRequest(class)[Security],
    UserId(string)[Security],
    ProjectId(string)[Security],
    GroupId(string)[Security],
    InvitationId(string)[Security],
  LoadProjectMemosFoldersAndLinksRequest(class)[Memo],
    ProjectId(string)[Memo],
  LockResourceRequest(class)[Resource],
    ProjectId(string)[Resource],
    ResourceId(string)[Resource],
  LoginRequest(class)[Login],
    Username(string)[Login],
    RsaEncryptedPassword(string)[Login],
  MemoAndLinks(class)[Memo],
    Memo(ref)[Memo],
    Links(array)[Memo],
      MemoLink(ref)[Memo],
    FolderLinks(array)[Memo],
      MemoFolderLink(ref)[Memo],
  MemoLink(class)[Memo],
    ProjectIdKey(string)[Memo],
    Id(string)[Memo],
    ProjectId(string)[Memo],
    MemoId(string)[Memo],
    ResourceId(string)[Memo],
    ExcerptId(string)[Memo],
    DescriptorId(string)[Memo],
    TagId(string)[Memo],
    CreateStamp(DateTime)[Memo],
    CreateUserId(string)[Memo],
    Position(int)[Memo],
  MemoFolderLink(class)[Memo],
    ProjectIdKey(string)[Memo],
    ProjectId(string)[Memo],
    Id(string)[Memo],
    ProjectIDL(string)[Memo],
    MemoId(string)[Memo],
    MemoFolderId(string)[Memo],
  MemosFoldersAndLinks(class)[Memo],
    Memos(array)[Memo],
      Memo(ref)[Memo],
    Folders(array)[Memo],
      MemoFolder(ref)[Memo],
    Links(array)[Memo],
      MemoLink(ref)[Memo],
    FolderLinks(array)[Memo],
      MemoFolderLink(ref)[Memo],
  MergeProjectsRequest(class)[Admin],
    Project1Id(string)[Admin],
    Project2Id(string)[Admin],
    NewTitle(string)[Admin],
    NewDescription(string)[Admin],
    CreatorId(string)[Admin],
    MergeCodes(bool)[Admin],
  MergeTagsRequest(class)[Tag],
    ProjectId(string)[Tag],
    Tag1Id(string)[Tag],
    Tag2Id(string)[Tag],
  MigrateUserToAccountRequest(class)[Admin],
    UserToBeMovedId(string)[Admin],
    AccountIdToMoveTo(string)[Admin],
  OverrideVerifyRequest(class)[Admin],
    UserId(string)[Admin],
  PaymentResponse(class)[User],
    IsSuccessfull(bool)[User],
    TransactionId(string)[User],
    Errors(array)[User],
      ErrorsItem(string)[User],
    CreditTransaction2(ref)[User],
    BillingTransaction2(ref)[User],
  ProblemDetails(class)[Account, Admin, Chat, DataSet, Descriptor, Error, Excerpt, Export, File, Memo, Project, Resource, Security, SurveyImport, Tag, Training, User, Users, FileStorage, Login, Information],
    Type(string)[Account, Admin, Chat, DataSet, Descriptor, Error, Excerpt, Export, File, Memo, Project, Resource, Security, SurveyImport, Tag, Training, User, Users, FileStorage, Login, Information],
    Title(string)[Account, Admin, Chat, DataSet, Descriptor, Error, Excerpt, Export, File, Memo, Project, Resource, Security, SurveyImport, Tag, Training, User, Users, FileStorage, Login, Information],
    Status(int)[Account, Admin, Chat, DataSet, Descriptor, Error, Excerpt, Export, File, Memo, Project, Resource, Security, SurveyImport, Tag, Training, User, Users, FileStorage, Login, Information],
    Detail(string)[Account, Admin, Chat, DataSet, Descriptor, Error, Excerpt, Export, File, Memo, Project, Resource, Security, SurveyImport, Tag, Training, User, Users, FileStorage, Login, Information],
    Instance(string)[Account, Admin, Chat, DataSet, Descriptor, Error, Excerpt, Export, File, Memo, Project, Resource, Security, SurveyImport, Tag, Training, User, Users, FileStorage, Login, Information],
  ProcessPaymentRequest(class)[Admin],
    AccountId(string)[Admin],
    Amount(double)[Admin],
    Memo(string)[Admin],
  ProcessUIErrorRequest(class)[Error],
    ProjectId(string)[Error],
    UserId(string)[Error],
    Workspace(string)[Error],
    ErrorCode(string)[Error],
    Message(string)[Error],
    CurrentTarget(string)[Error],
    Stacktrace(string)[Error],
  Project(class)[Project],
    Id(string)[Project],
    Title(string)[Project],
    Description(string)[Project],
    AdminIDL(string)[Project],
    CreateStamp(DateTime)[Project],
    CreatedBy(string)[Project],
    SymmetricHash(string)[Project],
  ProjectAccessDetails(class)[Account],
    ProjectId(string)[Account],
    ProjectTitle(string)[Account],
    GroupId(string)[Account],
    GroupTitle(string)[Account],
    AccessGroupId(string)[Account],
  ProjectDescriptorProps(class)[Descriptor],
    ProjectDescriptorSets(array)[Descriptor],
      DescriptorSet(ref)[Descriptor],
    ProjectDescriptorFields(array)[Descriptor],
      DescriptorField(ref)[Descriptor],
    ProjectDescriptorFieldOptions(array)[Descriptor],
      DescriptorFieldOption(ref)[Descriptor],
  ProjectImportStatus(class)[Project],
    ResourcesToProcess(int)[Project],
    ResourcesProcessed(int)[Project],
    ResourcesErrored(int)[Project],
    ExcerptsToProcess(int)[Project],
    ExcerptsProcessed(int)[Project],
    ExcerptsErrored(int)[Project],
    Errors(array)[Project],
      ErrorsItem(string)[Project],
    Finished(bool)[Project],
  RegisterConnectionRequest(class)[User],
    UserId(string)[User],
    ConnectionKey(string)[User],
  RejectInvitationByCurrentUserRequest(class)[User],
    InvitationId(string)[User],
  RemoveTagApplicationRequest(class)[Tag],
    ProjectId(string)[Tag],
    TagAppId(string)[Tag],
  RemoveUserFromCurrentAccountRequest(class)[Account],
    UserId(string)[Account],
  ResetUserPasswordByEmailRequest(class)[Security],
    UserEmail(string)[Security],
  ResetUserPasswordByUsernameRequest(class)[Security],
    Username(string)[Security],
  RevokeAdminRequest(class)[Account],
    AccountId(string)[Account],
    UserId(string)[Account],
  RSAWriteKeyInfo(class)[File, Login],
    Modulus(string)[File, Login],
    Exponent(string)[File, Login],
  SaveTestResultRequest(class)[Training],
    ProjectId(string)[Training],
    TraineeUserId(string)[Training],
    TestId(string)[Training],
    OverallRating(double)[Training],
    TraineeTagApps(array)[Training],
      TrainingTestTagApp(ref)[Training],
    Completed(bool)[Training],
  SendAllClientsMessageRequest(class)[Admin],
    Title(string)[Admin],
    Message(string)[Admin],
  SendContactRequestEmailRequest(class)[User],
    Firstname(string)[User],
    Lastname(string)[User],
    Email(string)[User],
    Phone(string)[User],
    Institution(string)[User],
    Comments(string)[User],
  SendPaymentReceiptRequest(class)[Account],
    AccountId(string)[Account],
    TransactionId(string)[Account],
    Email(string)[Account],
  ServiceMessage(class)[Information],
    Title(string)[Information],
    Start(DateTime)[Information],
    End(DateTime)[Information],
    Description(string)[Information],
  SetAccountCPUPMOverrideRequest(class)[Admin],
    AccountId(string)[Admin],
    CpupmOverride(double)[Admin],
    EndDate(DateTime)[Admin],
  SetAccountGroupDiscountRequest(class)[Admin],
    AccountId(string)[Admin],
  SetAccountStudentDiscountRequest(class)[Admin],
    AccountId(string)[Admin],
  SetAccountUserAdminStatusRequest(class)[Admin],
    AccountId(string)[Admin],
    UserId(string)[Admin],
    IsAdmin(bool)[Admin],
  SetUserPasswordRequest(class)[Admin],
    UserId(string)[Admin],
    RsaEncrptedPass(string)[Admin],
  StartAddDemoProjectRequest(class)[Admin],
    UserId(string)[Admin],
  StartAddImageResourceRequest(class)[Resource],
    ProjectId(string)[Resource],
    UserId(string)[Resource],
    FileName(string)[Resource],
    FileURI(string)[Resource],
  StartAddPDFImageResourceJobRequest(class)[Resource],
    ProjectId(string)[Resource],
    UserId(string)[Resource],
    FileName(string)[Resource],
    FileURI(string)[Resource],
  StartAddPDFSwfResourceJobRequest(class)[Resource],
    ProjectId(string)[Resource],
    Title(string)[Resource],
    FileUri(string)[Resource],
  StartConvertFieldTypeJobRequest(class)[Descriptor],
    ProjectId(string)[Descriptor],
    SetId(string)[Descriptor],
    FieldId(string)[Descriptor],
    NewFieldType(int)[Descriptor],
  StartConvertPDF2SwfRequest(class)[File],
    ProjectId(string)[File],
    PdfURI(string)[File],
  StartCopyMemosToDocumentsJobRequest(class)[Memo],
    ProjectId(string)[Memo],
    UserId(string)[Memo],
    MemoIds(array)[Memo],
      MemoIdsItem(string)[Memo],
  StartCopyProjectJobRequest(class)[Project],
    UserId(string)[Project],
    ProjectId(string)[Project],
    Title(string)[Project],
    Decription(string)[Project],
  StartDeleteExcerptsJobRequest(class)[Excerpt],
    CurrentProjectId(string)[Excerpt],
    ExcerptIds(array)[Excerpt],
      ExcerptIdsItem(string)[Excerpt],
  StartDeleteProjectRequest(class)[Project],
    ProjectId(string)[Project],
    UserId(string)[Project],
  StartDeleteResourcesJobRequest(class)[Resource],
    ProjectId(string)[Resource],
    ResourceIds(array)[Resource],
      ResourceIdsItem(string)[Resource],
  StartDocumentSearchJobRequest(class)[Resource],
    ProjectId(string)[Resource],
    SearchText(string)[Resource],
  StartExcerptsExportRequest(class)[Export],
    ProjectId(string)[Export],
    ExcerptIds(array)[Export],
      ExcerptIdsItem(string)[Export],
    ExcerptExportOptions(ref)[Export],
    SymKeyEncrypted(string)[Export],
  StartExportAccountChargesJobRequest(class)[Account],
    AccountId(string)[Account],
  StartExportAccountPaymentsJobRequest(class)[Account],
    AccountId(string)[Account],
  StartExportAccountProjectSummaryJobRequest(class)[Account],
    AccountId(string)[Account],
  StartExportBubbleChartJobRequest(class)[Export],
    ProjectId(string)[Export],
    GridChartExportVO(ref)[Export],
    Extension(string)[Export],
  StartExportDescriptorsJobRequest(class)[Descriptor],
    ProjectId(string)[Descriptor],
    SetId(string)[Descriptor],
    DescriptorIds(array)[Descriptor],
      DescriptorIdsItem(string)[Descriptor],
    FileExtension(string)[Descriptor],
  StartExportDocumentJobWithRTLRequest(class)[Resource],
    ProjectId(string)[Resource],
    ResourceId(string)[Resource],
    IncludeExRegions(bool)[Resource],
    Rtl(bool)[Resource],
    ExportExtension(string)[Resource],
    EncryptedSymKey(string)[Resource],
  StartExportFieldsJobRequest(class)[Descriptor],
    ProjectId(string)[Descriptor],
    SetId(string)[Descriptor],
    FileExtension(string)[Descriptor],
  StartExportHierarchicalChartJobRequest(class)[Export],
    ProjectId(string)[Export],
    ChartHierarchicalExportInfo(ref)[Export],
  StartExportMemosRequest(class)[Memo],
    ProjectId(string)[Memo],
    MemoIds(array)[Memo],
      MemoIdsItem(string)[Memo],
    Description(string)[Memo],
    Extension(string)[Memo],
    IncludeCodes(bool)[Memo],
    IncludeMedia(bool)[Memo],
    IncludeExcerpts(bool)[Memo],
    IncludeDescriptors(bool)[Memo],
    SymKey(string)[Memo],
  StartExportMemosXMLRequest(class)[Memo],
    ProjectId(string)[Memo],
    MemoIds(array)[Memo],
      MemoIdsItem(string)[Memo],
    CodeSelection(int)[Memo],
    MediaSelection(int)[Memo],
    ExcerptsSelection(int)[Memo],
    DescriptorsSelection(int)[Memo],
    SymKey(string)[Memo],
  StartExportPDFSwfJobRequest(class)[Resource],
    ProjectId(string)[Resource],
    ResourceId(string)[Resource],
  StartExportResourcesJobRequest(class)[Resource],
    ProjectId(string)[Resource],
    ResourceIds(array)[Resource],
      ResourceIdsItem(string)[Resource],
    IncludeDescriptorInfo(bool)[Resource],
    IncludeCodeCounts(bool)[Resource],
  StartExportSingleSeriesChartJobRequest(class)[Export],
    ProjectId(string)[Export],
    ExportInfo(array)[Export],
      ChartExportInfo(ref)[Export],
  StartExportTestResultJobRequest(class)[Training],
    ProjectId(string)[Training],
    TestResultId(string)[Training],
    FileExtension(string)[Training],
    CryptoKey(string)[Training],
  StartGetAccountProjectInfoJobRequest(class)[Account],
    AccountId(string)[Account],
  StartGetDesDataFromFileJobRequest(class)[Descriptor],
    LocalFileURL(string)[Descriptor],
    SetId(string)[Descriptor],
    ProjectId(string)[Descriptor],
  StartGetTagsFromImportJobRequest(class)[Tag],
    FileURL(string)[Tag],
  StartGridChartExportJobRequest(class)[Export],
    ProjectId(string)[Export],
    GridChartExportVO(ref)[Export],
    Extension(string)[Export],
  StartImportDescriptorsJobRequest(class)[Descriptor],
    ProjectId(string)[Descriptor],
    UserId(string)[Descriptor],
    SetId(string)[Descriptor],
    DescriptorInfos(array)[Descriptor],
      DescriptorInfo(ref)[Descriptor],
  StartImportMemosXMLRequest(class)[Memo],
    ProjectId(string)[Memo],
    FileURI(string)[Memo],
  StartImportTagsJobRequest(class)[Tag],
    ProjectId(string)[Tag],
    TagVOs(array)[Tag],
      TagImportVO(ref)[Tag],
  TagImportVO(class)[Tag],
    Id(int)[Tag],
    ParentId(int)[Tag],
    Title(string)[Tag],
    Description(string)[Tag],
    IsWeighted(bool)[Tag],
    WeightMin(int)[Tag],
    WeightMax(int)[Tag],
    WeightDefault(int)[Tag],
    RowIndex(int)[Tag],
  StartProjectExportJobRequest(class)[Project],
    ProjectId(string)[Project],
    Password(string)[Project],
    Email(string)[Project],
    Extension(string)[Project],
    EncryptedSymKey(string)[Project],
  StartProjectImportJobRequest(class)[Project],
    ProjectId(string)[Project],
    FileURI(string)[Project],
    Password(string)[Project],
  StartRetroUpcodeJobRequest(class)[Tag],
    ProjectId(string)[Tag],
    UserId(string)[Tag],
  StartSearchExcerptsJobRequest(class)[Excerpt],
    ProjectId(string)[Excerpt],
    SearchText(string)[Excerpt],
  StartSearchMemosJobRequest(class)[Memo],
    ProjectId(string)[Memo],
    SearchText(string)[Memo],
  StartSurveyImportJobRequest(class)[SurveyImport],
    ProjectId(string)[SurveyImport],
    SurveyUploadedFileURL(string)[SurveyImport],
    EncryptedSymKey(string)[SurveyImport],
  StoreProjectFileStringRequest(class)[File],
    ProjectId(string)[File],
    FileStorageType(int)[File],
    Extension(string)[File],
    Text(string)[File],
  SubmitCurrentAccountPaymentRequest(class)[User],
    Amount(double)[User],
    FirstName(string)[User],
    LastName(string)[User],
    Address1(string)[User],
    Address2(string)[User],
    City(string)[User],
    State(string)[User],
    Country(string)[User],
    Zip(string)[User],
    CardType(int)[User],
    CardNum(string)[User],
    CardCCV(string)[User],
    ExpMonth(int)[User],
    ExpYear(int)[User],
    SaveAsReoccuring(bool)[User],
  SubmitEulaRequest(class)[User],
    UserId(string)[User],
  SubmitPaymentRequest(class)[Admin],
    AccountId(string)[Admin],
    Amount(double)[Admin],
    FirstName(string)[Admin],
    LastName(string)[Admin],
    Address1(string)[Admin],
    Address2(string)[Admin],
    City(string)[Admin],
    State(string)[Admin],
    Country(string)[Admin],
    Zip(string)[Admin],
    CardType(int)[Admin],
    CardNum(string)[Admin],
    CardCCV(string)[Admin],
    ExpMonth(int)[Admin],
    ExpYear(int)[Admin],
    SaveAsReoccuring(bool)[Admin],
  SubmitProjectChatMessageRequest(class)[Chat],
    ProjectId(string)[Chat],
    UserId(string)[Chat],
    Message(string)[Chat],
  SurveyImportStatusVO(class)[SurveyImport],
    IsComplete(bool)[SurveyImport],
    Errors(array)[SurveyImport],
      ErrorsItem(string)[SurveyImport],
    ExceptionCount(int)[SurveyImport],
  TrainingTestExcerpt(class)[Training],
    ProjectIdKey(string)[Training],
    Id(string)[Training],
    TrainingTestIDL(string)[Training],
    CreateDate(DateTime)[Training],
    ExcerptDataPathURL(string)[Training],
    ProjectId(string)[Training],
    OriginalResourceId(string)[Training],
    OriginalExcerptId(string)[Training],
    OriginalStartLocation(int)[Training],
    OriginalEndLocation(int)[Training],
  TrainingTestMasterTagApp(class)[Training],
    ProjectIdKey(string)[Training],
    ProjectId(string)[Training],
    Id(string)[Training],
    TrainingTestIDL(string)[Training],
    CreatedOn(DateTime)[Training],
    TrainingTagIDL(string)[Training],
    Weight(double)[Training],
    ProjectIDL(string)[Training],
    TrainingTestExcerptId(string)[Training],
  TrainingTestResult(class)[Training],
    ProjectIdKey(string)[Training],
    ProjectId(string)[Training],
    Id(string)[Training],
    ProjectIDL(string)[Training],
    TakenBy(string)[Training],
    TakenOn(DateTime)[Training],
    TrainingTestIDL(string)[Training],
    OverallRating(double)[Training],
    Completed(bool)[Training],
  TrainingTestTag(class)[Training],
    ProjectIdKey(string)[Training],
    ProjectId(string)[Training],
    Id(string)[Training],
    TrainingTestIDL(string)[Training],
    Title(string)[Training],
    TrainingTagParentIDL(string)[Training],
    DateCreated(DateTime)[Training],
    Description(string)[Training],
    IsWeighted(bool)[Training],
    WeightMin(double)[Training],
    WeightMax(double)[Training],
    WeightDefault(double)[Training],
    SortOrder(int)[Training],
    ProjectIDL(string)[Training],
  TranscriptSyncItem(class)[Resource],
    ProjectIdKey(string)[Resource],
    Id(string)[Resource],
    ProjectId(string)[Resource],
    ResourceId(string)[Resource],
    TranscriptId(string)[Resource],
    ResourcePosition(int)[Resource],
    TranscriptPosition(int)[Resource],
  UnlinkObjectRequest(class)[Memo],
    ProjectId(string)[Memo],
    MemoId(string)[Memo],
    ResourceId(string)[Memo],
    ExcerptId(string)[Memo],
    DescriptorId(string)[Memo],
    TagId(string)[Memo],
  UnlinkUserFromProjectRequest(class)[Admin, Security],
    ProjectId(string)[Admin, Security],
    UserId(string)[Admin, Security],
  UnlockResourceRequest(class)[Resource],
    ProjectId(string)[Resource],
    ResourceId(string)[Resource],
  UnsafeLoginRequest(class)[Login],
    Username(string)[Login],
    Password(string)[Login],
  UpdateAccountPWPolicyRequest(class)[Account],
    AccountId(string)[Account],
    EnforcePolicy(bool)[Account],
    MinLength(int)[Account],
    RequireChar(bool)[Account],
    RequireUpper(bool)[Account],
    RequireNumber(bool)[Account],
    RequireSymbol(bool)[Account],
    MaxAgeInDays(double)[Account],
    Require2Auth(bool)[Account],
    Relogin2Auth(bool)[Account],
    IdleTimeoutInMinutes(int)[Account],
  UpdateAccountUserRequest(class)[Account],
    UserId(string)[Account],
    FirstName(string)[Account],
    LastName(string)[Account],
    Phone(string)[Account],
    Email(string)[Account],
    Active(bool)[Account],
  UpdateConnectionRequest(class)[User],
    UserId(string)[User],
    ConnectionKey(string)[User],
    ProjectId(string)[User],
  UpdateCurrentUserPasswordRequest(class)[User],
    UserId(string)[User],
    EncryptedPass(string)[User],
  UpdateDataSetRequest(class)[DataSet],
    DataSetVO(ref)[DataSet],
  UpdateDescriptorSetRequest(class)[Descriptor],
    DescriptorSet(ref)[Descriptor],
  UpdateDocumentDataAndExcerptsRequest(class)[Resource],
    ProjectId(string)[Resource],
    UserId(string)[Resource],
    ResourceId(string)[Resource],
    UpdatedTextDataURI(string)[Resource],
    UpdatedLength(int)[Resource],
    Excerpts(array)[Resource],
      Excerpt(ref)[Resource],
  UpdateExcerptRangeRequest(class)[Excerpt],
    ProjectId(string)[Excerpt],
    UserId(string)[Excerpt],
    ExcerptId(string)[Excerpt],
    NewStart(int)[Excerpt],
    NewEnd(int)[Excerpt],
    UpdatedTextURI(string)[Excerpt],
  UpdateExcerptTextRequest(class)[Excerpt],
    ProjectIDL(string)[Excerpt],
    ExcerptId(string)[Excerpt],
    Text(string)[Excerpt],
  UpdateFieldAndOptionsRequest(class)[Descriptor],
    ProjectId(string)[Descriptor],
    FieldId(string)[Descriptor],
    Title(string)[Descriptor],
    Description(string)[Descriptor],
    Options(array)[Descriptor],
      FieldOptionVO(ref)[Descriptor],
    DeletedOptionIds(array)[Descriptor],
      DeletedOptionIdsItem(string)[Descriptor],
  UpdateFieldOrdersRequest(class)[Descriptor],
    ProjectId(string)[Descriptor],
    Fields(array)[Descriptor],
      FieldVO(ref)[Descriptor],
  UpdateFolderTitleRequest(class)[Memo],
    ProjectId(string)[Memo],
    FolderId(string)[Memo],
    Title(string)[Memo],
  UpdateGroupRequest(class)[Security],
    UserGroup(ref)[Security],
  UpdateImageExcerptRegionRequest(class)[Excerpt],
    ProjectId(string)[Excerpt],
    UserId(string)[Excerpt],
    ExcerptId(string)[Excerpt],
    Start(int)[Excerpt],
    End(int)[Excerpt],
  UpdateMemoRequest(class)[Memo],
    Memo(ref)[Memo],
    FolderIds(array)[Memo],
      FolderIdsItem(string)[Memo],
    MemoLinkedObjects(ref)[Memo],
  UpdatePDFSwfImageExcerptRegionRequest(class)[Excerpt],
    ProjectId(string)[Excerpt],
    CurrentUserId(string)[Excerpt],
    ExcerptId(string)[Excerpt],
    NewStart(int)[Excerpt],
    NewEnd(int)[Excerpt],
  UpdateProjectRequest(class)[Admin],
    ProjectId(string)[Admin],
    Title(string)[Admin],
    AdminId(string)[Admin],
  UpdateProjectRequest2(class)[Project],
    ProjectId(string)[Project],
    UpdatedTitle(string)[Project],
    UpdatedDescription(string)[Project],
  UpdateResourceAndDataRequest(class)[Resource],
    ProjectId(string)[Resource],
    ResourceId(string)[Resource],
    Title(string)[Resource],
    Description(string)[Resource],
    FileURL(string)[Resource],
    Length(int)[Resource],
    IsLocked(bool)[Resource],
  UpdateResourceRequest(class)[Resource],
    ProjectId(string)[Resource],
    ResourceId(string)[Resource],
    Title(string)[Resource],
    Description(string)[Resource],
  UpdateTagAppWeightRequest(class)[Tag],
    CurrentProjectId(string)[Tag],
    TagAppId(string)[Tag],
    NewWeight(double)[Tag],
  UpdateTagLinkRequest(class)[Tag],
    TagLink(ref)[Tag],
  UpdateTagOrdersRequest(class)[Tag],
    ProjectId(string)[Tag],
    Tags(array)[Tag],
      Tag(ref)[Tag],
  UpdateTagRequest(class)[Tag],
    Tag(ref)[Tag],
  UpdateTestResultRequest(class)[Training],
    ProjectId(string)[Training],
    TraineeUserId(string)[Training],
    TestId(string)[Training],
    ResultId(string)[Training],
    OverallRating(double)[Training],
    TraineeTagApps(array)[Training],
      TrainingTestTagApp(ref)[Training],
    Completed(bool)[Training],
  UpdateTranscriptDataRequest(class)[Resource],
    ResourceTranscript(ref)[Resource],
    TranscriptData(string)[Resource],
    SyncItems(array)[Resource],
      TranscriptSyncItem(ref)[Resource],
  UpdateUserGroupRequest(class)[Admin],
    UserGroup(ref)[Admin],
  UpdateUserInfoRequest(class)[Admin],
    UserId(string)[Admin],
    Username(string)[Admin],
    Email(string)[Admin],
    Phone(string)[Admin],
  UpdateUserInfoRequest2(class)[User],
    UserId(string)[User],
    FirstName(string)[User],
    LastName(string)[User],
    Email(string)[User],
    Phone(string)[User],
    Address(string)[User],
    City(string)[User],
    State(string)[User],
    Country(string)[User],
    Zip(string)[User],
  UpdateUserRequest(class)[User],
    UserId(string)[User],
    FirstName(string)[User],
    LastName(string)[User],
    Phone(string)[User],
    Email(string)[User],
    Password(string)[User],
  UpdateValuesRequest(class)[Descriptor],
    ProjectId(string)[Descriptor],
    Values(array)[Descriptor],
      DescriptorField(ref)[Descriptor],
  User2(class)[User, Users],
    Id(string)[User, Users],
    Username(string)[User, Users],
    PassSalt(string)[User, Users],
    FirstName(string)[User, Users],
    LastName(string)[User, Users],
    Email(string)[User, Users],
    CreateStamp(DateTime)[User, Users],
    Phone(string)[User, Users],
    EulaStamp(DateTime)[User, Users],
    IsActive(bool)[User, Users],
    AdminDisable(bool)[User, Users],
    AccountId(string)[User, Users],
    Address(string)[User, Users],
    City(string)[User, Users],
    State(string)[User, Users],
    Country(string)[User, Users],
    Zip(string)[User, Users],
    LastLogin(DateTime)[User, Users],
    ChangePass(bool)[User, Users],
    ChagePassDate(DateTime)[User, Users],
    IsVerified(bool)[User, Users],
  UserAccountVO(class)[User],
    IsPastDue(bool)[User],
    IsDisabled(bool)[User],
    AccountId(string)[User],
    AccountUserCount(int)[User],
    AccountCPUPM(double)[User],
    CurrentBalance(double)[User],
    LastPaymentDate(DateTime)[User],
    LastPastDueNoticeDate(DateTime)[User],
    LastPaymentAmmount(double)[User],
    IsPastLateGracePeriod(bool)[User],
  UserInvitation(class)[User],
    ProjectIdKey(string)[User],
    ProjectId(string)[User],
    Id(string)[User],
    ProjectIDL(string)[User],
    InvitedByIDL(string)[User],
    UserIDL(string)[User],
    UserEmail(string)[User],
    CreateStamp(DateTime)[User],
    Accepted(bool)[User],
    Processed(bool)[User],
    AutoGroupId(string)[User],
  Validate2FactorRequest(class)[User],
    Username(string)[User],
    ConnectionKey(string)[User],
    EncryptedAuthToken(string)[User],
  ValidateUser2Request(class)[User],
    Username(string)[User],
    RsaEncryptedPass(string)[User],
    ConnectionKey(string)[User],
  ValidateUserRequest(class)[User],
    Username(string)[User],
    PassSalt(string)[User],
    ConnectionKey(string)[User],
  ValidateUserResult(class)[User, Users],
    User2(ref)[User, Users],
    IsFederated(bool)[User, Users],
    AccountIdleTimeout(int)[User, Users],
    AccountRequire2Factor(bool)[User, Users],
    AccountRequire2FactorOnRelog(bool)[User, Users],
    IsValidated(bool)[User, Users],
  RemoveUserFromCurrentAccountRequest(ref)[Account],
  SendPaymentReceiptRequest(ref)[Account],
  DisableRecurringPaymentRequest(ref)[Account],
  UpdateAccountUserRequest(ref)[Account],
  GetExportStorageMetricsJobIdRequest(ref)[Account],
  StartExportAccountProjectSummaryJobRequest(ref)[Account],
  UpdateAccountPWPolicyRequest(ref)[Account],
  StartGetAccountProjectInfoJobRequest(ref)[Account],
  GetAccountProjectInfoJobResponseRequest(ref)[Account],
  StartExportAccountChargesJobRequest(ref)[Account],
  StartExportAccountPaymentsJobRequest(ref)[Account],
  GrantAdminRequest(ref)[Account],
  RevokeAdminRequest(ref)[Account],
  SetUserPasswordRequest(ref)[Admin],
  UpdateUserInfoRequest(ref)[Admin],
  GetFilteredProjectsAndUsersRequest(ref)[Admin],
  GetFilteredUsersRequest(ref)[Admin],
  GetFilteredProjectsRequest(ref)[Admin],
  GetUserFullDetailsByUserRequest(ref)[Admin],
  CreateAccountRequest(ref)[Admin],
  MergeProjectsRequest(ref)[Admin],
  GetMergeStatusRequest(ref)[Admin],
  ProcessPaymentRequest(ref)[Admin],
  GetProjectSecurityInfoRequest(ref)[Admin],
  AddGroupToProjectRequest(ref)[Admin],
  UpdateUserGroupRequest(ref)[Admin],
  AddUserToGroupRequest(ref)[Admin],
  UnlinkUserFromProjectRequest(ref)[Admin],
  SubmitPaymentRequest(ref)[Admin],
  AddUserToAccountRequest(ref)[Admin],
  AddCreditsToAccountRequest(ref)[Admin],
  SetAccountUserAdminStatusRequest(ref)[Admin],
  AddNewUserToAccountRequest(ref)[Admin],
  GetAccountTransactionsRequest(ref)[Admin],
  SendAllClientsMessageRequest(ref)[Admin],
  SetAccountStudentDiscountRequest(ref)[Admin],
  SetAccountGroupDiscountRequest(ref)[Admin],
  MigrateUserToAccountRequest(ref)[Admin],
  StartAddDemoProjectRequest(ref)[Admin],
  SetAccountCPUPMOverrideRequest(ref)[Admin],
  UpdateProjectRequest(ref)[Admin],
  OverrideVerifyRequest(ref)[Admin],
  GetProjectChatUsersRequest(ref)[Chat],
  GetChatMessagesRequest(ref)[Chat],
  SubmitProjectChatMessageRequest(ref)[Chat],
  GetDataSetsByProjectRequest(ref)[DataSet],
  AddDataSetRequest(ref)[DataSet],
  UpdateDataSetRequest(ref)[DataSet],
  DeleteDataSetRequest(ref)[DataSet],
  GetProjectDescriptorPropsRequest(ref)[Descriptor],
  AddDescriptorSetRequest(ref)[Descriptor],
  UpdateDescriptorSetRequest(ref)[Descriptor],
  DeleteDescriptorsRequest(ref)[Descriptor],
  ForceDeleteDescriptorSetPolledRequest(ref)[Descriptor],
  IsForceDeleteDescriptorSetPolledCompleteRequest(ref)[Descriptor],
  AddDescriptorFieldRequest(ref)[Descriptor],
  UpdateFieldAndOptionsRequest(ref)[Descriptor],
  DeleteDescriptorFieldRequest(ref)[Descriptor],
  GetProjectDescriptorsPagedRequest(ref)[Descriptor],
  GetProjectDescriptorFieldValuesRequest(ref)[Descriptor],
  AddDescriptorRequest(ref)[Descriptor],
  UpdateValuesRequest(ref)[Descriptor],
  DeleteDescriptorRequest(ref)[Descriptor],
  GetProjectDescriptorLinksRequest(ref)[Descriptor],
  AddDescriptorLinkRequest(ref)[Descriptor],
  DeleteLinkRequest(ref)[Descriptor],
  GetDesFieldImportDataFromFileRequest(ref)[Descriptor],
  ImportFieldsRequest(ref)[Descriptor],
  StartGetDesDataFromFileJobRequest(ref)[Descriptor],
  GetDesDataFromFileJobResultRequest(ref)[Descriptor],
  StartImportDescriptorsJobRequest(ref)[Descriptor],
  StartExportDescriptorsJobRequest(ref)[Descriptor],
  AddDynamicValueRequest(ref)[Descriptor],
  AddOrUpdateDynamicValuesRequest(ref)[Descriptor],
  GetDynamicValuesByProjectIdRequest(ref)[Descriptor],
  GetResourceLinksRequest(ref)[Descriptor],
  UpdateFieldOrdersRequest(ref)[Descriptor],
  StartExportFieldsJobRequest(ref)[Descriptor],
  AddLinksRequest(ref)[Descriptor],
  StartConvertFieldTypeJobRequest(ref)[Descriptor],
  GetConvertFieldTypeJobResponseRequest(ref)[Descriptor],
  ProcessUIErrorRequest(ref)[Error],
  GetExcerptsByProjectIdRequest(ref)[Excerpt],
  AddDocumentExcerptWithTagsRequest(ref)[Excerpt],
  AddVideoExcerptRequest(ref)[Excerpt],
  AddImageExcerptRequest(ref)[Excerpt],
  AddPDFImageExcerptRequest(ref)[Excerpt],
  AddPDFSwfImageExcerptRequest(ref)[Excerpt],
  AddPDFSwfTextExcerptRequest(ref)[Excerpt],
  DeleteExcerptRequest(ref)[Excerpt],
  UpdateExcerptRangeRequest(ref)[Excerpt],
  UpdateExcerptTextRequest(ref)[Excerpt],
  StartDeleteExcerptsJobRequest(ref)[Excerpt],
  IsDeleteExcerptsJobCompleteRequest(ref)[Excerpt],
  StartSearchExcerptsJobRequest(ref)[Excerpt],
  GetSearchExcerptsJobResultsRequest(ref)[Excerpt],
  UpdateImageExcerptRegionRequest(ref)[Excerpt],
  UpdatePDFSwfImageExcerptRegionRequest(ref)[Excerpt],
  StartExportSingleSeriesChartJobRequest(ref)[Export],
  StartExportHierarchicalChartJobRequest(ref)[Export],
  StartExcerptsExportRequest(ref)[Export],
  GetExcerptsExportStatusRequest(ref)[Export],
  GetExcerptsExportURLRequest(ref)[Export],
  StartGridChartExportJobRequest(ref)[Export],
  StartExportBubbleChartJobRequest(ref)[Export],
  IsExportJobCompleteRequest(ref)[Export],
  GetExportJobURIRequest(ref)[Export],
  GetFXMLDocXPolledRequest(ref)[File],
  IsJobManagerJobCompleteRequest(ref)[File],
  GetFXMLDocJobResultRequest(ref)[File],
  StartConvertPDF2SwfRequest(ref)[File],
  GetConvertPDF2SwfResultRequest(ref)[File],
  StoreProjectFileStringRequest(ref)[File],
  GetMoveFileFromTempToPermJobResultRequest(ref)[File],
  EmailFileRequest(ref)[File],
  GetExportJobFileURIRequest(ref)[File],
  LoadProjectMemosFoldersAndLinksRequest(ref)[Memo],
  AddMemoRequest(ref)[Memo],
  UpdateMemoRequest(ref)[Memo],
  DeleteMemoRequest(ref)[Memo],
  AddFolderRequest(ref)[Memo],
  UpdateFolderTitleRequest(ref)[Memo],
  DeleteFolderRequest(ref)[Memo],
  AddMemoFolderLinksRequest(ref)[Memo],
  LinkFoldersToMemosRequest(ref)[Memo],
  LinkObjectRequest(ref)[Memo],
  UnlinkObjectRequest(ref)[Memo],
  StartExportMemosRequest(ref)[Memo],
  StartExportMemosXMLRequest(ref)[Memo],
  StartImportMemosXMLRequest(ref)[Memo],
  StartSearchMemosJobRequest(ref)[Memo],
  GetSearchMemosJobResultsRequest(ref)[Memo],
  StartCopyMemosToDocumentsJobRequest(ref)[Memo],
  IsCopyMemosToDocumentsJobCompleteRequest(ref)[Memo],
  GetCopyMemosToDocumentsJobResultRequest(ref)[Memo],
  GetImportMemosXMLResponseRequest(ref)[Memo],
  GetExportAccountProjectsJobIdRequest(ref)[Project],
  AddProjectByUserRequest(ref)[Project],
  AddProjectEncryptedByUserRequest(ref)[Project],
  StartCopyProjectJobRequest(ref)[Project],
  GetCopyProjectStatusRequest(ref)[Project],
  GetProjectCopyJobProjectRequest(ref)[Project],
  UpdateProjectRequest2(ref)[Project],
  StartDeleteProjectRequest(ref)[Project],
  IsDeletedProjectJobCompleteRequest(ref)[Project],
  CheckEncryptedDataRequest(ref)[Project],
  StartProjectExportJobRequest(ref)[Project],
  StartProjectImportJobRequest(ref)[Project],
  GetProjectImportJobExceptionsRequest(ref)[Project],
  GetProjectByIdRequest(ref)[Project],
  GetProjectImportStatusRequest(ref)[Project],
  GetResourcesByProjectRequest(ref)[Resource],
  AddResourceRequest(ref)[Resource],
  DeleteResourceRequest(ref)[Resource],
  StartDeleteResourcesJobRequest(ref)[Resource],
  UpdateResourceRequest(ref)[Resource],
  StartExportDocumentJobWithRTLRequest(ref)[Resource],
  UpdateResourceAndDataRequest(ref)[Resource],
  LockResourceRequest(ref)[Resource],
  UnlockResourceRequest(ref)[Resource],
  AddVideoResourceRequest(ref)[Resource],
  IsResourceVideoConversionCompleteRequest(ref)[Resource],
  GetVideoResourceByJobIdRequest(ref)[Resource],
  AddAudioResourceRequest(ref)[Resource],
  IsResourceAudioConversionCompleteRequest(ref)[Resource],
  GetAudioResourceByJobIdRequest(ref)[Resource],
  GetAudioSampleRequest(ref)[Resource],
  GetTranscripstsRequest(ref)[Resource],
  AddTranscriptRequest(ref)[Resource],
  UpdateTranscriptDataRequest(ref)[Resource],
  DeleteTranscriptRequest(ref)[Resource],
  GetTranscriptExportJobIdRequest(ref)[Resource],
  GetResourceSyncItemsRequest(ref)[Resource],
  CloneDocumentRequest(ref)[Resource],
  IsJobCompleteRequest(ref)[Resource],
  GetExportJobURLRequest(ref)[Resource],
  StartExportResourcesJobRequest(ref)[Resource],
  StartAddImageResourceRequest(ref)[Resource],
  GetAddImageResourceJobResponseRequest(ref)[Resource],
  StartAddPDFImageResourceJobRequest(ref)[Resource],
  GetAddPDFImageResourceJobResponseRequest(ref)[Resource],
  StartDocumentSearchJobRequest(ref)[Resource],
  GetDocumentSearchJobResultRequest(ref)[Resource],
  UpdateDocumentDataAndExcerptsRequest(ref)[Resource],
  StartAddPDFSwfResourceJobRequest(ref)[Resource],
  GetAddPDFSwfResourceJobResponseRequest(ref)[Resource],
  StartExportPDFSwfJobRequest(ref)[Resource],
  GetExportPDFSwfJobResultRequest(ref)[Resource],
  GetProjectGroupLinksRequest(ref)[Security],
  AddGroupRequest(ref)[Security],
  LinkUserRequest(ref)[Security],
  LinkUserWithInvitationRequest(ref)[Security],
  GetProjectGroupsRequest(ref)[Security],
  UpdateGroupRequest(ref)[Security],
  DeleteGroupRequest(ref)[Security],
  UnlinkUserFromProjectRequest(ref)[Security],
  ResetUserPasswordByEmailRequest(ref)[Security],
  ResetUserPasswordByUsernameRequest(ref)[Security],
  ImpersonateUserRequest(ref)[Security],
  StartSurveyImportJobRequest(ref)[SurveyImport],
  GetSurveyImportStatusRequest(ref)[SurveyImport],
  GetTagsByProjectRequest(ref)[Tag],
  AddTagRequest(ref)[Tag],
  AddTagWithParentRequest(ref)[Tag],
  UpdateTagRequest(ref)[Tag],
  DeleteTagByJobRequest(ref)[Tag],
  GetDeleteTagByJobResponseRequest(ref)[Tag],
  GetTagLinksByProjectRequest(ref)[Tag],
  AddTagLinkRequest(ref)[Tag],
  UpdateTagLinkRequest(ref)[Tag],
  DeleteTagLinkRequest(ref)[Tag],
  GetTagApplicationsByProjectRequest(ref)[Tag],
  AddExcerptTagApplicationRequest(ref)[Tag],
  AddExcerptTagApplicationsRequest(ref)[Tag],
  UpdateTagAppWeightRequest(ref)[Tag],
  RemoveTagApplicationRequest(ref)[Tag],
  GetProjectTagsExportFileURLJobIdRequest(ref)[Tag],
  IsJobCompleteRequest(ref)[Tag],
  GetProjectTagsExportJobFileURLRequest(ref)[Tag],
  StartGetTagsFromImportJobRequest(ref)[Tag],
  GetTagsFromSpreadsheetJobResultRequest(ref)[Tag],
  StartImportTagsJobRequest(ref)[Tag],
  MergeTagsRequest(ref)[Tag],
  UpdateTagOrdersRequest(ref)[Tag],
  StartRetroUpcodeJobRequest(ref)[Tag],
  IsRetroUpcodeJobCompleteRequest(ref)[Tag],
  GetRetroUpcodeJobTagApplicationsRequest(ref)[Tag],
  GetTestsByProjectRequest(ref)[Training],
  GetTestResultsByProjectRequest(ref)[Training],
  AddTestRequest(ref)[Training],
  IsTestAddCompleteRequest(ref)[Training],
  GetAddTestResultRequest(ref)[Training],
  GetTestTagsRequest(ref)[Training],
  GetTestExcerptsRequest(ref)[Training],
  GetTestMasterTagApplicationsRequest(ref)[Training],
  DeleteTestRequest(ref)[Training],
  GetTestResultTagAppsRequest(ref)[Training],
  SaveTestResultRequest(ref)[Training],
  UpdateTestResultRequest(ref)[Training],
  StartExportTestResultJobRequest(ref)[Training],
  ValidateUserRequest(ref)[User],
  ValidateUser2Request(ref)[User],
  SubmitEulaRequest(ref)[User],
  GetProjectUsersRequest(ref)[User],
  DoesUserEmailExistRequest(ref)[User],
  DoesUserExistRequest(ref)[User],
  InviteUserToProjectRequest(ref)[User],
  UpdateUserRequest(ref)[User],
  AddNewUserToAccountRequest2(ref)[User],
  LinkUsertoAccountRequest(ref)[User],
  SubmitCurrentAccountPaymentRequest(ref)[User],
  SendContactRequestEmailRequest(ref)[User],
  UpdateUserInfoRequest2(ref)[User],
  UpdateCurrentUserPasswordRequest(ref)[User],
  AcceptInvitationByCurrentUserRequest(ref)[User],
  RejectInvitationByCurrentUserRequest(ref)[User],
  GetFilteredUsersRequest2(ref)[User],
  GetFederationResponseForConnectionRequest(ref)[User],
  RegisterConnectionRequest(ref)[User],
  UpdateConnectionRequest(ref)[User],
  Validate2FactorRequest(ref)[User],
  UploadToFileStorageRequest(byte)[FileStorage],
  LoginRequest(ref)[Login],
  UnsafeLoginRequest(ref)[Login],
  GetProjectAccessDetailsForUser2UserId(string)[Account],
  GetBytesFromFileStorageDataPath(string)[FileStorage],
  GetStringFromFileStorageDataPath(string)[FileStorage],
  UploadToFileStorageName(string)[FileStorage],
  UploadToFileStorageProjectId(string)[FileStorage],
  UploadToFileStorageUploadType(int)[FileStorage],
  Validate2FactorCustomUsername(string)[Login],
  Validate2FactorCustomAuthToken(string)[Login],
  GetProjectAccessDetailsForUser2Response(array)[Account],
    ProjectAccessDetails(ref)[Account],
  HttpValidationProblemDetails(ref)[Account],
  ProblemDetails(ref)[Account],
  ProblemDetails(ref)[Account],
  HttpValidationProblemDetails(ref)[Account],
  ProblemDetails(ref)[Account],
  ProblemDetails(ref)[Account],
  GetAccountDetailsForCurrentUserResponse(ref)[Account],
  HttpValidationProblemDetails(ref)[Account],
  ProblemDetails(ref)[Account],
  ProblemDetails(ref)[Account],
  User(ref)[Account],
  HttpValidationProblemDetails(ref)[Account],
  ProblemDetails(ref)[Account],
  ProblemDetails(ref)[Account],
  SendPaymentReceiptResponse(string)[Account],
  HttpValidationProblemDetails(ref)[Account],
  ProblemDetails(ref)[Account],
  ProblemDetails(ref)[Account],
  DisableRecurringPaymentResponse(class)[Account],
  HttpValidationProblemDetails(ref)[Account],
  ProblemDetails(ref)[Account],
  ProblemDetails(ref)[Account],
  User(ref)[Account],
  HttpValidationProblemDetails(ref)[Account],
  ProblemDetails(ref)[Account],
  ProblemDetails(ref)[Account],
  GetExportStorageMetricsJobIdResponse(string)[Account],
  HttpValidationProblemDetails(ref)[Account],
  ProblemDetails(ref)[Account],
  ProblemDetails(ref)[Account],
  StartExportAccountProjectSummaryJobResponse(string)[Account],
  HttpValidationProblemDetails(ref)[Account],
  ProblemDetails(ref)[Account],
  ProblemDetails(ref)[Account],
  AccountVO(ref)[Account],
  HttpValidationProblemDetails(ref)[Account],
  ProblemDetails(ref)[Account],
  ProblemDetails(ref)[Account],
  StartGetAccountProjectInfoJobResponse(string)[Account],
  HttpValidationProblemDetails(ref)[Account],
  ProblemDetails(ref)[Account],
  ProblemDetails(ref)[Account],
  GetAccountProjectInfoJobResponseResponse(array)[Account],
    AccountProjectInfo(ref)[Account],
  HttpValidationProblemDetails(ref)[Account],
  ProblemDetails(ref)[Account],
  ProblemDetails(ref)[Account],
  GetAccountForCurrentUserResponse(class)[Account],
  HttpValidationProblemDetails(ref)[Account],
  ProblemDetails(ref)[Account],
  ProblemDetails(ref)[Account],
  AccountWithLogs(ref)[Account],
  HttpValidationProblemDetails(ref)[Account],
  ProblemDetails(ref)[Account],
  ProblemDetails(ref)[Account],
  StartExportAccountChargesJobResponse(string)[Account],
  HttpValidationProblemDetails(ref)[Account],
  ProblemDetails(ref)[Account],
  ProblemDetails(ref)[Account],
  StartExportAccountPaymentsJobResponse(string)[Account],
  HttpValidationProblemDetails(ref)[Account],
  ProblemDetails(ref)[Account],
  ProblemDetails(ref)[Account],
  GrantAdminResponse(bool)[Account],
  HttpValidationProblemDetails(ref)[Account],
  ProblemDetails(ref)[Account],
  ProblemDetails(ref)[Account],
  RevokeAdminResponse(bool)[Account],
  HttpValidationProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  SetUserPasswordAsAdminResponse(class)[Admin],
  HttpValidationProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  GetActiveUserInfosAsAdminResponse(class)[Admin],
  HttpValidationProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  UpdateUserInfoAsAdminResponse(class)[Admin],
  HttpValidationProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  GetSignupSegmentsAsAdminResponse(class)[Admin],
  HttpValidationProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  GetRevenueSegmentsAsAdminResponse(class)[Admin],
  HttpValidationProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  GetFilteredProjectsAndUsersAsAdminResponse(class)[Admin],
  HttpValidationProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  GetFilteredUsersAsAdminResponse(class)[Admin],
  HttpValidationProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  GetFilteredProjectsAsAdminResponse(class)[Admin],
  HttpValidationProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  GetUserFullDetailsByUserAsAdminResponse(class)[Admin],
  HttpValidationProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  CreateAccountAsAdminResponse(class)[Admin],
  HttpValidationProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  MergeProjectsAsAdminResponse(class)[Admin],
  HttpValidationProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  GetMergeStatusAsAdminResponse(class)[Admin],
  HttpValidationProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  ProcessPaymentAsAdminResponse(class)[Admin],
  HttpValidationProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  GetProjectSecurityInfoAsAdminResponse(class)[Admin],
  HttpValidationProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  AddGroupToProjectAsAdminResponse(class)[Admin],
  HttpValidationProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  UpdateUserGroupAsAdminResponse(class)[Admin],
  HttpValidationProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  AddUserToGroupAsAdminResponse(class)[Admin],
  HttpValidationProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  UnlinkUserFromProjectAsAdminResponse(class)[Admin],
  HttpValidationProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  SubmitPaymentAsAdminResponse(class)[Admin],
  HttpValidationProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  AddUserToAccountAsAdminResponse(class)[Admin],
  HttpValidationProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  AddCreditsToAccountAsAdminResponse(class)[Admin],
  HttpValidationProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  SetAccountUserAdminStatusAsAdminResponse(class)[Admin],
  HttpValidationProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  AddNewUserToAccountAsAdminResponse(class)[Admin],
  HttpValidationProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  GetAccountTransactionsAsAdminResponse(class)[Admin],
  HttpValidationProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  StartExportUsersJobAsAdminResponse(class)[Admin],
  HttpValidationProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  StartExportAccountsJobAsAdminResponse(class)[Admin],
  HttpValidationProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  SendAllClientsMessageAsAdminResponse(class)[Admin],
  HttpValidationProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  GetActivityMetricsAsAdminResponse(class)[Admin],
  HttpValidationProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  SetAccountStudentDiscountAsAdminResponse(class)[Admin],
  HttpValidationProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  SetAccountGroupDiscountAsAdminResponse(class)[Admin],
  HttpValidationProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  MigrateUserToAccountAsAdminResponse(class)[Admin],
  HttpValidationProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  StartAddDemoProjectAsAdminResponse(class)[Admin],
  HttpValidationProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  SetAccountCPUPMOverrideAsAdminResponse(class)[Admin],
  HttpValidationProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  UpdateProjectAsAdminResponse(class)[Admin],
  HttpValidationProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  ProblemDetails(ref)[Admin],
  OverrideVerifyAsAdminResponse(class)[Admin],
  HttpValidationProblemDetails(ref)[Chat],
  ProblemDetails(ref)[Chat],
  ProblemDetails(ref)[Chat],
  GetProjectChatUsersResponse(array)[Chat],
    ActiveUser(ref)[Chat],
  HttpValidationProblemDetails(ref)[Chat],
  ProblemDetails(ref)[Chat],
  ProblemDetails(ref)[Chat],
  GetChatMessagesResponse(array)[Chat],
    ChatMessageVO(ref)[Chat],
  HttpValidationProblemDetails(ref)[Chat],
  ProblemDetails(ref)[Chat],
  ProblemDetails(ref)[Chat],
  ChatMessageVO(ref)[Chat],
  HttpValidationProblemDetails(ref)[DataSet],
  ProblemDetails(ref)[DataSet],
  ProblemDetails(ref)[DataSet],
  GetDataSetsByProjectResponse(array)[DataSet],
    DataSetVO(ref)[DataSet],
  HttpValidationProblemDetails(ref)[DataSet],
  ProblemDetails(ref)[DataSet],
  ProblemDetails(ref)[DataSet],
  DataSetVO(ref)[DataSet],
  HttpValidationProblemDetails(ref)[DataSet],
  ProblemDetails(ref)[DataSet],
  ProblemDetails(ref)[DataSet],
  DataSetVO(ref)[DataSet],
  HttpValidationProblemDetails(ref)[DataSet],
  ProblemDetails(ref)[DataSet],
  ProblemDetails(ref)[DataSet],
  DataSetVO(ref)[DataSet],
  HttpValidationProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  ProjectDescriptorProps(ref)[Descriptor],
  HttpValidationProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  DescriptorSet(ref)[Descriptor],
  HttpValidationProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  DescriptorSet(ref)[Descriptor],
  HttpValidationProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  DeleteDescriptorsResponse(class)[Descriptor],
  HttpValidationProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  ForceDeleteDescriptorSetPolledResponse(string)[Descriptor],
  HttpValidationProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  IsForceDeleteDescriptorSetPolledCompleteResponse(bool)[Descriptor],
  HttpValidationProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  DescriptorFieldWithOptions(ref)[Descriptor],
  HttpValidationProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  DescriptorFieldWithOptions(ref)[Descriptor],
  HttpValidationProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  DescriptorField(ref)[Descriptor],
  HttpValidationProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  GetProjectDescriptorsPagedResponse(array)[Descriptor],
    Descriptor(ref)[Descriptor],
  HttpValidationProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  GetProjectDescriptorFieldValuesResponse(array)[Descriptor],
    DescriptorValueDTO(ref)[Descriptor],
  HttpValidationProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  DescriptorWithValues(ref)[Descriptor],
  HttpValidationProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  UpdateValuesResponse(class)[Descriptor],
  HttpValidationProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  Descriptor(ref)[Descriptor],
  HttpValidationProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  GetProjectDescriptorLinksResponse(array)[Descriptor],
    DescriptorLink(ref)[Descriptor],
  HttpValidationProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  AddDescriptorLinkResponse(class)[Descriptor],
  HttpValidationProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  DeleteLinkResponse(class)[Descriptor],
  HttpValidationProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  GetDesFieldImportDataFromFileResponse(class)[Descriptor],
  HttpValidationProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  ImportFieldsResponse(class)[Descriptor],
  HttpValidationProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  StartGetDesDataFromFileJobResponse(class)[Descriptor],
  HttpValidationProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  GetDesDataFromFileJobResultResponse(class)[Descriptor],
  HttpValidationProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  StartImportDescriptorsJobResponse(class)[Descriptor],
  HttpValidationProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  StartExportDescriptorsJobResponse(string)[Descriptor],
  HttpValidationProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  AddDynamicValueResponse(class)[Descriptor],
  HttpValidationProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  AddOrUpdateDynamicValuesResponse(class)[Descriptor],
  HttpValidationProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  GetDynamicValuesByProjectIdResponse(class)[Descriptor],
  HttpValidationProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  GetResourceLinksResponse(class)[Descriptor],
  HttpValidationProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  UpdateFieldOrdersResponse(class)[Descriptor],
  HttpValidationProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  StartExportFieldsJobResponse(class)[Descriptor],
  HttpValidationProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  AddLinksResponse(class)[Descriptor],
  HttpValidationProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  StartConvertFieldTypeJobResponse(class)[Descriptor],
  HttpValidationProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  ProblemDetails(ref)[Descriptor],
  GetConvertFieldTypeJobResponseResponse(class)[Descriptor],
  HttpValidationProblemDetails(ref)[Error],
  ProblemDetails(ref)[Error],
  ProblemDetails(ref)[Error],
  ProcessUIErrorResponse(class)[Error],
  HttpValidationProblemDetails(ref)[Excerpt],
  ProblemDetails(ref)[Excerpt],
  ProblemDetails(ref)[Excerpt],
  GetExcerptsByProjectIdResponse(array)[Excerpt],
    Excerpt(ref)[Excerpt],
  HttpValidationProblemDetails(ref)[Excerpt],
  ProblemDetails(ref)[Excerpt],
  ProblemDetails(ref)[Excerpt],
  ExcerptWithTagApps(ref)[Excerpt],
  HttpValidationProblemDetails(ref)[Excerpt],
  ProblemDetails(ref)[Excerpt],
  ProblemDetails(ref)[Excerpt],
  ExcerptWithTagApps(ref)[Excerpt],
  HttpValidationProblemDetails(ref)[Excerpt],
  ProblemDetails(ref)[Excerpt],
  ProblemDetails(ref)[Excerpt],
  ExcerptWithTagApps(ref)[Excerpt],
  HttpValidationProblemDetails(ref)[Excerpt],
  ProblemDetails(ref)[Excerpt],
  ProblemDetails(ref)[Excerpt],
  ExcerptWithTagApps(ref)[Excerpt],
  HttpValidationProblemDetails(ref)[Excerpt],
  ProblemDetails(ref)[Excerpt],
  ProblemDetails(ref)[Excerpt],
  ExcerptWithTagApps(ref)[Excerpt],
  HttpValidationProblemDetails(ref)[Excerpt],
  ProblemDetails(ref)[Excerpt],
  ProblemDetails(ref)[Excerpt],
  ExcerptWithTagApps(ref)[Excerpt],
  HttpValidationProblemDetails(ref)[Excerpt],
  ProblemDetails(ref)[Excerpt],
  ProblemDetails(ref)[Excerpt],
  Excerpt(ref)[Excerpt],
  HttpValidationProblemDetails(ref)[Excerpt],
  ProblemDetails(ref)[Excerpt],
  ProblemDetails(ref)[Excerpt],
  Excerpt(ref)[Excerpt],
  HttpValidationProblemDetails(ref)[Excerpt],
  ProblemDetails(ref)[Excerpt],
  ProblemDetails(ref)[Excerpt],
  Excerpt(ref)[Excerpt],
  HttpValidationProblemDetails(ref)[Excerpt],
  ProblemDetails(ref)[Excerpt],
  ProblemDetails(ref)[Excerpt],
  StartDeleteExcerptsJobResponse(string)[Excerpt],
  HttpValidationProblemDetails(ref)[Excerpt],
  ProblemDetails(ref)[Excerpt],
  ProblemDetails(ref)[Excerpt],
  IsDeleteExcerptsJobCompleteResponse(bool)[Excerpt],
  HttpValidationProblemDetails(ref)[Excerpt],
  ProblemDetails(ref)[Excerpt],
  ProblemDetails(ref)[Excerpt],
  StartSearchExcerptsJobResponse(string)[Excerpt],
  HttpValidationProblemDetails(ref)[Excerpt],
  ProblemDetails(ref)[Excerpt],
  ProblemDetails(ref)[Excerpt],
  GetSearchExcerptsJobResultsResponse(array)[Excerpt],
    Excerpt(ref)[Excerpt],
  HttpValidationProblemDetails(ref)[Excerpt],
  ProblemDetails(ref)[Excerpt],
  ProblemDetails(ref)[Excerpt],
  Excerpt(ref)[Excerpt],
  HttpValidationProblemDetails(ref)[Excerpt],
  ProblemDetails(ref)[Excerpt],
  ProblemDetails(ref)[Excerpt],
  Excerpt(ref)[Excerpt],
  HttpValidationProblemDetails(ref)[Export],
  ProblemDetails(ref)[Export],
  ProblemDetails(ref)[Export],
  StartExportSingleSeriesChartJobResponse(class)[Export],
  HttpValidationProblemDetails(ref)[Export],
  ProblemDetails(ref)[Export],
  ProblemDetails(ref)[Export],
  StartExportHierarchicalChartJobResponse(class)[Export],
  HttpValidationProblemDetails(ref)[Export],
  ProblemDetails(ref)[Export],
  ProblemDetails(ref)[Export],
  StartExcerptsExportResponse(string)[Export],
  HttpValidationProblemDetails(ref)[Export],
  ProblemDetails(ref)[Export],
  ProblemDetails(ref)[Export],
  GetExcerptsExportStatusResponse(bool)[Export],
  HttpValidationProblemDetails(ref)[Export],
  ProblemDetails(ref)[Export],
  ProblemDetails(ref)[Export],
  GetExcerptsExportURLResponse(string)[Export],
  HttpValidationProblemDetails(ref)[Export],
  ProblemDetails(ref)[Export],
  ProblemDetails(ref)[Export],
  StartGridChartExportJobResponse(class)[Export],
  HttpValidationProblemDetails(ref)[Export],
  ProblemDetails(ref)[Export],
  ProblemDetails(ref)[Export],
  StartExportBubbleChartJobResponse(class)[Export],
  HttpValidationProblemDetails(ref)[Export],
  ProblemDetails(ref)[Export],
  ProblemDetails(ref)[Export],
  IsExportJobCompleteResponse(bool)[Export],
  HttpValidationProblemDetails(ref)[Export],
  ProblemDetails(ref)[Export],
  ProblemDetails(ref)[Export],
  GetExportJobURIResponse(string)[Export],
  HttpValidationProblemDetails(ref)[File],
  ProblemDetails(ref)[File],
  ProblemDetails(ref)[File],
  RSAWriteKeyInfo(ref)[File],
  HttpValidationProblemDetails(ref)[File],
  ProblemDetails(ref)[File],
  ProblemDetails(ref)[File],
  GetFXMLDocXPolledResponse(class)[File],
  HttpValidationProblemDetails(ref)[File],
  ProblemDetails(ref)[File],
  ProblemDetails(ref)[File],
  IsJobManagerJobCompleteResponse(bool)[File],
  HttpValidationProblemDetails(ref)[File],
  ProblemDetails(ref)[File],
  ProblemDetails(ref)[File],
  GetFXMLDocJobResultResponse(class)[File],
  HttpValidationProblemDetails(ref)[File],
  ProblemDetails(ref)[File],
  ProblemDetails(ref)[File],
  StartConvertPDF2SwfResponse(class)[File],
  HttpValidationProblemDetails(ref)[File],
  ProblemDetails(ref)[File],
  ProblemDetails(ref)[File],
  GetConvertPDF2SwfResultResponse(class)[File],
  HttpValidationProblemDetails(ref)[File],
  ProblemDetails(ref)[File],
  ProblemDetails(ref)[File],
  StoreProjectFileStringResponse(string)[File],
  HttpValidationProblemDetails(ref)[File],
  ProblemDetails(ref)[File],
  ProblemDetails(ref)[File],
  GetMoveFileFromTempToPermJobResultResponse(string)[File],
  HttpValidationProblemDetails(ref)[File],
  ProblemDetails(ref)[File],
  ProblemDetails(ref)[File],
  EmailFileResponse(class)[File],
  HttpValidationProblemDetails(ref)[File],
  ProblemDetails(ref)[File],
  ProblemDetails(ref)[File],
  GetExportJobFileURIResponse(string)[File],
  HttpValidationProblemDetails(ref)[Memo],
  ProblemDetails(ref)[Memo],
  ProblemDetails(ref)[Memo],
  MemosFoldersAndLinks(ref)[Memo],
  HttpValidationProblemDetails(ref)[Memo],
  ProblemDetails(ref)[Memo],
  ProblemDetails(ref)[Memo],
  MemoAndLinks(ref)[Memo],
  HttpValidationProblemDetails(ref)[Memo],
  ProblemDetails(ref)[Memo],
  ProblemDetails(ref)[Memo],
  MemoAndLinks(ref)[Memo],
  HttpValidationProblemDetails(ref)[Memo],
  ProblemDetails(ref)[Memo],
  ProblemDetails(ref)[Memo],
  Memo(ref)[Memo],
  HttpValidationProblemDetails(ref)[Memo],
  ProblemDetails(ref)[Memo],
  ProblemDetails(ref)[Memo],
  MemoFolder(ref)[Memo],
  HttpValidationProblemDetails(ref)[Memo],
  ProblemDetails(ref)[Memo],
  ProblemDetails(ref)[Memo],
  MemoFolder(ref)[Memo],
  HttpValidationProblemDetails(ref)[Memo],
  ProblemDetails(ref)[Memo],
  ProblemDetails(ref)[Memo],
  MemoFolder(ref)[Memo],
  HttpValidationProblemDetails(ref)[Memo],
  ProblemDetails(ref)[Memo],
  ProblemDetails(ref)[Memo],
  AddMemoFolderLinksResponse(class)[Memo],
  HttpValidationProblemDetails(ref)[Memo],
  ProblemDetails(ref)[Memo],
  ProblemDetails(ref)[Memo],
  LinkFoldersToMemosResponse(class)[Memo],
  HttpValidationProblemDetails(ref)[Memo],
  ProblemDetails(ref)[Memo],
  ProblemDetails(ref)[Memo],
  LinkObjectResponse(class)[Memo],
  HttpValidationProblemDetails(ref)[Memo],
  ProblemDetails(ref)[Memo],
  ProblemDetails(ref)[Memo],
  UnlinkObjectResponse(class)[Memo],
  HttpValidationProblemDetails(ref)[Memo],
  ProblemDetails(ref)[Memo],
  ProblemDetails(ref)[Memo],
  StartExportMemosResponse(string)[Memo],
  HttpValidationProblemDetails(ref)[Memo],
  ProblemDetails(ref)[Memo],
  ProblemDetails(ref)[Memo],
  StartExportMemosXMLResponse(string)[Memo],
  HttpValidationProblemDetails(ref)[Memo],
  ProblemDetails(ref)[Memo],
  ProblemDetails(ref)[Memo],
  StartImportMemosXMLResponse(string)[Memo],
  HttpValidationProblemDetails(ref)[Memo],
  ProblemDetails(ref)[Memo],
  ProblemDetails(ref)[Memo],
  StartSearchMemosJobResponse(string)[Memo],
  HttpValidationProblemDetails(ref)[Memo],
  ProblemDetails(ref)[Memo],
  ProblemDetails(ref)[Memo],
  GetSearchMemosJobResultsResponse(class)[Memo],
  HttpValidationProblemDetails(ref)[Memo],
  ProblemDetails(ref)[Memo],
  ProblemDetails(ref)[Memo],
  StartCopyMemosToDocumentsJobResponse(class)[Memo],
  HttpValidationProblemDetails(ref)[Memo],
  ProblemDetails(ref)[Memo],
  ProblemDetails(ref)[Memo],
  IsCopyMemosToDocumentsJobCompleteResponse(bool)[Memo],
  HttpValidationProblemDetails(ref)[Memo],
  ProblemDetails(ref)[Memo],
  ProblemDetails(ref)[Memo],
  GetCopyMemosToDocumentsJobResultResponse(class)[Memo],
  HttpValidationProblemDetails(ref)[Memo],
  ProblemDetails(ref)[Memo],
  ProblemDetails(ref)[Memo],
  GetImportMemosXMLResponseResponse(class)[Memo],
  HttpValidationProblemDetails(ref)[Project],
  ProblemDetails(ref)[Project],
  ProblemDetails(ref)[Project],
  GetAllProjectsForCurrentUserResponse(array)[Project],
    Project(ref)[Project],
  HttpValidationProblemDetails(ref)[Project],
  ProblemDetails(ref)[Project],
  ProblemDetails(ref)[Project],
  GetExportAccountProjectsJobIdResponse(string)[Project],
  HttpValidationProblemDetails(ref)[Project],
  ProblemDetails(ref)[Project],
  ProblemDetails(ref)[Project],
  Project(ref)[Project],
  HttpValidationProblemDetails(ref)[Project],
  ProblemDetails(ref)[Project],
  ProblemDetails(ref)[Project],
  Project(ref)[Project],
  HttpValidationProblemDetails(ref)[Project],
  ProblemDetails(ref)[Project],
  ProblemDetails(ref)[Project],
  StartCopyProjectJobResponse(string)[Project],
  HttpValidationProblemDetails(ref)[Project],
  ProblemDetails(ref)[Project],
  ProblemDetails(ref)[Project],
  GetCopyProjectStatusResponse(bool)[Project],
  HttpValidationProblemDetails(ref)[Project],
  ProblemDetails(ref)[Project],
  ProblemDetails(ref)[Project],
  Project(ref)[Project],
  HttpValidationProblemDetails(ref)[Project],
  ProblemDetails(ref)[Project],
  ProblemDetails(ref)[Project],
  Project(ref)[Project],
  HttpValidationProblemDetails(ref)[Project],
  ProblemDetails(ref)[Project],
  ProblemDetails(ref)[Project],
  StartDeleteProjectResponse(string)[Project],
  HttpValidationProblemDetails(ref)[Project],
  ProblemDetails(ref)[Project],
  ProblemDetails(ref)[Project],
  IsDeletedProjectJobCompleteResponse(bool)[Project],
  HttpValidationProblemDetails(ref)[Project],
  ProblemDetails(ref)[Project],
  ProblemDetails(ref)[Project],
  CheckEncryptedDataResponse(class)[Project],
  HttpValidationProblemDetails(ref)[Project],
  ProblemDetails(ref)[Project],
  ProblemDetails(ref)[Project],
  StartProjectExportJobResponse(string)[Project],
  HttpValidationProblemDetails(ref)[Project],
  ProblemDetails(ref)[Project],
  ProblemDetails(ref)[Project],
  StartProjectImportJobResponse(string)[Project],
  HttpValidationProblemDetails(ref)[Project],
  ProblemDetails(ref)[Project],
  ProblemDetails(ref)[Project],
  GetProjectImportJobExceptionsResponse(class)[Project],
  HttpValidationProblemDetails(ref)[Project],
  ProblemDetails(ref)[Project],
  ProblemDetails(ref)[Project],
  Project(ref)[Project],
  HttpValidationProblemDetails(ref)[Project],
  ProblemDetails(ref)[Project],
  ProblemDetails(ref)[Project],
  ProjectImportStatus(ref)[Project],
  HttpValidationProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  GetResourcesByProjectResponse(array)[Resource],
    Resource(ref)[Resource],
  HttpValidationProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  Resource(ref)[Resource],
  HttpValidationProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  Resource(ref)[Resource],
  HttpValidationProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  StartDeleteResourcesJobResponse(class)[Resource],
  HttpValidationProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  Resource(ref)[Resource],
  HttpValidationProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  StartExportDocumentJobWithRTLResponse(class)[Resource],
  HttpValidationProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  UpdateResourceAndDataResponse(class)[Resource],
  HttpValidationProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  LockResourceResponse(class)[Resource],
  HttpValidationProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  UnlockResourceResponse(class)[Resource],
  HttpValidationProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  AddVideoResourceResponse(string)[Resource],
  HttpValidationProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  IsResourceVideoConversionCompleteResponse(bool)[Resource],
  HttpValidationProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  Resource(ref)[Resource],
  HttpValidationProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  AddAudioResourceResponse(string)[Resource],
  HttpValidationProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  IsResourceAudioConversionCompleteResponse(bool)[Resource],
  HttpValidationProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  Resource(ref)[Resource],
  HttpValidationProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  GetAudioSampleResponse(class)[Resource],
  HttpValidationProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  GetTranscripstsResponse(array)[Resource],
    ResourceTranscript(ref)[Resource],
  HttpValidationProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  AddTranscriptResponse(class)[Resource],
  HttpValidationProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  UpdateTranscriptDataResponse(class)[Resource],
  HttpValidationProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  DeleteTranscriptResponse(class)[Resource],
  HttpValidationProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  GetTranscriptExportJobIdResponse(string)[Resource],
  HttpValidationProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  GetResourceSyncItemsResponse(class)[Resource],
  HttpValidationProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  CloneDocumentResponse(ref)[Resource],
  HttpValidationProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  IsResourceJobCompleteResponse(bool)[Resource],
  HttpValidationProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  GetExportJobURLResponse(string)[Resource],
  HttpValidationProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  StartExportResourcesJobResponse(string)[Resource],
  HttpValidationProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  StartAddImageResourceResponse(string)[Resource],
  HttpValidationProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  Resource(ref)[Resource],
  HttpValidationProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  StartAddPDFImageResourceJobResponse(string)[Resource],
  HttpValidationProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  GetAddPDFImageResourceJobResponseResponse(class)[Resource],
  HttpValidationProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  StartDocumentSearchJobResponse(string)[Resource],
  HttpValidationProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  GetDocumentSearchJobResultResponse(class)[Resource],
  HttpValidationProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  UpdateDocumentDataAndExcerptsResponse(class)[Resource],
  HttpValidationProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  StartAddPDFSwfResourceJobResponse(string)[Resource],
  HttpValidationProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  Resource(ref)[Resource],
  HttpValidationProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  StartExportPDFSwfJobResponse(string)[Resource],
  HttpValidationProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  ProblemDetails(ref)[Resource],
  GetExportPDFSwfJobResultResponse(class)[Resource],
  HttpValidationProblemDetails(ref)[Security],
  ProblemDetails(ref)[Security],
  ProblemDetails(ref)[Security],
  GetProjectGroupLinksResponse(array)[Security],
    UserGroupLink(ref)[Security],
  HttpValidationProblemDetails(ref)[Security],
  ProblemDetails(ref)[Security],
  ProblemDetails(ref)[Security],
  GetAllAccessListsResponse(array)[Security],
    AccessList(ref)[Security],
  HttpValidationProblemDetails(ref)[Security],
  ProblemDetails(ref)[Security],
  ProblemDetails(ref)[Security],
  UserGroup(ref)[Security],
  HttpValidationProblemDetails(ref)[Security],
  ProblemDetails(ref)[Security],
  ProblemDetails(ref)[Security],
  LinkUserResponse(class)[Security],
  HttpValidationProblemDetails(ref)[Security],
  ProblemDetails(ref)[Security],
  ProblemDetails(ref)[Security],
  LinkUserWithInvitationResponse(class)[Security],
  HttpValidationProblemDetails(ref)[Security],
  ProblemDetails(ref)[Security],
  ProblemDetails(ref)[Security],
  GetProjectGroupsResponse(array)[Security],
    UserGroup(ref)[Security],
  HttpValidationProblemDetails(ref)[Security],
  ProblemDetails(ref)[Security],
  ProblemDetails(ref)[Security],
  UserGroup(ref)[Security],
  HttpValidationProblemDetails(ref)[Security],
  ProblemDetails(ref)[Security],
  ProblemDetails(ref)[Security],
  UserGroup(ref)[Security],
  HttpValidationProblemDetails(ref)[Security],
  ProblemDetails(ref)[Security],
  ProblemDetails(ref)[Security],
  GetSuperUserIdsResponse(array)[Security],
    GetSuperUserIdsResponseItem(string)[Security],
  HttpValidationProblemDetails(ref)[Security],
  ProblemDetails(ref)[Security],
  ProblemDetails(ref)[Security],
  UnlinkUserFromProjectResponse(class)[Security],
  HttpValidationProblemDetails(ref)[Security],
  ProblemDetails(ref)[Security],
  ProblemDetails(ref)[Security],
  ResetUserPasswordByEmailResponse(bool)[Security],
  HttpValidationProblemDetails(ref)[Security],
  ProblemDetails(ref)[Security],
  ProblemDetails(ref)[Security],
  ResetUserPasswordByUsernameResponse(bool)[Security],
  HttpValidationProblemDetails(ref)[Security],
  ProblemDetails(ref)[Security],
  ProblemDetails(ref)[Security],
  ImpersonateUserResponse(class)[Security],
  HttpValidationProblemDetails(ref)[Security],
  ProblemDetails(ref)[Security],
  ProblemDetails(ref)[Security],
  StopImpersonationResponse(class)[Security],
  HttpValidationProblemDetails(ref)[Security],
  ProblemDetails(ref)[Security],
  ProblemDetails(ref)[Security],
  GetVersionResponse(class)[Security],
  HttpValidationProblemDetails(ref)[SurveyImport],
  ProblemDetails(ref)[SurveyImport],
  ProblemDetails(ref)[SurveyImport],
  StartSurveyImportJobResponse(string)[SurveyImport],
  HttpValidationProblemDetails(ref)[SurveyImport],
  ProblemDetails(ref)[SurveyImport],
  ProblemDetails(ref)[SurveyImport],
  SurveyImportStatusVO(ref)[SurveyImport],
  HttpValidationProblemDetails(ref)[Tag],
  ProblemDetails(ref)[Tag],
  ProblemDetails(ref)[Tag],
  GetTagsByProjectResponse(array)[Tag],
    Tag(ref)[Tag],
  HttpValidationProblemDetails(ref)[Tag],
  ProblemDetails(ref)[Tag],
  ProblemDetails(ref)[Tag],
  Tag(ref)[Tag],
  HttpValidationProblemDetails(ref)[Tag],
  ProblemDetails(ref)[Tag],
  ProblemDetails(ref)[Tag],
  Tag(ref)[Tag],
  HttpValidationProblemDetails(ref)[Tag],
  ProblemDetails(ref)[Tag],
  ProblemDetails(ref)[Tag],
  Tag(ref)[Tag],
  HttpValidationProblemDetails(ref)[Tag],
  ProblemDetails(ref)[Tag],
  ProblemDetails(ref)[Tag],
  DeleteTagByJobResponse(string)[Tag],
  HttpValidationProblemDetails(ref)[Tag],
  ProblemDetails(ref)[Tag],
  ProblemDetails(ref)[Tag],
  Tag(ref)[Tag],
  HttpValidationProblemDetails(ref)[Tag],
  ProblemDetails(ref)[Tag],
  ProblemDetails(ref)[Tag],
  GetTagLinksByProjectResponse(array)[Tag],
    TagLink(ref)[Tag],
  HttpValidationProblemDetails(ref)[Tag],
  ProblemDetails(ref)[Tag],
  ProblemDetails(ref)[Tag],
  TagLink(ref)[Tag],
  HttpValidationProblemDetails(ref)[Tag],
  ProblemDetails(ref)[Tag],
  ProblemDetails(ref)[Tag],
  TagLink(ref)[Tag],
  HttpValidationProblemDetails(ref)[Tag],
  ProblemDetails(ref)[Tag],
  ProblemDetails(ref)[Tag],
  TagLink(ref)[Tag],
  HttpValidationProblemDetails(ref)[Tag],
  ProblemDetails(ref)[Tag],
  ProblemDetails(ref)[Tag],
  GetTagApplicationsByProjectResponse(array)[Tag],
    TagAppDTO(ref)[Tag],
  HttpValidationProblemDetails(ref)[Tag],
  ProblemDetails(ref)[Tag],
  ProblemDetails(ref)[Tag],
  TagAppDTO(ref)[Tag],
  HttpValidationProblemDetails(ref)[Tag],
  ProblemDetails(ref)[Tag],
  ProblemDetails(ref)[Tag],
  AddExcerptTagApplicationsResponse(class)[Tag],
  HttpValidationProblemDetails(ref)[Tag],
  ProblemDetails(ref)[Tag],
  ProblemDetails(ref)[Tag],
  UpdateTagAppWeightResponse(class)[Tag],
  HttpValidationProblemDetails(ref)[Tag],
  ProblemDetails(ref)[Tag],
  ProblemDetails(ref)[Tag],
  TagAppDTO(ref)[Tag],
  HttpValidationProblemDetails(ref)[Tag],
  ProblemDetails(ref)[Tag],
  ProblemDetails(ref)[Tag],
  GetProjectTagsExportFileURLJobIdResponse(string)[Tag],
  HttpValidationProblemDetails(ref)[Tag],
  ProblemDetails(ref)[Tag],
  ProblemDetails(ref)[Tag],
  IsTagJobCompleteResponse(bool)[Tag],
  HttpValidationProblemDetails(ref)[Tag],
  ProblemDetails(ref)[Tag],
  ProblemDetails(ref)[Tag],
  GetProjectTagsExportJobFileURLResponse(string)[Tag],
  HttpValidationProblemDetails(ref)[Tag],
  ProblemDetails(ref)[Tag],
  ProblemDetails(ref)[Tag],
  StartGetTagsFromImportJobResponse(string)[Tag],
  HttpValidationProblemDetails(ref)[Tag],
  ProblemDetails(ref)[Tag],
  ProblemDetails(ref)[Tag],
  GetTagsFromSpreadsheetJobResultResponse(class)[Tag],
  HttpValidationProblemDetails(ref)[Tag],
  ProblemDetails(ref)[Tag],
  ProblemDetails(ref)[Tag],
  StartImportTagsJobResponse(class)[Tag],
  HttpValidationProblemDetails(ref)[Tag],
  ProblemDetails(ref)[Tag],
  ProblemDetails(ref)[Tag],
  MergeTagsResponse(class)[Tag],
  HttpValidationProblemDetails(ref)[Tag],
  ProblemDetails(ref)[Tag],
  ProblemDetails(ref)[Tag],
  UpdateTagOrdersResponse(class)[Tag],
  HttpValidationProblemDetails(ref)[Tag],
  ProblemDetails(ref)[Tag],
  ProblemDetails(ref)[Tag],
  StartRetroUpcodeJobResponse(class)[Tag],
  HttpValidationProblemDetails(ref)[Tag],
  ProblemDetails(ref)[Tag],
  ProblemDetails(ref)[Tag],
  IsRetroUpcodeJobCompleteResponse(bool)[Tag],
  HttpValidationProblemDetails(ref)[Tag],
  ProblemDetails(ref)[Tag],
  ProblemDetails(ref)[Tag],
  GetRetroUpcodeJobTagApplicationsResponse(class)[Tag],
  HttpValidationProblemDetails(ref)[Training],
  ProblemDetails(ref)[Training],
  ProblemDetails(ref)[Training],
  GetTestsByProjectResponse(array)[Training],
    TrainingTest(ref)[Training],
  HttpValidationProblemDetails(ref)[Training],
  ProblemDetails(ref)[Training],
  ProblemDetails(ref)[Training],
  GetTestResultsByProjectResponse(array)[Training],
    TrainingTestResult(ref)[Training],
  HttpValidationProblemDetails(ref)[Training],
  ProblemDetails(ref)[Training],
  ProblemDetails(ref)[Training],
  AddTestResponse(string)[Training],
  HttpValidationProblemDetails(ref)[Training],
  ProblemDetails(ref)[Training],
  ProblemDetails(ref)[Training],
  IsTestAddCompleteResponse(bool)[Training],
  HttpValidationProblemDetails(ref)[Training],
  ProblemDetails(ref)[Training],
  ProblemDetails(ref)[Training],
  TrainingTest(ref)[Training],
  HttpValidationProblemDetails(ref)[Training],
  ProblemDetails(ref)[Training],
  ProblemDetails(ref)[Training],
  GetTestTagsResponse(array)[Training],
    TrainingTestTag(ref)[Training],
  HttpValidationProblemDetails(ref)[Training],
  ProblemDetails(ref)[Training],
  ProblemDetails(ref)[Training],
  GetTestExcerptsResponse(array)[Training],
    TrainingTestExcerpt(ref)[Training],
  HttpValidationProblemDetails(ref)[Training],
  ProblemDetails(ref)[Training],
  ProblemDetails(ref)[Training],
  GetTestMasterTagApplicationsResponse(array)[Training],
    TrainingTestMasterTagApp(ref)[Training],
  HttpValidationProblemDetails(ref)[Training],
  ProblemDetails(ref)[Training],
  ProblemDetails(ref)[Training],
  TrainingTest(ref)[Training],
  HttpValidationProblemDetails(ref)[Training],
  ProblemDetails(ref)[Training],
  ProblemDetails(ref)[Training],
  GetTestResultTagAppsResponse(array)[Training],
    TrainingTestTagApp(ref)[Training],
  HttpValidationProblemDetails(ref)[Training],
  ProblemDetails(ref)[Training],
  ProblemDetails(ref)[Training],
  TrainingTestResult(ref)[Training],
  HttpValidationProblemDetails(ref)[Training],
  ProblemDetails(ref)[Training],
  ProblemDetails(ref)[Training],
  TrainingTestResult(ref)[Training],
  HttpValidationProblemDetails(ref)[Training],
  ProblemDetails(ref)[Training],
  ProblemDetails(ref)[Training],
  StartExportTestResultJobResponse(string)[Training],
  HttpValidationProblemDetails(ref)[User],
  ProblemDetails(ref)[User],
  ProblemDetails(ref)[User],
  ValidateUserResponse(class)[User],
  HttpValidationProblemDetails(ref)[User],
  ProblemDetails(ref)[User],
  ProblemDetails(ref)[User],
  ValidateUserResult(ref)[User],
  HttpValidationProblemDetails(ref)[User],
  ProblemDetails(ref)[User],
  ProblemDetails(ref)[User],
  SubmitEulaResponse(class)[User],
  HttpValidationProblemDetails(ref)[User],
  ProblemDetails(ref)[User],
  ProblemDetails(ref)[User],
  GetProjectUsersResponse(array)[User],
    User(ref)[User],
  HttpValidationProblemDetails(ref)[User],
  ProblemDetails(ref)[User],
  ProblemDetails(ref)[User],
  DoesUserEmailExistResponse(bool)[User],
  HttpValidationProblemDetails(ref)[User],
  ProblemDetails(ref)[User],
  ProblemDetails(ref)[User],
  DoesUserExistResponse(bool)[User],
  HttpValidationProblemDetails(ref)[User],
  ProblemDetails(ref)[User],
  ProblemDetails(ref)[User],
  GetCurrentUserPendingInvitationsResponse(array)[User],
    UserInvitation(ref)[User],
  HttpValidationProblemDetails(ref)[User],
  ProblemDetails(ref)[User],
  ProblemDetails(ref)[User],
  InviteUserToProjectResponse(class)[User],
  HttpValidationProblemDetails(ref)[User],
  ProblemDetails(ref)[User],
  ProblemDetails(ref)[User],
  UpdateUserResponse(class)[User],
  HttpValidationProblemDetails(ref)[User],
  ProblemDetails(ref)[User],
  ProblemDetails(ref)[User],
  AddNewUserToAccountResponse(ref)[User],
  HttpValidationProblemDetails(ref)[User],
  ProblemDetails(ref)[User],
  ProblemDetails(ref)[User],
  LinkUsertoAccountResponse(class)[User],
  HttpValidationProblemDetails(ref)[User],
  ProblemDetails(ref)[User],
  ProblemDetails(ref)[User],
  UserAccountVO(ref)[User],
  HttpValidationProblemDetails(ref)[User],
  ProblemDetails(ref)[User],
  ProblemDetails(ref)[User],
  PaymentResponse(ref)[User],
  HttpValidationProblemDetails(ref)[User],
  ProblemDetails(ref)[User],
  ProblemDetails(ref)[User],
  SendContactRequestEmailResponse(class)[User],
  HttpValidationProblemDetails(ref)[User],
  ProblemDetails(ref)[User],
  ProblemDetails(ref)[User],
  UpdateUserInfoResponse(class)[User],
  HttpValidationProblemDetails(ref)[User],
  ProblemDetails(ref)[User],
  ProblemDetails(ref)[User],
  UpdateCurrentUserPasswordResponse(class)[User],
  HttpValidationProblemDetails(ref)[User],
  ProblemDetails(ref)[User],
  ProblemDetails(ref)[User],
  AcceptInvitationByCurrentUserResponse(class)[User],
  HttpValidationProblemDetails(ref)[User],
  ProblemDetails(ref)[User],
  ProblemDetails(ref)[User],
  RejectInvitationByCurrentUserResponse(class)[User],
  HttpValidationProblemDetails(ref)[User],
  ProblemDetails(ref)[User],
  ProblemDetails(ref)[User],
  GetFilteredUsersResponse(class)[User],
  HttpValidationProblemDetails(ref)[User],
  ProblemDetails(ref)[User],
  ProblemDetails(ref)[User],
  GetFederationResponseForConnectionResponse(class)[User],
  HttpValidationProblemDetails(ref)[User],
  ProblemDetails(ref)[User],
  ProblemDetails(ref)[User],
  RegisterConnectionResponse(bool)[User],
  HttpValidationProblemDetails(ref)[User],
  ProblemDetails(ref)[User],
  ProblemDetails(ref)[User],
  UpdateConnectionResponse(bool)[User],
  HttpValidationProblemDetails(ref)[User],
  ProblemDetails(ref)[User],
  ProblemDetails(ref)[User],
  User(ref)[User],
  HttpValidationProblemDetails(ref)[Users],
  ProblemDetails(ref)[Users],
  ProblemDetails(ref)[Users],
  ValidateUserResult(ref)[Users],
  HttpValidationProblemDetails(ref)[Users],
  ProblemDetails(ref)[Users],
  ProblemDetails(ref)[Users],
  GetConnectionKeyResponse(string)[Users],
  HttpValidationProblemDetails(ref)[FileStorage],
  ProblemDetails(ref)[FileStorage],
  ProblemDetails(ref)[FileStorage],
  GetBytesFromFileStorageResponse(byte)[FileStorage],
  HttpValidationProblemDetails(ref)[FileStorage],
  ProblemDetails(ref)[FileStorage],
  ProblemDetails(ref)[FileStorage],
  GetStringFromFileStorageResponse(string)[FileStorage],
  HttpValidationProblemDetails(ref)[FileStorage],
  ProblemDetails(ref)[FileStorage],
  ProblemDetails(ref)[FileStorage],
  UploadToFileStorageResponse(string)[FileStorage],
  HttpValidationProblemDetails(ref)[Login],
  ProblemDetails(ref)[Login],
  LoginResponse(string)[Login],
  HttpValidationProblemDetails(ref)[Login],
  ProblemDetails(ref)[Login],
  UnsafeLoginResponse(string)[Login],
  HttpValidationProblemDetails(ref)[Login],
  ProblemDetails(ref)[Login],
  RSAWriteKeyInfo(ref)[Login],
  HttpValidationProblemDetails(ref)[Login],
  ProblemDetails(ref)[Login],
  User(ref)[Login],
  ProblemDetails(ref)[Login],
  ProblemDetails(ref)[Information],
  GetTopBlogPostsResponse(array)[Information],
    BlogPost(ref)[Information],
  ProblemDetails(ref)[Information],
  GetServiceMessagesResponse(array)[Information],
    ServiceMessage(ref)[Information],
  ProblemDetails(ref)[Information],
  GetClientVersionsResponse(class)[Information],
    GetClientVersionsResponse(string)[Information]
]