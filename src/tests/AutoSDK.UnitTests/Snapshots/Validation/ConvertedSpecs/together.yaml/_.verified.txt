components:
  schemas:
    ChatCompletionAssistantMessageParam:
      properties:
        content:
          nullable: true
          type: string
        function_call:
          deprecated: true
          properties:
            arguments:
              type: string
            name:
              type: string
          required:
            - arguments
            - name
          type: object
        name:
          type: string
        role:
          enum:
            - assistant
          type: string
        tool_calls:
          items:
            $ref: '#/components/schemas/ToolChoice'
          type: array
      required:
        - role
      type: object
    ChatCompletionChoice:
      properties:
        delta:
          properties:
            content:
              nullable: true
              type: string
            function_call:
              deprecated: true
              nullable: true
              properties:
                arguments:
                  type: string
                name:
                  type: string
              required:
                - arguments
                - name
              type: object
            role:
              enum:
                - system
                - user
                - assistant
                - function
                - tool
              type: string
            token_id:
              type: integer
            tool_calls:
              items:
                $ref: '#/components/schemas/ToolChoice'
              type: array
          required:
            - role
          title: ChatCompletionChoiceDelta
          type: object
        finish_reason:
          $ref: '#/components/schemas/FinishReason'
        index:
          type: integer
        logprobs:
          $ref: '#/components/schemas/LogprobsPart'
      required:
        - index
        - delta
        - finish_reason
      type: object
    ChatCompletionChoicesData:
      items:
        properties:
          finish_reason:
            $ref: '#/components/schemas/FinishReason'
          index:
            type: integer
          logprobs:
            allOf:
              - nullable: true
              - $ref: '#/components/schemas/LogprobsPart'
          message:
            $ref: '#/components/schemas/ChatCompletionMessage'
          seed:
            type: integer
          text:
            type: string
        type: object
      type: array
    ChatCompletionChunk:
      properties:
        choices:
          items:
            properties:
              delta:
                properties:
                  content:
                    nullable: true
                    type: string
                  function_call:
                    deprecated: true
                    nullable: true
                    properties:
                      arguments:
                        type: string
                      name:
                        type: string
                    required:
                      - arguments
                      - name
                    type: object
                  role:
                    enum:
                      - system
                      - user
                      - assistant
                      - function
                      - tool
                    type: string
                  token_id:
                    type: integer
                  tool_calls:
                    items:
                      $ref: '#/components/schemas/ToolChoice'
                    type: array
                required:
                  - role
                title: ChatCompletionChoiceDelta
                type: object
              finish_reason:
                $ref: '#/components/schemas/FinishReason'
                nullable: true
              index:
                type: integer
              logprobs:
                nullable: true
                type: number
              seed:
                nullable: true
                type: integer
            required:
              - index
              - delta
              - finish_reason
            type: object
          title: ChatCompletionChoices
          type: array
        created:
          type: integer
        id:
          type: string
        model:
          example: mistralai/Mixtral-8x7B-Instruct-v0.1
          type: string
        object:
          enum:
            - chat.completion.chunk
          type: string
        system_fingerprint:
          type: string
        usage:
          allOf:
            - $ref: '#/components/schemas/UsageData'
            - nullable: true
      required:
        - id
        - object
        - created
        - choices
        - model
      type: object
    ChatCompletionEvent:
      properties:
        data:
          $ref: '#/components/schemas/ChatCompletionChunk'
      required:
        - data
      type: object
    ChatCompletionFunctionMessageParam:
      deprecated: true
      properties:
        content:
          type: string
        name:
          type: string
        role:
          enum:
            - function
          type: string
      required:
        - content
        - role
        - name
      type: object
    ChatCompletionMessage:
      properties:
        content:
          nullable: true
          type: string
        function_call:
          deprecated: true
          properties:
            arguments:
              type: string
            name:
              type: string
          required:
            - arguments
            - name
          type: object
        role:
          enum:
            - assistant
          type: string
        tool_calls:
          items:
            $ref: '#/components/schemas/ToolChoice'
          type: array
      required:
        - role
        - content
      type: object
    ChatCompletionMessageParam:
      oneOf:
        - $ref: '#/components/schemas/ChatCompletionSystemMessageParam'
        - $ref: '#/components/schemas/ChatCompletionUserMessageParam'
        - $ref: '#/components/schemas/ChatCompletionAssistantMessageParam'
        - $ref: '#/components/schemas/ChatCompletionToolMessageParam'
        - $ref: '#/components/schemas/ChatCompletionFunctionMessageParam'
    ChatCompletionRequest:
      properties:
        echo:
          description: If true, the response will contain the prompt. Can be used with `logprobs` to return prompt logprobs.
          type: boolean
        frequency_penalty:
          description: A number between -2.0 and 2.0 where a positive value decreases the likelihood of repeating tokens that have already been mentioned.
          format: float
          type: number
        function_call:
          oneOf:
            - enum:
                - none
                - auto
              type: string
            - properties:
                name:
                  type: string
              required:
                - name
              type: object
        logit_bias:
          additionalProperties:
            format: float
            type: number
          description: Adjusts the likelihood of specific tokens appearing in the generated output.
          example:
            "1024": -10.5
            "105": 21.399999999999999
          type: object
        logprobs:
          description: Determines the number of most likely tokens to return at each token position log probabilities to return.
          maximum: 1
          minimum: 0
          type: integer
        max_tokens:
          description: The maximum number of tokens to generate.
          type: integer
        messages:
          default:
            - content: You are a helpful assistant
              role: system
            - content: What is 1 + 1?
              role: user
          description: A list of messages comprising the conversation so far.
          items:
            properties:
              content:
                description: The contents of the message.
                type: string
              role:
                description: 'The role of the messages author. Choice between: system, user, or assistant.'
                enum:
                  - system
                  - user
                  - assistant
                  - tool
                type: string
            required:
              - role
              - content
            type: object
          type: array
        min_p:
          description: A number between 0 and 1 that can be used as an alternative to top_p and top-k.
          format: float
          type: number
        model:
          default: mistralai/Mixtral-8x7B-Instruct-v0.1
          description: The name of the model to query.
          example: mistralai/Mixtral-8x7B-Instruct-v0.1
          type: string
        n:
          description: The number of completions to generate for each prompt.
          maximum: 128
          minimum: 1
          type: integer
        presence_penalty:
          description: A number between -2.0 and 2.0 where a positive value increases the likelihood of a model talking about new topics.
          format: float
          type: number
        repetition_penalty:
          description: A number that controls the diversity of generated text by reducing the likelihood of repeated sequences. Higher values decrease repetition.
          type: number
        response_format:
          description: An object specifying the format that the model must output.
          properties:
            schema:
              additionalProperties:
                type: string
              description: The schema of the response format.
              type: object
            type:
              description: The type of the response format.
              example: json
              type: string
          type: object
        safety_model:
          description: The name of the moderation model used to validate tokens. Choose from the available moderation models found [here](https://docs.together.ai/docs/inference-models#moderation-models).
          example: safety_model_name
          type: string
        seed:
          description: Seed value for reproducibility.
          example: 42
          type: integer
        stop:
          description: A list of string sequences that will truncate (stop) inference text output. For example, "</s>" will stop generation as soon as the model generates the given token.
          items:
            type: string
          type: array
        stream:
          description: 'If true, stream tokens as Server-Sent Events as the model generates them instead of waiting for the full model response. The stream terminates with `data: [DONE]`. If false, return a single JSON object containing the results.'
          type: boolean
        temperature:
          description: A decimal number from 0-1 that determines the degree of randomness in the response. A temperature less than 1 favors more correctness and is appropriate for question answering or summarization. A value closer to 1 introduces more randomness in the output.
          format: float
          type: number
        tool_choice:
          description: Controls which (if any) function is called by the model. By default uses `auto`, which lets the model pick between generating a message or calling a function.
          oneOf:
            - example: tool_name
              type: string
            - $ref: '#/components/schemas/ToolChoice'
        tools:
          description: A list of tools the model may call. Currently, only functions are supported as a tool. Use this to provide a list of functions the model may generate JSON inputs for.
          items:
            $ref: '#/components/schemas/ToolsPart'
          type: array
        top_k:
          description: An integer that's used to limit the number of choices for the next predicted word or token. It specifies the maximum number of tokens to consider at each step, based on their probability of occurrence. This technique helps to speed up the generation process and can improve the quality of the generated text by focusing on the most likely options.
          format: int32
          type: integer
        top_p:
          description: A percentage (also called the nucleus parameter) that's used to dynamically adjust the number of choices for each predicted token based on the cumulative probabilities. It specifies a probability threshold below which all less likely tokens are filtered out. This technique helps maintain diversity and generate more fluent and natural-sounding text.
          format: float
          type: number
      required:
        - model
        - messages
      type: object
    ChatCompletionResponse:
      properties:
        choices:
          $ref: '#/components/schemas/ChatCompletionChoicesData'
        created:
          type: integer
        id:
          type: string
        model:
          type: string
        object:
          enum:
            - chat.completion
          type: string
        usage:
          $ref: '#/components/schemas/UsageData'
      required:
        - choices
        - id
        - created
        - model
        - object
      type: object
    ChatCompletionStream:
      oneOf:
        - $ref: '#/components/schemas/ChatCompletionEvent'
        - $ref: '#/components/schemas/StreamSentinel'
    ChatCompletionSystemMessageParam:
      properties:
        content:
          type: string
        name:
          type: string
        role:
          enum:
            - system
          type: string
      required:
        - content
        - role
      type: object
    ChatCompletionToken:
      properties:
        id:
          type: integer
        logprob:
          format: float
          type: number
        special:
          type: boolean
        text:
          type: string
      required:
        - id
        - text
        - logprob
        - special
      type: object
    ChatCompletionTool:
      properties:
        function:
          properties:
            description:
              type: string
            name:
              type: string
            parameters:
              additionalProperties: true
              type: object
          required:
            - name
          type: object
        type:
          enum:
            - function
          type: string
      required:
        - type
        - function
      type: object
    ChatCompletionToolMessageParam:
      properties:
        content:
          type: string
        role:
          enum:
            - tool
          type: string
        tool_call_id:
          type: string
      required:
        - role
        - content
        - tool_call_id
      type: object
    ChatCompletionUserMessageParam:
      properties:
        content:
          type: string
        name:
          type: string
        role:
          enum:
            - user
          type: string
      required:
        - content
        - role
      type: object
    CompletionChoice:
      properties:
        text:
          type: string
      required:
        - index
      type: object
    CompletionChoicesData:
      items:
        properties:
          finish_reason:
            $ref: '#/components/schemas/FinishReason'
          logprobs:
            $ref: '#/components/schemas/LogprobsPart'
            type: object
          seed:
            type: integer
          text:
            example: The capital of France is Paris. It's located in the north-central part of the country and is one of the most populous and visited cities in the world, known for its iconic landmarks like the Eiffel Tower, Louvre Museum, Notre-Dame Cathedral, and more. Paris is also the capital of the Île-de-France region and is a major global center for art, fashion, gastronomy, and culture.
            type: string
        type: object
      type: array
    CompletionChunk:
      properties:
        choices:
          items:
            $ref: '#/components/schemas/CompletionChoice'
          title: CompletionChoices
          type: array
        finish_reason:
          allOf:
            - $ref: '#/components/schemas/FinishReason'
            - nullable: true
        id:
          type: string
        seed:
          type: integer
        token:
          $ref: '#/components/schemas/CompletionToken'
        usage:
          allOf:
            - $ref: '#/components/schemas/UsageData'
            - nullable: true
      required:
        - id
        - token
        - choices
        - usage
        - finish_reason
      type: object
    CompletionEvent:
      properties:
        data:
          $ref: '#/components/schemas/CompletionChunk'
      required:
        - data
      type: object
    CompletionRequest:
      properties:
        echo:
          description: If true, the response will contain the prompt. Can be used with `logprobs` to return prompt logprobs.
          type: boolean
        frequency_penalty:
          description: A number between -2.0 and 2.0 where a positive value decreases the likelihood of repeating tokens that have already been mentioned.
          format: float
          type: number
        logit_bias:
          additionalProperties:
            format: float
            type: number
          description: Adjusts the likelihood of specific tokens appearing in the generated output.
          example:
            "1024": -10.5
            "105": 21.399999999999999
          type: object
        logprobs:
          description: Determines the number of most likely tokens to return at each token position log probabilities to return.
          maximum: 1
          minimum: 0
          type: integer
        max_tokens:
          description: The maximum number of tokens to generate.
          type: integer
        min_p:
          description: A number between 0 and 1 that can be used as an alternative to top-p and top-k.
          format: float
          type: number
        model:
          default: mistralai/Mixtral-8x7B-Instruct-v0.1
          description: The name of the model to query.
          example: mistralai/Mixtral-8x7B-Instruct-v0.1
          type: string
        n:
          description: The number of completions to generate for each prompt.
          maximum: 128
          minimum: 1
          type: integer
        presence_penalty:
          description: A number between -2.0 and 2.0 where a positive value increases the likelihood of a model talking about new topics.
          format: float
          type: number
        prompt:
          default: <s>[INST] What is the capital of France? [/INST]
          description: A string providing context for the model to complete.
          example: <s>[INST] What is the capital of France? [/INST]
          type: string
        repetition_penalty:
          description: A number that controls the diversity of generated text by reducing the likelihood of repeated sequences. Higher values decrease repetition.
          format: float
          type: number
        safety_model:
          description: The name of the moderation model used to validate tokens. Choose from the available moderation models found [here](https://docs.together.ai/docs/inference-models#moderation-models).
          example: safety_model_name
          type: string
        seed:
          description: Seed value for reproducibility.
          example: 42
          type: integer
        stop:
          description: A list of string sequences that will truncate (stop) inference text output. For example, "</s>" will stop generation as soon as the model generates the given token.
          items:
            type: string
          type: array
        stream:
          description: 'If true, stream tokens as Server-Sent Events as the model generates them instead of waiting for the full model response. The stream terminates with `data: [DONE]`. If false, return a single JSON object containing the results.'
          type: boolean
        temperature:
          description: A decimal number from 0-1 that determines the degree of randomness in the response. A temperature less than 1 favors more correctness and is appropriate for question answering or summarization. A value closer to 1 introduces more randomness in the output.
          format: float
          type: number
        top_k:
          description: An integer that's used to limit the number of choices for the next predicted word or token. It specifies the maximum number of tokens to consider at each step, based on their probability of occurrence. This technique helps to speed up the generation process and can improve the quality of the generated text by focusing on the most likely options.
          format: int32
          type: integer
        top_p:
          description: A percentage (also called the nucleus parameter) that's used to dynamically adjust the number of choices for each predicted token based on the cumulative probabilities. It specifies a probability threshold below which all less likely tokens are filtered out. This technique helps maintain diversity and generate more fluent and natural-sounding text.
          format: float
          type: number
      required:
        - model
        - prompt
      type: object
    CompletionResponse:
      properties:
        choices:
          $ref: '#/components/schemas/CompletionChoicesData'
        created:
          type: integer
        id:
          type: string
        model:
          type: string
        object:
          enum:
            - text_completion
          type: string
        prompt:
          $ref: '#/components/schemas/PromptPart'
        usage:
          $ref: '#/components/schemas/UsageData'
      required:
        - id
        - choices
        - usage
        - created
        - model
        - object
      type: object
    CompletionStream:
      oneOf:
        - $ref: '#/components/schemas/CompletionEvent'
        - $ref: '#/components/schemas/StreamSentinel'
    CompletionToken:
      properties:
        id:
          type: integer
        logprob:
          type: number
        special:
          type: boolean
        text:
          type: string
      required:
        - id
        - text
        - logprob
        - special
      type: object
    EmbeddingsRequest:
      properties:
        input:
          default: Our solar system orbits the Milky Way galaxy at about 515,000 mph
          oneOf:
            - description: A string providing the text for the model to embed.
              example: Our solar system orbits the Milky Way galaxy at about 515,000 mph
              type: string
            - items:
                description: A string providing the text for the model to embed.
                example: Our solar system orbits the Milky Way galaxy at about 515,000 mph
                type: string
              type: array
        model:
          default: togethercomputer/m2-bert-80M-8k-retrieval
          description: The name of the embedding model to use.
          example: togethercomputer/m2-bert-80M-8k-retrieval
          type: string
      required:
        - model
        - input
      type: object
    EmbeddingsResponse:
      properties:
        data:
          items:
            properties:
              embedding:
                items:
                  type: number
                type: array
              index:
                type: integer
              object:
                enum:
                  - embedding
                type: string
            required:
              - index
              - object
              - embedding
            type: object
          type: array
        model:
          type: string
        object:
          enum:
            - list
          type: string
      required:
        - object
        - model
        - data
      type: object
    ErrorData:
      properties:
        error:
          properties:
            code:
              default: null
              nullable: true
              type: string
            message:
              nullable: false
              type: string
            param:
              default: null
              nullable: true
              type: string
            type:
              nullable: false
              type: string
          required:
            - type
            - message
            - param
            - code
          type: object
      required:
        - error
      type: object
    FileDeleteResponse:
      properties:
        deleted:
          type: boolean
        id:
          type: string
      type: object
    FileList:
      properties:
        data:
          items:
            $ref: '#/components/schemas/FileResponse'
          type: array
      required:
        - data
      type: object
    FileObject:
      properties:
        filename:
          type: string
        id:
          type: string
        object:
          type: string
        size:
          type: integer
      type: object
    FileResponse:
      properties:
        FileType:
          enum:
            - jsonl
            - parquet
          example: jsonl
        LineCount:
          type: integer
        Processed:
          type: boolean
        bytes:
          example: 2664
          type: integer
        created_at:
          example: 1715021438
          type: integer
        filename:
          example: my_file.jsonl
          type: string
        id:
          type: string
        object:
          example: file
          type: string
        purpose:
          enum:
            - fine-tune
          example: fine-tune
      required:
        - id
        - object
        - created_at
        - filename
        - bytes
        - purpose
        - FileType
        - Processed
        - LineCount
      type: object
    FineTuneEvent:
      properties:
        checkpoint_path:
          type: string
        created_at:
          type: string
        hash:
          type: string
        level:
          enum:
            - null
            - info
            - warning
            - error
            - legacy_info
            - legacy_iwarning
            - legacy_ierror
          type: string
        message:
          type: string
        model_path:
          type: string
        object:
          enum:
            - fine-tune-event
          type: string
        param_count:
          type: integer
        step:
          type: integer
        token_count:
          type: integer
        total_steps:
          type: integer
        training_offset:
          type: integer
        type:
          enum:
            - job_pending
            - job_start
            - job_stopped
            - model_downloading
            - model_download_complete
            - training_data_downloading
            - training_data_download_complete
            - validation_data_downloading
            - validation_data_download_complete
            - wandb_init
            - training_start
            - checkpoint_save
            - billing_limit
            - epoch_complete
            - training_complete
            - model_compressing
            - model_compression_complete
            - model_uploading
            - model_upload_complete
            - job_complete
            - job_error
            - cancel_requested
            - job_restarted
            - refund
            - warning
          type: string
        wandb_url:
          type: string
      required:
        - object
        - created_at
        - message
        - type
        - param_count
        - token_count
        - total_steps
        - wandb_url
        - step
        - checkpoint_path
        - model_path
        - training_offset
        - hash
      type: object
    FinetuneDownloadResult:
      properties:
        checkpoint_step:
          type: integer
        filename:
          type: string
        id:
          type: string
        object:
          enum:
            - null
            - local
        size:
          type: integer
      type: object
    FinetuneEvent:
      properties:
        created_at:
          type: string
        hash:
          type: string
        level:
          anyOf:
            - $ref: '#/components/schemas/FinetuneEventLevels'
        message:
          type: string
        object:
          enum:
            - FinetuneEvent
          type: string
        param_count:
          type: integer
        token_count:
          type: integer
        type:
          $ref: '#/components/schemas/FinetuneEventType'
        wandb_url:
          type: string
      type: object
    FinetuneEventLevels:
      enum:
        - null
        - info
        - warning
        - error
        - legacy_info
        - legacy_iwarning
        - legacy_ierror
      type: string
    FinetuneEventType:
      enum:
        - job_pending
        - job_start
        - job_stopped
        - model_downloading
        - model_download_complete
        - training_data_downloading
        - training_data_download_complete
        - validation_data_downloading
        - validation_data_download_complete
        - wandb_init
        - training_start
        - checkpoint_save
        - billing_limit
        - epoch_complete
        - training_complete
        - model_compressing
        - model_compression_complete
        - model_uploading
        - model_upload_complete
        - job_complete
        - job_error
        - cancel_requested
        - job_restarted
        - refund
        - warning
      type: string
    FinetuneJobStatus:
      enum:
        - pending
        - queued
        - running
        - compressing
        - uploading
        - cancel_requested
        - cancelled
        - error
        - completed
      type: string
    FinetuneList:
      properties:
        data:
          items:
            $ref: '#/components/schemas/FinetuneResponse'
          type: array
      required:
        - data
      type: object
    FinetuneListEvents:
      properties:
        data:
          items:
            $ref: '#/components/schemas/FineTuneEvent'
          type: array
      required:
        - data
      type: object
    FinetuneResponse:
      properties:
        batch_size:
          type: integer
        created_at:
          type: string
        epochs_completed:
          type: integer
        eval_steps:
          type: integer
        events:
          items:
            $ref: '#/components/schemas/FinetuneEvent'
          type: array
        id:
          format: uuid
          type: string
        job_id:
          type: string
        learning_rate:
          type: number
        model:
          type: string
        model_output_name:
          type: string
        model_output_path:
          type: string
        n_checkpoints:
          type: integer
        n_epochs:
          type: integer
        n_evals:
          type: integer
        param_count:
          type: integer
        queue_depth:
          type: integer
        status:
          $ref: '#/components/schemas/FinetuneJobStatus'
        token_count:
          type: integer
        total_price:
          type: integer
        training_file:
          type: string
        training_type:
          oneOf:
            - $ref: '#/components/schemas/FullTrainingType'
            - $ref: '#/components/schemas/LoRATrainingType'
          type: object
        trainingfile_numlines:
          type: integer
        trainingfile_size:
          type: integer
        updated_at:
          type: string
        validation_file:
          type: string
        wandb_project_name:
          type: string
        wandb_url:
          type: string
      required:
        - id
        - status
      type: object
    FinishReason:
      enum:
        - stop
        - eos
        - length
        - tool_calls
        - function_call
      type: string
    FullTrainingType:
      properties:
        type:
          enum:
            - Full
          type: string
      required:
        - type
      type: object
    ImageResponse:
      properties:
        data:
          items:
            properties:
              b64_json:
                type: string
              index:
                type: integer
            required:
              - b64_json
              - index
            type: object
          type: array
        id:
          type: string
        model:
          type: string
        object:
          enum:
            - list
          example: list
      required:
        - id
        - model
        - object
        - data
      type: object
    LoRATrainingType:
      properties:
        lora_alpha:
          type: integer
        lora_dropout:
          default: 0.0
          format: float
          type: number
        lora_r:
          type: integer
        lora_trainable_modules:
          default: all-linear
          type: string
        type:
          enum:
            - Lora
          type: string
      required:
        - type
        - lora_r
        - lora_alpha
      type: object
    LogprobsPart:
      properties:
        token_ids:
          description: List of token IDs corresponding to the logprobs
          items:
            type: number
          type: array
        token_logprobs:
          description: List of token log probabilities
          items:
            type: number
          type: array
        tokens:
          description: List of token strings
          items:
            type: string
          type: array
      type: object
    ModelInfo:
      properties:
        context_length:
          example: 2048
          type: integer
        created:
          example: 1692896905
          type: integer
        display_name:
          example: Chronos Hermes (13B)
          type: string
        id:
          example: Austism/chronos-hermes-13b
          type: string
        license:
          example: other
          type: string
        link:
          type: string
        object:
          example: model
          type: string
        organization:
          example: Austism
          type: string
        pricing:
          $ref: '#/components/schemas/Pricing'
        type:
          enum:
            - chat
            - language
            - code
            - image
            - embedding
            - moderation
            - rerank
          example: chat
      required:
        - id
        - object
        - created
        - type
      type: object
    ModelInfoList:
      items:
        $ref: '#/components/schemas/ModelInfo'
      type: array
    Pricing:
      properties:
        base:
          example: 0
          type: number
        finetune:
          example: 0
          type: number
        hourly:
          example: 0
          type: number
        input:
          example: 0.29999999999999999
          type: number
        output:
          example: 0.29999999999999999
          type: number
      required:
        - hourly
        - input
        - output
        - base
        - finetune
      type: object
    PromptPart:
      items:
        properties:
          logprobs:
            $ref: '#/components/schemas/LogprobsPart'
          text:
            example: <s>[INST] What is the capital of France? [/INST]
            type: string
        type: object
      type: array
    RerankRequest:
      additionalProperties: false
      properties:
        documents:
          default:
            - text: The llama is a domesticated South American camelid, widely used as a meat and pack animal by Andean cultures since the pre-Columbian era.
              title: Llama
            - text: The giant panda (Ailuropoda melanoleuca), also known as the panda bear or simply panda, is a bear species endemic to China.
              title: Panda
            - text: The guanaco is a camelid native to South America, closely related to the llama. Guanacos are one of two wild South American camelids; the other species is the vicuña, which lives at higher elevations.
              title: Guanaco
            - text: The wild Bactrian camel (Camelus ferus) is an endangered species of camel endemic to Northwest China and southwestern Mongolia.
              title: Wild Bactrian camel
          description: List of documents, which can be either strings or objects.
          example:
            text: The llama is a domesticated South American camelid, widely used as a meat and pack animal by Andean cultures since the pre-Columbian era.
            title: Llama
          oneOf:
            - items:
                additionalProperties: true
                type: object
              type: array
            - items:
                example: Our solar system orbits the Milky Way galaxy at about 515,000 mph
                type: string
              type: array
        model:
          default: Salesforce/Llama-Rank-V1
          description: The model to be used for the rerank request.
          example: Salesforce/Llama-Rank-V1
          type: string
        query:
          default: What animals can I find near Peru?
          description: The search query to be used for ranking.
          example: What animals can I find near Peru?
          type: string
        rank_fields:
          description: List of keys in the JSON Object document to rank by. Defaults to use all supplied keys for ranking.
          example:
            - title
            - text
          items:
            type: string
          type: array
        return_documents:
          description: Whether to return supplied documents with the response.
          example: true
          type: boolean
        top_n:
          description: The number of top results to return.
          example: 2
          type: integer
      required:
        - model
        - query
        - documents
      type: object
    RerankResponse:
      properties:
        id:
          description: Request ID
          example: 9dfa1a09-5ebc-4a40-970f-586cb8f4ae47
          type: string
        model:
          description: The model to be used for the rerank request.
          example: salesforce/turboranker-0.8-3778-6328
          type: string
        object:
          description: Object type
          enum:
            - rerank
          example: rerank
          type: string
        results:
          example:
            - document:
                text: '{"title":"Llama","text":"The llama is a domesticated South American camelid, widely used as a meat and pack animal by Andean cultures since the pre-Columbian era."}'
              index: 0
              relevance_score: 0.29980177813003117
            - document:
                text: '{"title":"Guanaco","text":"The guanaco is a camelid native to South America, closely related to the llama. Guanacos are one of two wild South American camelids; the other species is the vicuña, which lives at higher elevations."}'
              index: 2
              relevance_score: 0.27524475273543492
          items:
            properties:
              document:
                properties:
                  text:
                    nullable: true
                    type: string
                type: object
              index:
                type: integer
              relevance_score:
                type: number
            required:
              - index
              - relevance_score
              - document
            type: object
          type: array
        usage:
          $ref: '#/components/schemas/UsageData'
          example:
            completion_tokens: 0
            prompt_tokens: 1837
            total_tokens: 1837
      required:
        - object
        - model
        - results
      type: object
    StreamSentinel:
      properties:
        data:
          enum:
            - '[DONE]'
          title: stream_signal
          type: string
      required:
        - data
      type: object
    ToolChoice:
      properties:
        function:
          properties:
            arguments:
              type: string
            name:
              example: function_name
              type: string
          required:
            - name
            - arguments
          type: object
        id:
          type: string
        index:
          type: number
        type:
          enum:
            - function
          type: string
      required:
        - id
        - type
        - function
        - index
      type: object
    ToolsPart:
      properties:
        function:
          properties:
            description:
              example: A description of the function.
              type: string
            name:
              example: function_name
              type: string
            parameters:
              additionalProperties: true
              description: A map of parameter names to their values.
              type: object
          type: object
        type:
          example: tool_type
          type: string
      type: object
    UsageData:
      nullable: true
      properties:
        completion_tokens:
          type: integer
        prompt_tokens:
          type: integer
        total_tokens:
          type: integer
      required:
        - prompt_tokens
        - completion_tokens
        - total_tokens
      type: object
  securitySchemes:
    bearerAuth:
      scheme: bearer
      type: http
      x-bearer-format: bearer
      x-default: default
info:
  contact:
    name: Together Support
    url: https://www.together.ai/contact
  description: The Together REST API. Please see https://docs.together.ai for more details.
  license:
    name: MIT
    url: https://github.com/togethercomputer/openapi/blob/main/LICENSE
  termsOfService: https://www.together.ai/terms-of-service
  title: Together APIs
  version: 2.0.0
openapi: 3.0.3
paths:
  /chat/completions:
    post:
      deprecated: false
      description: Query a chat model.
      operationId: chat-completions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatCompletionRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatCompletionResponse'
            text/event-stream:
              schema:
                $ref: '#/components/schemas/ChatCompletionStream'
          description: "200"
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: BadRequest
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: NotFound
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: RateLimit
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Overloaded
        "504":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Timeout
      summary: Create chat completion
      tags:
        - Chat
  /completions:
    post:
      deprecated: false
      description: Query a language, code, or image model.
      operationId: completions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompletionRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompletionResponse'
            text/event-stream:
              schema:
                $ref: '#/components/schemas/CompletionStream'
          description: "200"
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: BadRequest
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: NotFound
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: RateLimit
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Overloaded
        "504":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Timeout
      summary: Create completion
      tags:
        - Completion
  /embeddings:
    post:
      deprecated: false
      description: Query an embedding model for a given string of text.
      operationId: embeddings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmbeddingsRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmbeddingsResponse'
          description: "200"
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: BadRequest
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: NotFound
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: RateLimit
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Overloaded
        "504":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Timeout
      summary: Create embedding
      tags:
        - Embeddings
  /files:
    get:
      description: List the metadata for all uploaded data files.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileList'
          description: List of files
      summary: List all files
      tags:
        - Files
  /files/{id}:
    delete:
      description: Delete a previously uploaded data file.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileDeleteResponse'
          description: File deleted successfully
      summary: Delete a file
      tags:
        - Files
    get:
      description: List the metadata for a single uploaded data file.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileResponse'
          description: File retrieved successfully
      summary: List file
      tags:
        - Files
  /files/{id}/content:
    get:
      description: Get the contents of a single uploaded data file.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileObject'
          description: File content retrieved successfully
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Internal Server Error
      summary: Get file contents
      tags:
        - Files
  /fine-tunes:
    get:
      description: List the metadata for all fine-tuning jobs.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinetuneList'
          description: List of fine-tune jobs
      summary: List all jobs
      tags:
        - Fine-tuning
    post:
      description: Use a model to create a fine-tuning job.
      requestBody:
        content:
          application/json:
            schema:
              properties:
                batch_size:
                  default: 32
                  description: Batch size for fine-tuning
                  type: integer
                learning_rate:
                  default: 1.0000000000000001E-05
                  description: Learning rate multiplier to use for training
                  format: float
                  type: number
                model:
                  description: Name of the base model to run fine-tune job on
                  type: string
                n_checkpoints:
                  default: 1
                  description: Number of checkpoints to save during fine-tuning
                  type: integer
                n_epochs:
                  default: 1
                  description: Number of epochs for fine-tuning
                  type: integer
                n_evals:
                  default: 0
                  description: Number of evaluations to be run on a given validation set during training
                  type: integer
                suffix:
                  description: Suffix that will be added to your fine-tuned model name
                  type: string
                training_file:
                  description: File-ID of a training file uploaded to the Together API
                  type: string
                training_type:
                  oneOf:
                    - $ref: '#/components/schemas/FullTrainingType'
                    - $ref: '#/components/schemas/LoRATrainingType'
                  type: object
                validation_file:
                  description: File-ID of a validation file uploaded to the Together API
                  type: string
                wandb_api_key:
                  description: API key for Weights & Biases integration
                  type: string
              required:
                - training_file
                - model
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinetuneResponse'
          description: Fine-tuning job initiated successfully
      summary: Create job
      tags:
        - Fine-tuning
  /fine-tunes/{id}:
    get:
      description: List the metadata for a single fine-tuning job.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinetuneResponse'
          description: Fine-tune job details retrieved successfully
      summary: List job
      tags:
        - Fine-tuning
  /fine-tunes/{id}/cancel:
    post:
      description: Cancel a currently running fine-tuning job.
      parameters:
        - description: Fine-tune ID to cancel. A string that starts with `ft-`.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinetuneResponse'
          description: Successfully cancelled the fine-tuning job.
        "400":
          description: Invalid request parameters.
        "404":
          description: Fine-tune ID not found.
      summary: Cancel job
      tags:
        - Fine-tuning
  /fine-tunes/{id}/events:
    get:
      description: List the events for a single fine-tuning job.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinetuneListEvents'
          description: List of fine-tune events
      summary: List job events
      tags:
        - Fine-tuning
  /finetune/download:
    get:
      description: Download a compressed fine-tuned model or checkpoint to local disk.
      parameters:
        - description: Fine-tune ID to download. A string that starts with `ft-`.
          in: query
          name: ft_id
          required: true
          schema:
            type: string
        - description: Specifies step number for checkpoint to download.
          in: query
          name: checkpoint_step
          required: false
          schema:
            type: integer
        - description: Specifies output file name for downloaded model. Defaults to `$PWD/{model_name}.{extension}`.
          in: query
          name: output
          required: false
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinetuneDownloadResult'
          description: Successfully downloaded the fine-tuned model or checkpoint.
        "400":
          description: Invalid request parameters.
        "404":
          description: Fine-tune ID not found.
      summary: Download model
      tags:
        - Fine-tuning
  /images/generations:
    post:
      description: Use an image model to generate an image for a given prompt.
      requestBody:
        content:
          application/json:
            schema:
              properties:
                height:
                  default: 1024
                  description: Height of the image to generate in number of pixels.
                  type: integer
                model:
                  default: stabilityai/stable-diffusion-xl-base-1.0
                  description: The model to use for image generation.
                  example: stabilityai/stable-diffusion-xl-base-1.0
                  type: string
                n:
                  default: 1
                  description: Number of image results to generate.
                  type: integer
                negative_prompt:
                  description: The prompt or prompts not to guide the image generation.
                  type: string
                prompt:
                  default: cat floating in space, cinematic
                  description: A description of the desired images. Maximum length varies by model.
                  example: cat floating in space, cinematic
                  type: string
                seed:
                  description: Seed used for generation. Can be used to reproduce image generations.
                  type: integer
                steps:
                  default: 20
                  description: Number of generation steps.
                  type: integer
                width:
                  default: 1024
                  description: Width of the image to generate in number of pixels.
                  type: integer
              required:
                - prompt
                - model
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageResponse'
          description: Image generated successfully
      summary: Create image
      tags:
        - Images
  /models:
    get:
      deprecated: false
      description: Lists all of Together's open-source models
      operationId: models
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelInfoList'
          description: "200"
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: BadRequest
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: NotFound
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: RateLimit
        "504":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Timeout
      summary: List all models
      tags:
        - Models
  /rerank:
    post:
      deprecated: false
      description: Query a reranker model
      operationId: rerank
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RerankRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RerankResponse'
          description: "200"
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: BadRequest
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: NotFound
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: RateLimit
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Overloaded
        "504":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorData'
          description: Timeout
      summary: Create a rerank request
      tags:
        - Rerank
security:
  - bearerAuth: []
servers:
  - url: https://api.together.xyz/v1
