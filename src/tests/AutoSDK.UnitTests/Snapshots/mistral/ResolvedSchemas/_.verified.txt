[
  AgentsCompletionRequest(class)[agents],
    AgentId(string)[agents],
    MaxTokens(int)[agents],
    Messages(array)[agents],
      MessagesItem(oneOf)[agents],
        AgentsCompletionRequestMessageDiscriminator(class)[agents],
          AgentsCompletionRequestMessageDiscriminatorRole(enum)[agents],
        UserMessage(ref)[agents],
        AssistantMessage(ref)[agents],
        ToolMessage(ref)[agents],
    MinTokens(int)[agents],
    RandomSeed(int)[agents],
    ResponseFormat(ref)[agents],
    Stop(anyOf)[agents],
      StopVariant1(string)[agents],
      StopVariant2(array)[agents],
        StopVariant2Item(string)[agents],
    Stream(bool)[agents],
    ToolChoice(anyOf)[agents],
      ToolChoice3(ref)[agents],
      ToolChoiceEnum(ref)[agents],
    Tools(array)[agents],
      Tool(ref)[agents],
  UserMessage(class)[agents, chat],
    Content2(anyOf)[agents, chat],
      ContentVariant1(string)[agents, chat],
      ContentVariant2(array)[agents, chat],
        ContentChunk(ref)[agents, chat],
    UserMessageRole(enum)[agents, chat],
  ContentChunk(oneOf)[agents, chat],
    ContentChunkDiscriminator(class)[agents, chat],
      ContentChunkDiscriminatorType(enum)[agents, chat],
    TextChunk(ref)[agents, chat],
    ImageURLChunk(ref)[agents, chat],
  TextChunk(class)[chat, agents],
    Text(string)[chat, agents],
    TextChunkType(enum)[chat, agents],
  ImageURLChunk(class)[agents, chat],
    ImageUrl2(anyOf)[agents, chat],
      ImageURL(ref)[],
      ImageUrlVariant2(string)[],
    ImageURLChunkType(enum)[agents, chat],
  ImageURL(class)[],
    Detail(string)[],
    Url(string)[],
  AssistantMessage(class)[agents, chat, fim, embeddings],
    Content(string)[agents, chat, fim, embeddings],
    Prefix(bool)[agents, chat, fim, embeddings],
    AssistantMessageRole(enum)[agents, chat, fim, embeddings],
    ToolCalls(array)[agents, chat, fim, embeddings],
      ToolCall(ref)[agents, chat],
  ToolCall(class)[agents, chat, fim],
    FunctionCall(ref)[agents, chat, fim],
    Id(string)[agents, chat, fim],
    ToolTypes(ref)[agents, chat, fim],
  FunctionCall(class)[agents, chat, fim],
    Arguments(anyOf)[agents, chat, fim],
      FunctionCallArguments(class)[agents, chat, fim],
      ArgumentsVariant2(string)[agents, chat, fim],
    Name(string)[agents, chat, fim],
  ToolTypes(enum)[agents, chat, fim],
  ToolMessage(class)[agents, chat],
    Content(string)[agents, chat],
    Name(string)[agents, chat],
    ToolMessageRole(enum)[agents, chat],
    ToolCallId(string)[agents, chat],
  ResponseFormat(class)[agents, chat],
    ResponseFormats(ref)[agents, chat],
  ResponseFormats(enum)[agents, chat],
  ToolChoice3(class)[agents, chat],
    FunctionName(ref)[agents, chat],
    ToolTypes(ref)[agents, chat],
  FunctionName(class)[agents, chat],
    Name(string)[agents, chat],
  ToolChoiceEnum(enum)[agents, chat],
  Tool(class)[agents, chat],
    Function(ref)[agents, chat],
    ToolTypes(ref)[agents, chat],
  Function(class)[agents, chat],
    Description(string)[agents, chat],
    Name(string)[agents, chat],
    FunctionParameters(class)[agents, chat],
  ArchiveFTModelOut(class)[models],
    Archived(bool)[models],
    Id(string)[models],
    ArchiveFTModelOutObject(enum)[models],
  BaseModelCard(class)[models],
    Aliases(array)[models],
      AliasesItem(string)[models],
    ModelCapabilities(ref)[models],
    Created(int)[models],
    Deprecation(DateTime)[models],
    Description(string)[models],
    Id(string)[models],
    MaxContextLength(int)[models],
    Name(string)[models],
    Object(string)[models],
    OwnedBy(string)[models],
    BaseModelCardType(enum)[models],
  ModelCapabilities(class)[models],
    CompletionChat(bool)[models],
    CompletionFim(bool)[models],
    FineTuning(bool)[models],
    FunctionCalling(bool)[models],
    Vision(bool)[models],
  ChatCompletionChoice(class)[agents, chat, fim, embeddings],
    ChatCompletionChoiceFinishReason(enum)[agents, chat, fim, embeddings],
    Index(int)[agents, chat, fim, embeddings],
    AssistantMessage(ref)[agents, chat, fim, embeddings],
  ChatCompletionRequest(class)[chat],
    MaxTokens(int)[chat],
    Messages(array)[chat],
      MessagesItem2(oneOf)[chat],
        ChatCompletionRequestMessageDiscriminator(class)[chat],
          ChatCompletionRequestMessageDiscriminatorRole(enum)[chat],
        SystemMessage(ref)[chat],
        UserMessage(ref)[chat],
        AssistantMessage(ref)[chat],
        ToolMessage(ref)[chat],
    MinTokens(int)[chat],
    Model(string)[chat],
    RandomSeed(int)[chat],
    ResponseFormat(ref)[chat],
    SafePrompt(bool)[chat],
    Stop2(anyOf)[chat],
      StopVariant1(string)[chat],
      StopVariant2(array)[chat],
        StopVariant2Item(string)[chat],
    Stream(bool)[chat],
    Temperature(double)[chat],
    ToolChoice2(anyOf)[chat],
      ToolChoice3(ref)[chat],
      ToolChoiceEnum(ref)[chat],
    Tools(array)[chat],
      Tool(ref)[chat],
    TopP(double)[chat],
  SystemMessage(class)[chat],
    Content(anyOf)[chat],
      ContentVariant1(string)[chat],
      ContentVariant2(array)[chat],
        TextChunk(ref)[chat],
    SystemMessageRole(enum)[chat],
  ChatCompletionResponse(allOf)[agents, chat, fim],
    ChatCompletionResponseBase(ref)[agents, chat, fim],
    ChatCompletionResponseVariant2(class)[agents, chat, fim],
      Choices(array)[agents, chat, fim],
        ChatCompletionChoice(ref)[agents, chat, fim],
  ChatCompletionResponseBase(allOf)[agents, chat, fim],
    ResponseBase(ref)[agents, chat, fim],
    ChatCompletionResponseBaseVariant2(class)[agents, chat, fim],
      Created(int)[agents, chat, fim],
  ResponseBase(class)[embeddings, agents, chat, fim],
    Id(string)[embeddings, agents, chat, fim],
    Model(string)[embeddings, agents, chat, fim],
    Object(string)[embeddings, agents, chat, fim],
    UsageInfo(ref)[embeddings, agents, chat, fim],
  UsageInfo(class)[embeddings, agents, chat, fim],
    CompletionTokens(int)[embeddings, agents, chat, fim],
    PromptTokens(int)[embeddings, agents, chat, fim],
    TotalTokens(int)[embeddings, agents, chat, fim],
  CheckpointOut(class)[fine-tuning],
    CreatedAt(int)[fine-tuning],
    MetricOut(ref)[fine-tuning],
    StepNumber(int)[fine-tuning],
  MetricOut(class)[fine-tuning],
    TrainLoss(double)[fine-tuning],
    ValidLoss(double)[fine-tuning],
    ValidMeanTokenAccuracy(double)[fine-tuning],
  CompletionChunk(class)[chat, fim],
    Choices(array)[chat, fim],
      CompletionResponseStreamChoice(ref)[chat, fim],
    Created(int)[chat, fim],
    Id(string)[chat, fim],
    Model(string)[chat, fim],
    Object(string)[chat, fim],
    UsageInfo(ref)[chat, fim],
  CompletionResponseStreamChoice(class)[chat, fim],
    DeltaMessage(ref)[chat, fim],
    CompletionResponseStreamChoiceFinishReason(enum)[chat, fim],
    Index(int)[chat, fim],
  DeltaMessage(class)[chat, fim],
    Content(string)[chat, fim],
    Role(string)[chat, fim],
    ToolCalls(array)[chat, fim],
      ToolCall(ref)[chat, fim],
  CompletionEvent(class)[chat, fim],
    CompletionChunk(ref)[chat, fim],
  DeleteFileOut(class)[files],
    Deleted(bool)[files],
    Id(string)[files],
    Object(string)[files],
  DeleteModelOut(class)[models],
    Deleted(bool)[models],
    Id(string)[models],
    Object(string)[models],
  DetailedJobOut(class)[fine-tuning],
    AutoStart(bool)[fine-tuning],
    Checkpoints(array)[fine-tuning],
      CheckpointOut(ref)[fine-tuning],
    CreatedAt(int)[fine-tuning],
    Events(array)[fine-tuning],
      EventOut(ref)[fine-tuning],
    FineTunedModel(string)[fine-tuning],
    TrainingParameters(ref)[fine-tuning],
    Id(string)[fine-tuning],
    Integrations(array)[fine-tuning],
      IntegrationsItem(oneOf)[fine-tuning],
        DetailedJobOutIntegrationDiscriminator(class)[fine-tuning],
          DetailedJobOutIntegrationDiscriminatorType(enum)[fine-tuning],
        WandbIntegrationOut(ref)[fine-tuning],
    JobType(string)[fine-tuning],
    Metadata(null)[fine-tuning],
    FineTuneableModel(ref)[fine-tuning],
    ModifiedAt(int)[fine-tuning],
    DetailedJobOutObject(enum)[fine-tuning],
    Repositories(array)[fine-tuning],
      RepositoriesItem(oneOf)[fine-tuning],
        DetailedJobOutRepositorieDiscriminator(class)[fine-tuning],
          DetailedJobOutRepositorieDiscriminatorType(enum)[fine-tuning],
        GithubRepositoryOut(ref)[fine-tuning],
    DetailedJobOutStatus(enum)[fine-tuning],
    Suffix(string)[fine-tuning],
    TrainedTokens(int)[fine-tuning],
    TrainingFiles(array)[fine-tuning],
      TrainingFilesItem(string)[fine-tuning],
    ValidationFiles(array)[fine-tuning],
      ValidationFilesItem(string)[fine-tuning],
  EventOut(class)[fine-tuning],
    CreatedAt(int)[fine-tuning],
    EventOutData(class)[fine-tuning],
    Name(string)[fine-tuning],
  TrainingParameters(class)[fine-tuning],
    Epochs(double)[fine-tuning],
    FimRatio(double)[fine-tuning],
    LearningRate(double)[fine-tuning],
    TrainingSteps(int)[fine-tuning],
    WarmupFraction(double)[fine-tuning],
    WeightDecay(double)[fine-tuning],
  WandbIntegrationOut(class)[fine-tuning],
    Name(string)[fine-tuning],
    Project(string)[fine-tuning],
    RunName(string)[fine-tuning],
    WandbIntegrationOutType(enum)[fine-tuning],
  FineTuneableModel(enum)[fine-tuning],
  GithubRepositoryOut(class)[fine-tuning],
    CommitId(string)[fine-tuning],
    Name(string)[fine-tuning],
    Owner(string)[fine-tuning],
    Ref(string)[fine-tuning],
    GithubRepositoryOutType(enum)[fine-tuning],
    Weight(double)[fine-tuning],
  EmbeddingRequest(class)[embeddings],
    EncodingFormat(string)[embeddings],
    Input(anyOf)[embeddings],
      InputVariant1(string)[embeddings],
      InputVariant2(array)[embeddings],
        InputVariant2Item(string)[embeddings],
    Model(string)[embeddings],
  EmbeddingResponse(allOf)[embeddings],
    ResponseBase(ref)[embeddings],
    EmbeddingResponseVariant2(class)[embeddings],
      Data(array)[embeddings],
        EmbeddingResponseData(ref)[embeddings],
    EmbeddingResponseVariant3(class)[embeddings],
      Choices(array)[embeddings],
        ChatCompletionChoice(ref)[embeddings],
  EmbeddingResponseData(class)[embeddings],
    Embedding(array)[embeddings],
      EmbeddingItem(double)[embeddings],
    Index(int)[embeddings],
    Object(string)[embeddings],
  FIMCompletionRequest(class)[fim],
    MaxTokens(int)[fim],
    MinTokens(int)[fim],
    Model(string)[fim],
    Prompt(string)[fim],
    RandomSeed(int)[fim],
    Stop3(anyOf)[fim],
      StopVariant1(string)[fim],
      StopVariant2(array)[fim],
        StopVariant2Item(string)[fim],
    Stream(bool)[fim],
    Suffix(string)[fim],
    Temperature(double)[fim],
    TopP(double)[fim],
  FIMCompletionResponse(allOf)[fim],
    ChatCompletionResponse(ref)[fim],
    FIMCompletionResponseVariant2(class)[fim],
      Model(string)[fim],
  FTModelCapabilitiesOut(class)[models],
    CompletionChat(bool)[models],
    CompletionFim(bool)[models],
    FineTuning(bool)[models],
    FunctionCalling(bool)[models],
  FTModelCard(class)[models],
    Aliases(array)[models],
      AliasesItem(string)[models],
    Archived(bool)[models],
    ModelCapabilities(ref)[models],
    Created(int)[models],
    Deprecation(DateTime)[models],
    Description(string)[models],
    Id(string)[models],
    Job(string)[models],
    MaxContextLength(int)[models],
    Name(string)[models],
    Object(string)[models],
    OwnedBy(string)[models],
    Root(string)[models],
    FTModelCardType(enum)[models],
  FTModelOut(class)[models],
    Aliases(array)[models],
      AliasesItem(string)[models],
    Archived(bool)[models],
    FTModelCapabilitiesOut(ref)[models],
    Created(int)[models],
    Description(string)[models],
    Id(string)[models],
    Job(string)[models],
    MaxContextLength(int)[models],
    Name(string)[models],
    FTModelOutObject(enum)[models],
    OwnedBy(string)[models],
    Root(string)[models],
  FileSchema(class)[files],
    Bytes(int)[files],
    CreatedAt(int)[files],
    Filename(string)[files],
    Id(string)[files],
    NumLines(int)[files],
    Object(string)[files],
    FileSchemaPurpose(enum)[files],
    SampleType(ref)[files],
    Source(ref)[files],
  SampleType(enum)[files],
  Source(enum)[files],
  GithubRepositoryIn(class)[fine-tuning],
    Name(string)[fine-tuning],
    Owner(string)[fine-tuning],
    Ref(string)[fine-tuning],
    Token(string)[fine-tuning],
    GithubRepositoryInType(enum)[fine-tuning],
    Weight(double)[fine-tuning],
  HTTPValidationError(class)[agents, chat, embeddings, fim, models],
    Detail(array)[agents, chat, embeddings, fim, models],
      ValidationError(ref)[agents, chat, embeddings, fim, models],
  ValidationError(class)[agents, chat, embeddings, fim, models],
    Loc(array)[agents, chat, embeddings, fim, models],
      LocItem(anyOf)[agents, chat, embeddings, fim, models],
        LocItemVariant1(string)[agents, chat, embeddings, fim, models],
        LocItemVariant2(int)[agents, chat, embeddings, fim, models],
    Msg(string)[agents, chat, embeddings, fim, models],
    Type(string)[agents, chat, embeddings, fim, models],
  JobIn(class)[fine-tuning],
    AutoStart(bool)[fine-tuning],
    TrainingParametersIn(ref)[fine-tuning],
    Integrations(array)[fine-tuning],
      IntegrationsItem2(oneOf)[fine-tuning],
        JobInIntegrationDiscriminator(class)[fine-tuning],
          JobInIntegrationDiscriminatorType(enum)[fine-tuning],
        WandbIntegration(ref)[fine-tuning],
    FineTuneableModel(ref)[fine-tuning],
    Repositories(array)[fine-tuning],
      RepositoriesItem2(oneOf)[fine-tuning],
        JobInRepositorieDiscriminator(class)[fine-tuning],
          JobInRepositorieDiscriminatorType(enum)[fine-tuning],
        GithubRepositoryIn(ref)[fine-tuning],
    Suffix(string)[fine-tuning],
    TrainingFiles(array)[fine-tuning],
      TrainingFile(ref)[fine-tuning],
    ValidationFiles(array)[fine-tuning],
      ValidationFilesItem(string)[fine-tuning],
  TrainingParametersIn(class)[fine-tuning],
    Epochs(double)[fine-tuning],
    FimRatio(double)[fine-tuning],
    LearningRate(double)[fine-tuning],
    TrainingSteps(int)[fine-tuning],
    WarmupFraction(double)[fine-tuning],
    WeightDecay(double)[fine-tuning],
  WandbIntegration(class)[fine-tuning],
    ApiKey(string)[fine-tuning],
    Name(string)[fine-tuning],
    Project(string)[fine-tuning],
    RunName(string)[fine-tuning],
    WandbIntegrationType(enum)[fine-tuning],
  TrainingFile(class)[fine-tuning],
    FileId(string)[fine-tuning],
    Weight(double)[fine-tuning],
  JobMetadataOut(class)[],
    Cost(double)[],
    CostCurrency(string)[],
    DataTokens(int)[],
    EstimatedStartTime(int)[],
    ExpectedDurationSeconds(int)[],
    TrainTokens(int)[],
    TrainTokensPerStep(int)[],
  JobOut(class)[fine-tuning],
    AutoStart(bool)[fine-tuning],
    CreatedAt(int)[fine-tuning],
    FineTunedModel(string)[fine-tuning],
    TrainingParameters(ref)[fine-tuning],
    Id(string)[fine-tuning],
    Integrations(array)[fine-tuning],
      IntegrationsItem3(oneOf)[fine-tuning],
        JobOutIntegrationDiscriminator(class)[fine-tuning],
          JobOutIntegrationDiscriminatorType(enum)[fine-tuning],
        WandbIntegrationOut(ref)[fine-tuning],
    JobType(string)[fine-tuning],
    Metadata(null)[fine-tuning],
    FineTuneableModel(ref)[fine-tuning],
    ModifiedAt(int)[fine-tuning],
    JobOutObject(enum)[fine-tuning],
    Repositories(array)[fine-tuning],
      RepositoriesItem3(oneOf)[fine-tuning],
        JobOutRepositorieDiscriminator(class)[fine-tuning],
          JobOutRepositorieDiscriminatorType(enum)[fine-tuning],
        GithubRepositoryOut(ref)[fine-tuning],
    JobOutStatus(enum)[fine-tuning],
    Suffix(string)[fine-tuning],
    TrainedTokens(int)[fine-tuning],
    TrainingFiles(array)[fine-tuning],
      TrainingFilesItem(string)[fine-tuning],
    ValidationFiles(array)[fine-tuning],
      ValidationFilesItem(string)[fine-tuning],
  JobsOut(class)[fine-tuning],
    Data(array)[fine-tuning],
      JobOut(ref)[fine-tuning],
    JobsOutObject(enum)[fine-tuning],
    Total(int)[fine-tuning],
  LegacyJobMetadataOut(class)[fine-tuning],
    Cost(double)[fine-tuning],
    CostCurrency(string)[fine-tuning],
    DataTokens(int)[fine-tuning],
    Deprecated(bool)[fine-tuning],
    Details(string)[fine-tuning],
    Epochs(double)[fine-tuning],
    EstimatedStartTime(int)[fine-tuning],
    ExpectedDurationSeconds(int)[fine-tuning],
    LegacyJobMetadataOutObject(enum)[fine-tuning],
    TrainTokens(int)[fine-tuning],
    TrainTokensPerStep(int)[fine-tuning],
    TrainingSteps(int)[fine-tuning],
  ListFilesOut(class)[files],
    Data(array)[files],
      FileSchema(ref)[files],
    Object(string)[files],
  ModelList(class)[models],
    Data(array)[models],
      DataItem(oneOf)[models],
        ModelListDataItemDiscriminator(class)[models],
          ModelListDataItemDiscriminatorType(enum)[models],
        BaseModelCard(ref)[models],
        FTModelCard(ref)[models],
    Object(string)[models],
  RetrieveFileOut(class)[files],
    Bytes(int)[files],
    CreatedAt(int)[files],
    Filename(string)[files],
    Id(string)[files],
    NumLines(int)[files],
    Object(string)[files],
    RetrieveFileOutPurpose(enum)[files],
    SampleType(ref)[files],
    Source(ref)[files],
  UnarchiveFTModelOut(class)[models],
    Archived(bool)[models],
    Id(string)[models],
    UnarchiveFTModelOutObject(enum)[models],
  UpdateFTModelIn(class)[models],
    Description(string)[models],
    Name(string)[models],
  UploadFileOut(class)[files],
    Bytes(int)[files],
    CreatedAt(int)[files],
    Filename(string)[files],
    Id(string)[files],
    NumLines(int)[files],
    Object(string)[files],
    UploadFileOutPurpose(enum)[files],
    SampleType(ref)[files],
    Source(ref)[files],
  AgentsCompletionRequest(ref)[agents],
  ChatCompletionRequest(ref)[chat],
  EmbeddingRequest(ref)[embeddings],
  FilesApiRoutesUploadFileRequest(class)[files],
    File(byte[])[files],
    FilesApiRoutesUploadFileRequestPurpose(enum)[files],
  FIMCompletionRequest(ref)[fim],
  JobIn(ref)[fine-tuning],
  UpdateFTModelIn(ref)[models],
  FilesApiRoutesDeleteFileFileId(string)[files],
  FilesApiRoutesRetrieveFileFileId(string)[files],
  JobsApiRoutesFineTuningGetFineTuningJobsPage(int)[fine-tuning],
  JobsApiRoutesFineTuningGetFineTuningJobsPageSize(int)[fine-tuning],
  JobsApiRoutesFineTuningGetFineTuningJobsModel(string)[fine-tuning],
  JobsApiRoutesFineTuningGetFineTuningJobsCreatedAfter(DateTime)[fine-tuning],
  JobsApiRoutesFineTuningGetFineTuningJobsCreatedByMe(bool)[fine-tuning],
  JobsApiRoutesFineTuningGetFineTuningJobsStatus(enum)[fine-tuning],
  JobsApiRoutesFineTuningGetFineTuningJobsWandbProject(string)[fine-tuning],
  JobsApiRoutesFineTuningGetFineTuningJobsWandbName(string)[fine-tuning],
  JobsApiRoutesFineTuningGetFineTuningJobsSuffix(string)[fine-tuning],
  JobsApiRoutesFineTuningCreateFineTuningJobDryRun(bool)[fine-tuning],
  JobsApiRoutesFineTuningGetFineTuningJobJobId(string)[fine-tuning],
  JobsApiRoutesFineTuningCancelFineTuningJobJobId(string)[fine-tuning],
  JobsApiRoutesFineTuningStartFineTuningJobJobId(string)[fine-tuning],
  JobsApiRoutesFineTuningUpdateFineTunedModelModelId(string)[models],
  JobsApiRoutesFineTuningUnarchiveFineTunedModelModelId(string)[models],
  JobsApiRoutesFineTuningArchiveFineTunedModelModelId(string)[models],
  DeleteModelV1ModelsModelIdDeleteModelId(string)[models],
  RetrieveModelV1ModelsModelIdGetModelId(string)[models],
  ChatCompletionResponse(ref)[agents],
  HTTPValidationError(ref)[agents],
  ChatCompletionResponse(ref)[chat],
  CompletionEvent(ref)[chat],
  HTTPValidationError(ref)[chat],
  EmbeddingResponse(ref)[embeddings],
  HTTPValidationError(ref)[embeddings],
  ListFilesOut(ref)[files],
  UploadFileOut(ref)[files],
  DeleteFileOut(ref)[files],
  RetrieveFileOut(ref)[files],
  FIMCompletionResponse(ref)[fim],
  CompletionEvent(ref)[fim],
  HTTPValidationError(ref)[fim],
  JobsOut(ref)[fine-tuning],
  JobsApiRoutesFineTuningCreateFineTuningJobResponse(anyOf)[fine-tuning],
    JobOut(ref)[fine-tuning],
    LegacyJobMetadataOut(ref)[fine-tuning],
  DetailedJobOut(ref)[fine-tuning],
  DetailedJobOut(ref)[fine-tuning],
  DetailedJobOut(ref)[fine-tuning],
  FTModelOut(ref)[models],
  UnarchiveFTModelOut(ref)[models],
  ArchiveFTModelOut(ref)[models],
  ModelList(ref)[models],
  HTTPValidationError(ref)[models],
  DeleteModelOut(ref)[models],
  HTTPValidationError(ref)[models],
  RetrieveModelV1ModelsModelIdGetResponse(oneOf)[models],
    RetrieveModelV1ModelsModelIdGetResponseDiscriminator(class)[models],
      RetrieveModelV1ModelsModelIdGetResponseDiscriminatorType(enum)[models],
    BaseModelCard(ref)[models],
    FTModelCard(ref)[models],
  HTTPValidationError(ref)[models]
]