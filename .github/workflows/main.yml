name: Publish
on:
  push:
    branches:
      - main
    tags:
      - v**

permissions:
  contents: write

jobs:
  publish:
    name: Publish
    uses: HavenDV/workflows/.github/workflows/dotnet_build-test-publish.yml@main
    with:
      generate-build-number: false
      conventional-commits-publish-conditions: false
      additional-test-arguments: '--logger GitHubActions'
    secrets:
      nuget-key: ${{ secrets.NUGET_KEY }}

  test-cli:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        spec:
          - ai21.json
          - anthropic.yaml
          - assemblyai.yaml
          - cohere.yaml
          #- github.yaml
          - huggingface.yaml
          - ipinfo.yaml
          - langsmith.json
          - leonardo.yaml
          - mystic.yaml
          - ollama.yaml
          - openai.yaml
          - petstore.yaml
          - replicate.yaml
          - special-cases.yaml
          - together.yaml
          - heygen.yaml
          - instill.yaml
          - ideogram.yaml
          - google-gemini.yaml
          - vectara.yaml
          - mistral.yaml
          #- weaviate.yaml #JsonSerializerContext.g.cs(107,33): error SYSLIB1031: There are multiple types named 'Object'. Source was generated for the first one detected. Use 'JsonSerializableAttribute.TypeInfoPropertyName' to resolve this collision.
          - elevenlabs.json
          - jina.json
          - recraft.yaml
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Generate code
        run: dotnet run --project src/libs/AutoSDK.CLI
          init
          TestSolution
          TestApi
          https://raw.githubusercontent.com/api/openapi.json
          TestCompany
          --output TestProject
          --add-tests false

      - name: Generate code
        run: dotnet run --project src/libs/AutoSDK.CLI
          generate specs/${{ matrix.spec }}
          --namespace TestSolution
          --targetFramework net8.0
          --output TestProject/src/libs/TestSolution/Generated
          --ignore-openapi-errors

      - name: Build
        run: dotnet build TestProject
          /p:TreatWarningsAsErrors=true

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [publish, test-cli]
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create release
        run: gh release create ${{ github.ref_name }}
          --title "${{ github.ref_name }}"
          --generate-notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}